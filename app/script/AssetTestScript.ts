import type { IEthereumVirtualMachine } from "../class/ethereumVirtualMachine/IEthereumVirtualMachine.ts";
import type { ISolFile } from "../class/host/file/ISolFile.ts";
import { EthereumVirtualMachine } from "../class/ethereumVirtualMachine/EthereumVirtualMachine.ts";
import { ethers as Ethers } from "ethers";
import { SolFile } from "../class/host/file/SolFile.ts";
import { Path } from "../class/host/Path.ts";
import { secret } from "../class/host/Secret.ts";
import * as TsResult from "ts-results";

(async function() {
    const mainnet: string = "https://polygon-rpc.com";
    const fork: string = "https://rpc.tenderly.co/fork/35be7b7e-6871-475e-a56e-4fda35e0bb87";
    const url: string = mainnet;
    const key: TsResult.Option<string> = secret("polygonPrivateKey");
    const node: Ethers.JsonRpcProvider = new Ethers.JsonRpcProvider(url);
    const signer: Ethers.Wallet = new Ethers.Wallet(key.unwrap(), node);
    const machine: IEthereumVirtualMachine = EthereumVirtualMachine(signer);
    const abi = [
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "path",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256",
                    "name": "targetAllocation",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "InsufficientYield",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PairIsWorthless",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PairNotFound",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PathCannotBeLongerThan10",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PathCannotBeShorterThan2",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint8",
                    "name": "decimals0",
                    "type": "uint8"
                },
                {
                    "internalType": "uint8",
                    "name": "decimals1",
                    "type": "uint8"
                }
            ],
            "name": "PrecisionLoss",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UnrecognizedLayout",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256"
                }
            ],
            "name": "Purchase",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256"
                }
            ],
            "name": "Sale",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "bestAssets",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "bestBuySideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "bestSellSideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "buy",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "buySidePath",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "buySideQuote",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "buySideYield",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "realAssets",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "realBuySideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "realSellSideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "sell",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "sellSidePath",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "sellSideQuote",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "sellSideYield",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetAllocation",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "percentage",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ];
    const bytecode = "608060405234801561000f575f80fd5b506040516142c03803806142c083398181016040528101906100319190610fc3565b336100418161021d60201b60201c565b505f825190506002811015610082576040517fcc56455800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a8111156100bd576040517f119a55b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b818110156101555760018482815181106100dc576100db61101d565b5b6020026020010151908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018161014e9190611077565b90506100bf565b505f73ffffffffffffffffffffffffffffffffffffffff1661017b6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16036101c8576040517fd719ab6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6101d761038c60201b60201c565b0361020e576040517fbc21eb9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600281905550505050611525565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f735757371414417b8c6caad45baef941abc7d3ab3273ffffffffffffffffffffffffffffffffffffffff1663e6a4390561031d61045d60201b60201c565b61032b61049f60201b60201c565b6040518363ffffffff1660e01b81526004016103489291906110b9565b602060405180830381865afa158015610363573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038791906110e0565b905090565b5f8060028111156103a05761039f61110b565b5b6103ae6104f060201b60201c565b60028111156103c0576103bf61110b565b5b036103da576103d36107f860201b60201c565b905061045a565b600160028111156103ee576103ed61110b565b5b6103fc6104f060201b60201c565b600281111561040e5761040d61110b565b5b036104285761042161091260201b60201c565b905061045a565b6040517f5b9c3c8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f60015f815481106104725761047161101d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60018080805490506104b29190611138565b815481106104c3576104c261101d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6104ff6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610547573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056b91906110e0565b73ffffffffffffffffffffffffffffffffffffffff1661058f61045d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614801561066357506105bb6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610603573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062791906110e0565b73ffffffffffffffffffffffffffffffffffffffff1661064b61049f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16145b15610670575f90506107f5565b61067e6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ea91906110e0565b73ffffffffffffffffffffffffffffffffffffffff1661070e61045d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161480156107e2575061073a6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a691906110e0565b73ffffffffffffffffffffffffffffffffffffffff166107ca61049f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16145b156107f057600190506107f5565b600290505b90565b5f61090d73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec61083a610a2c60201b60201c565b600a61084691906112a6565b610854610aac60201b60201c565b5f815181106108665761086561101d565b5b602002602001015161087c610aac60201b60201c565b60018151811061088f5761088e61101d565b5b60200260200101516040518463ffffffff1660e01b81526004016108b5939291906112ff565b602060405180830381865afa1580156108d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f49190611334565b610902610be260201b60201c565b610c6260201b60201c565b905090565b5f610a2773a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec610954610be260201b60201c565b600a61096091906112a6565b61096e610aac60201b60201c565b6001815181106109815761098061101d565b5b6020026020010151610997610aac60201b60201c565b5f815181106109a9576109a861101d565b5b60200260200101516040518463ffffffff1660e01b81526004016109cf939291906112ff565b602060405180830381865afa1580156109ea573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0e9190611334565b610a1c610be260201b60201c565b610c6260201b60201c565b905090565b5f610a3b61045d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a83573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa79190611389565b905090565b60605f600267ffffffffffffffff811115610aca57610ac9610dfa565b5b604051908082528060200260200182016040528015610af85781602001602082028036833780820191505090505b509050610b096102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610b51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b759190611430565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff16915050825f81518110610baf57610bae61101d565b5b6020026020010183600181518110610bca57610bc961101d565b5b60200260200101828152508281525050508091505090565b5f610bf161049f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c39573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c5d9190611389565b905090565b5f610c7583836012610c7d60201b60201c565b905092915050565b5f610ca78483600a610c8f91906112a6565b85600a610c9c91906112a6565b610cb060201b60201c565b90509392505050565b5f610cc2848484610ccb60201b60201c565b90509392505050565b5f805f80198587098587029250828110838203039150505f8103610d0357838281610cf957610cf8611480565b5b0492505050610dce565b808411610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90611507565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610e3082610dea565b810181811067ffffffffffffffff82111715610e4f57610e4e610dfa565b5b80604052505050565b5f610e61610dd5565b9050610e6d8282610e27565b919050565b5f67ffffffffffffffff821115610e8c57610e8b610dfa565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eca82610ea1565b9050919050565b610eda81610ec0565b8114610ee4575f80fd5b50565b5f81519050610ef581610ed1565b92915050565b5f610f0d610f0884610e72565b610e58565b90508083825260208201905060208402830185811115610f3057610f2f610e9d565b5b835b81811015610f595780610f458882610ee7565b845260208401935050602081019050610f32565b5050509392505050565b5f82601f830112610f7757610f76610de6565b5b8151610f87848260208601610efb565b91505092915050565b5f819050919050565b610fa281610f90565b8114610fac575f80fd5b50565b5f81519050610fbd81610f99565b92915050565b5f8060408385031215610fd957610fd8610dde565b5b5f83015167ffffffffffffffff811115610ff657610ff5610de2565b5b61100285828601610f63565b925050602061101385828601610faf565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61108182610f90565b915061108c83610f90565b92508282019050808211156110a4576110a361104a565b5b92915050565b6110b381610ec0565b82525050565b5f6040820190506110cc5f8301856110aa565b6110d960208301846110aa565b9392505050565b5f602082840312156110f5576110f4610dde565b5b5f61110284828501610ee7565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f61114282610f90565b915061114d83610f90565b92508282039050818111156111655761116461104a565b5b92915050565b5f8160011c9050919050565b5f808291508390505b60018511156111c05780860481111561119c5761119b61104a565b5b60018516156111ab5780820291505b80810290506111b98561116b565b9450611180565b94509492505050565b5f826111d85760019050611293565b816111e5575f9050611293565b81600181146111fb576002811461120557611234565b6001915050611293565b60ff8411156112175761121661104a565b5b8360020a91508482111561122e5761122d61104a565b5b50611293565b5060208310610133831016604e8410600b84101617156112695782820a9050838111156112645761126361104a565b5b611293565b6112768484846001611177565b9250905081840481111561128d5761128c61104a565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6112b082610f90565b91506112bb8361129a565b92506112e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111c9565b905092915050565b6112f981610f90565b82525050565b5f6060820190506113125f8301866112f0565b61131f60208301856112f0565b61132c60408301846112f0565b949350505050565b5f6020828403121561134957611348610dde565b5b5f61135684828501610faf565b91505092915050565b6113688161129a565b8114611372575f80fd5b50565b5f815190506113838161135f565b92915050565b5f6020828403121561139e5761139d610dde565b5b5f6113ab84828501611375565b91505092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b6113d6816113b4565b81146113e0575f80fd5b50565b5f815190506113f1816113cd565b92915050565b5f63ffffffff82169050919050565b61140f816113f7565b8114611419575f80fd5b50565b5f8151905061142a81611406565b92915050565b5f805f6060848603121561144757611446610dde565b5b5f611454868287016113e3565b9350506020611465868287016113e3565b92505060406114768682870161141c565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f82825260208201905092915050565b7f4d6174683a206d756c446976206f766572666c6f7700000000000000000000005f82015250565b5f6114f16015836114ad565b91506114fc826114bd565b602082019050919050565b5f6020820190508181035f83015261151e816114e5565b9050919050565b612d8e806115325f395ff3fe608060405234801561000f575f80fd5b5060043610610113575f3560e01c8063960a5a0f116100a0578063e4849b321161006f578063e4849b32146102f5578063ed6d771314610325578063ee3cf29714610343578063f2fde38b14610373578063fb21b9b71461038f57610113565b8063960a5a0f14610259578063a8c2d1f214610277578063c1a2884614610295578063d96a094a146102c557610113565b80636ec80a48116100e75780636ec80a48146101b3578063715018a6146101e3578063847bad3b146101ed57806384bd91831461021d5780638da5cb5b1461023b57610113565b80627f0093146101175780630b5eda36146101355780632f686c921461016557806356c0757314610195575b5f80fd5b61011f6103ad565b60405161012c919061227d565b60405180910390f35b61014f600480360381019061014a91906122e1565b6104cf565b60405161015c919061231b565b60405180910390f35b61017f600480360381019061017a91906122e1565b6104eb565b60405161018c919061231b565b60405180910390f35b61019d610507565b6040516101aa919061231b565b60405180910390f35b6101cd60048036038101906101c891906122e1565b6105c4565b6040516101da919061231b565b60405180910390f35b6101eb6106cd565b005b610207600480360381019061020291906122e1565b6106e0565b604051610214919061231b565b60405180910390f35b61022561070f565b604051610232919061231b565b60405180910390f35b6102436107cc565b6040516102509190612343565b60405180910390f35b6102616107f3565b60405161026e919061231b565b60405180910390f35b61027f6108ac565b60405161028c919061231b565b60405180910390f35b6102af60048036038101906102aa91906122e1565b6108b5565b6040516102bc919061231b565b60405180910390f35b6102df60048036038101906102da91906122e1565b6109be565b6040516102ec919061231b565b60405180910390f35b61030f600480360381019061030a91906122e1565b610d33565b60405161031c919061231b565b60405180910390f35b61032d6110a8565b60405161033a919061227d565b60405180910390f35b61035d600480360381019061035891906122e1565b6111af565b60405161036a919061231b565b60405180910390f35b61038d60048036038101906103889190612386565b6111de565b005b610397611260565b6040516103a4919061231b565b60405180910390f35b60605f60018054905067ffffffffffffffff8111156103cf576103ce6123b1565b5b6040519080825280602002602001820160405280156103fd5781602001602082028036833780820191505090505b5090505f5b6001805490508110156104c75760018160018080549050610423919061240b565b61042d919061240b565b8154811061043e5761043d61243e565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106104795761047861243e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816104c0919061246b565b9050610402565b508091505090565b5f6104e4826104dc611260565b601280611319565b9050919050565b5f610500826104f86107f3565b601280611319565b9050919050565b5f8061051161135d565b73ffffffffffffffffffffffffffffffffffffffff166370a082316105346107cc565b6040518263ffffffff1660e01b81526004016105509190612343565b602060405180830381865afa15801561056b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058f91906124b2565b90505f81036105a1575f9150506105c1565b6105b2816105ad61139f565b611419565b90506105bd816105c4565b9150505b90565b5f8073a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663d06ca61f846105ff6110a8565b6040518363ffffffff1660e01b815260040161061c9291906124dd565b5f60405180830381865afa158015610636573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061065e919061262e565b90505f8160018351610670919061240b565b815181106106815761068061243e565b5b602002602001015190505f61069d8261069861142e565b611419565b90506106a8856104eb565b81106106c1576106b7856104eb565b93505050506106c8565b8093505050505b919050565b6106d56114a8565b6106de5f611526565b565b5f806106eb836104eb565b90505f6106f7846105c4565b905061070681836012806115e7565b92505050919050565b5f8061071961135d565b73ffffffffffffffffffffffffffffffffffffffff166370a0823161073c6107cc565b6040518263ffffffff1660e01b81526004016107589190612343565b602060405180830381865afa158015610773573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061079791906124b2565b90505f81036107a9575f9150506107c9565b6107ba816107b561139f565b611419565b90506107c5816104eb565b9150505b90565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80600281111561080757610806612675565b5b61080f611656565b600281111561082157610820612675565b5b036108355761082e61192e565b90506108a9565b6001600281111561084957610848612675565b5b610851611656565b600281111561086357610862612675565b5b0361087757610870611a2a565b90506108a9565b6040517f5b9c3c8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f600254905090565b5f8073a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663d06ca61f846108f06103ad565b6040518363ffffffff1660e01b815260040161090d9291906124dd565b5f60405180830381865afa158015610927573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061094f919061262e565b90505f8160018351610961919061240b565b815181106109725761097161243e565b5b602002602001015190505f61098e8261098961139f565b611419565b9050610999856104cf565b81106109b2576109a8856104cf565b93505050506109b9565b8093505050505b919050565b5f6109c76114a8565b6109cf611b26565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd6109f26107cc565b30610a06866012610a0161142e565b611b77565b6040518463ffffffff1660e01b8152600401610a24939291906126a2565b6020604051808303815f875af1158015610a40573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a64919061270c565b506804e1003b28d9280000610a78836111af565b1015610ab0576040517ffa3505cf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ab8611b26565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff5f6040518363ffffffff1660e01b8152600401610b06929190612779565b6020604051808303815f875af1158015610b22573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b46919061270c565b50610b4f611b26565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff610b92856012610b8d61142e565b611b77565b6040518363ffffffff1660e01b8152600401610baf9291906127a0565b6020604051808303815f875af1158015610bcb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bef919061270c565b505f610c04836012610bff61142e565b611b77565b90505f73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff166338ed1739835f610c416103ad565b610c496107cc565b426040518663ffffffff1660e01b8152600401610c6a9594939291906127c7565b5f604051808303815f875af1158015610c85573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610cad919061262e565b90505f8160018351610cbf919061240b565b81518110610cd057610ccf61243e565b5b602002602001015190505f610cec82610ce761139f565b611419565b90507f350df6fcc944b226b77efc36902e19b43c566d75173622086e809d46dfbc22208682604051610d1f92919061281f565b60405180910390a180945050505050919050565b5f610d3c6114a8565b610d4461135d565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd610d676107cc565b30610d7b866012610d7661139f565b611b77565b6040518463ffffffff1660e01b8152600401610d99939291906126a2565b6020604051808303815f875af1158015610db5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dd9919061270c565b506804e1003b28d9280000610ded836106e0565b1015610e25576040517ffa3505cf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e2d61135d565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff5f6040518363ffffffff1660e01b8152600401610e7b929190612779565b6020604051808303815f875af1158015610e97573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ebb919061270c565b50610ec461135d565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff610f07856012610f0261139f565b611b77565b6040518363ffffffff1660e01b8152600401610f249291906127a0565b6020604051808303815f875af1158015610f40573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f64919061270c565b505f610f79836012610f7461139f565b611b77565b90505f73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff166338ed1739835f610fb66110a8565b610fbe6107cc565b426040518663ffffffff1660e01b8152600401610fdf9594939291906127c7565b5f604051808303815f875af1158015610ffa573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190611022919061262e565b90505f8160018351611034919061240b565b815181106110455761104461243e565b5b602002602001015190505f6110618261105c61142e565b611419565b90507fdabca3bec2ab18bf51000cbc53d346d6d9df2ffff2bbb535f8c5bc9b1d784b9b868260405161109492919061281f565b60405180910390a180945050505050919050565b60605f60018054905067ffffffffffffffff8111156110ca576110c96123b1565b5b6040519080825280602002602001820160405280156110f85781602001602082028036833780820191505090505b5090505f5b6001805490508110156111a7576001818154811061111e5761111d61243e565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106111595761115861243e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816111a0919061246b565b90506110fd565b508091505090565b5f806111ba836104cf565b90505f6111c6846108b5565b90506111d581836012806115e7565b92505050919050565b6111e66114a8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b906128c6565b60405180910390fd5b61125d81611526565b50565b5f80600281111561127457611273612675565b5b61127c611656565b600281111561128e5761128d612675565b5b036112a25761129b611ba4565b9050611316565b600160028111156112b6576112b5612675565b5b6112be611656565b60028111156112d0576112cf612675565b5b036112e4576112dd611ca0565b9050611316565b6040517f5b9c3c8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f6113248383611d9c565b61132e8584611419565b945061133a8483611419565b9350611353858585600a61134e9190612a1f565b611df9565b9050949350505050565b5f60015f815481106113725761137161243e565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6113a861135d565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114149190612a93565b905090565b5f61142683836012611b77565b905092915050565b5f611437611b26565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561147f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114a39190612a93565b905090565b6114b0611e0e565b73ffffffffffffffffffffffffffffffffffffffff166114ce6107cc565b73ffffffffffffffffffffffffffffffffffffffff1614611524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151b90612b08565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6115f28383611d9c565b6115fc8584611419565b94506116088483611419565b93505f8403611619575f905061164e565b5f8503611628575f905061164e565b83851061163e57611637611e15565b905061164e565b61164b8585601280611e25565b90505b949350505050565b5f61165f611e76565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116cb9190612b3a565b73ffffffffffffffffffffffffffffffffffffffff166116e961135d565b73ffffffffffffffffffffffffffffffffffffffff161480156117b1575061170f611e76565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611757573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061177b9190612b3a565b73ffffffffffffffffffffffffffffffffffffffff16611799611b26565b73ffffffffffffffffffffffffffffffffffffffff16145b156117be575f905061192b565b6117c6611e76565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561180e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118329190612b3a565b73ffffffffffffffffffffffffffffffffffffffff1661185061135d565b73ffffffffffffffffffffffffffffffffffffffff161480156119185750611876611e76565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118e29190612b3a565b73ffffffffffffffffffffffffffffffffffffffff16611900611b26565b73ffffffffffffffffffffffffffffffffffffffff16145b15611926576001905061192b565b600290505b90565b5f611a2573a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec61196a61139f565b600a6119769190612a1f565b61197e611f18565b5f815181106119905761198f61243e565b5b60200260200101516119a0611f18565b6001815181106119b3576119b261243e565b5b60200260200101516040518463ffffffff1660e01b81526004016119d993929190612b65565b602060405180830381865afa1580156119f4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1891906124b2565b611a2061142e565b611419565b905090565b5f611b2173a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec611a6661142e565b600a611a729190612a1f565b611a7a611f18565b600181518110611a8d57611a8c61243e565b5b6020026020010151611a9d611f18565b5f81518110611aaf57611aae61243e565b5b60200260200101516040518463ffffffff1660e01b8152600401611ad593929190612b65565b602060405180830381865afa158015611af0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b1491906124b2565b611b1c61142e565b611419565b905090565b5f6001808080549050611b39919061240b565b81548110611b4a57611b4961243e565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f611b9b8483600a611b899190612a1f565b85600a611b969190612a1f565b611df9565b90509392505050565b5f611c9b73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec611be061142e565b600a611bec9190612a1f565b611bf4611f18565b600181518110611c0757611c0661243e565b5b6020026020010151611c17611f18565b5f81518110611c2957611c2861243e565b5b60200260200101516040518463ffffffff1660e01b8152600401611c4f93929190612b65565b602060405180830381865afa158015611c6a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c8e91906124b2565b611c9661139f565b611419565b905090565b5f611d9773a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec611cdc61139f565b600a611ce89190612a1f565b611cf0611f18565b5f81518110611d0257611d0161243e565b5b6020026020010151611d12611f18565b600181518110611d2557611d2461243e565b5b60200260200101516040518463ffffffff1660e01b8152600401611d4b93929190612b65565b602060405180830381865afa158015611d66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8a91906124b2565b611d9261139f565b611419565b905090565b60128260ff161180611db1575060128160ff16115b15611df55781816040517f8d72b2b5000000000000000000000000000000000000000000000000000000008152600401611dec929190612ba9565b60405180910390fd5b5050565b5f611e05848484612048565b90509392505050565b5f33905090565b5f68056bc75e2d63100000905090565b5f611e308383611d9c565b611e3a8584611419565b9450611e468483611419565b93505f611e5586868686612152565b9050611e6b81611e63611e15565b601280611319565b915050949350505050565b5f735757371414417b8c6caad45baef941abc7d3ab3273ffffffffffffffffffffffffffffffffffffffff1663e6a43905611eaf61135d565b611eb7611b26565b6040518363ffffffff1660e01b8152600401611ed4929190612bd0565b602060405180830381865afa158015611eef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f139190612b3a565b905090565b60605f600267ffffffffffffffff811115611f3657611f356123b1565b5b604051908082528060200260200182016040528015611f645781602001602082028036833780820191505090505b509050611f6f611e76565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611fb7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fdb9190612c73565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff16915050825f815181106120155761201461243e565b5b60200260200101836001815181106120305761202f61243e565b5b60200260200101828152508281525050508091505090565b5f805f80198587098587029250828110838203039150505f81036120805783828161207657612075612cc3565b5b049250505061214b565b8084116120c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b990612d3a565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f61215d8383611d9c565b6121678584611419565b94506121738483611419565b935061218c8584600a6121869190612a1f565b86611df9565b9050949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121e8826121bf565b9050919050565b6121f8816121de565b82525050565b5f61220983836121ef565b60208301905092915050565b5f602082019050919050565b5f61222b82612196565b61223581856121a0565b9350612240836121b0565b805f5b8381101561227057815161225788826121fe565b975061226283612215565b925050600181019050612243565b5085935050505092915050565b5f6020820190508181035f8301526122958184612221565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6122c0816122ae565b81146122ca575f80fd5b50565b5f813590506122db816122b7565b92915050565b5f602082840312156122f6576122f56122a6565b5b5f612303848285016122cd565b91505092915050565b612315816122ae565b82525050565b5f60208201905061232e5f83018461230c565b92915050565b61233d816121de565b82525050565b5f6020820190506123565f830184612334565b92915050565b612365816121de565b811461236f575f80fd5b50565b5f813590506123808161235c565b92915050565b5f6020828403121561239b5761239a6122a6565b5b5f6123a884828501612372565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612415826122ae565b9150612420836122ae565b9250828203905081811115612438576124376123de565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f612475826122ae565b9150612480836122ae565b9250828201905080821115612498576124976123de565b5b92915050565b5f815190506124ac816122b7565b92915050565b5f602082840312156124c7576124c66122a6565b5b5f6124d48482850161249e565b91505092915050565b5f6040820190506124f05f83018561230c565b81810360208301526125028184612221565b90509392505050565b5f80fd5b5f601f19601f8301169050919050565b6125288261250f565b810181811067ffffffffffffffff82111715612547576125466123b1565b5b80604052505050565b5f61255961229d565b9050612565828261251f565b919050565b5f67ffffffffffffffff821115612584576125836123b1565b5b602082029050602081019050919050565b5f80fd5b5f6125ab6125a68461256a565b612550565b905080838252602082019050602084028301858111156125ce576125cd612595565b5b835b818110156125f757806125e3888261249e565b8452602084019350506020810190506125d0565b5050509392505050565b5f82601f8301126126155761261461250b565b5b8151612625848260208601612599565b91505092915050565b5f60208284031215612643576126426122a6565b5b5f82015167ffffffffffffffff8111156126605761265f6122aa565b5b61266c84828501612601565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f6060820190506126b55f830186612334565b6126c26020830185612334565b6126cf604083018461230c565b949350505050565b5f8115159050919050565b6126eb816126d7565b81146126f5575f80fd5b50565b5f81519050612706816126e2565b92915050565b5f60208284031215612721576127206122a6565b5b5f61272e848285016126f8565b91505092915050565b5f819050919050565b5f819050919050565b5f61276361275e61275984612737565b612740565b6122ae565b9050919050565b61277381612749565b82525050565b5f60408201905061278c5f830185612334565b612799602083018461276a565b9392505050565b5f6040820190506127b35f830185612334565b6127c0602083018461230c565b9392505050565b5f60a0820190506127da5f83018861230c565b6127e7602083018761276a565b81810360408301526127f98186612221565b90506128086060830185612334565b612815608083018461230c565b9695505050505050565b5f6040820190506128325f83018561230c565b61283f602083018461230c565b9392505050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6128b0602683612846565b91506128bb82612856565b604082019050919050565b5f6020820190508181035f8301526128dd816128a4565b9050919050565b5f8160011c9050919050565b5f808291508390505b600185111561293957808604811115612915576129146123de565b5b60018516156129245780820291505b8081029050612932856128e4565b94506128f9565b94509492505050565b5f826129515760019050612a0c565b8161295e575f9050612a0c565b8160018114612974576002811461297e576129ad565b6001915050612a0c565b60ff8411156129905761298f6123de565b5b8360020a9150848211156129a7576129a66123de565b5b50612a0c565b5060208310610133831016604e8410600b84101617156129e25782820a9050838111156129dd576129dc6123de565b5b612a0c565b6129ef84848460016128f0565b92509050818404811115612a0657612a056123de565b5b81810290505b9392505050565b5f60ff82169050919050565b5f612a29826122ae565b9150612a3483612a13565b9250612a617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612942565b905092915050565b612a7281612a13565b8114612a7c575f80fd5b50565b5f81519050612a8d81612a69565b92915050565b5f60208284031215612aa857612aa76122a6565b5b5f612ab584828501612a7f565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612af2602083612846565b9150612afd82612abe565b602082019050919050565b5f6020820190508181035f830152612b1f81612ae6565b9050919050565b5f81519050612b348161235c565b92915050565b5f60208284031215612b4f57612b4e6122a6565b5b5f612b5c84828501612b26565b91505092915050565b5f606082019050612b785f83018661230c565b612b85602083018561230c565b612b92604083018461230c565b949350505050565b612ba381612a13565b82525050565b5f604082019050612bbc5f830185612b9a565b612bc96020830184612b9a565b9392505050565b5f604082019050612be35f830185612334565b612bf06020830184612334565b9392505050565b5f6dffffffffffffffffffffffffffff82169050919050565b612c1981612bf7565b8114612c23575f80fd5b50565b5f81519050612c3481612c10565b92915050565b5f63ffffffff82169050919050565b612c5281612c3a565b8114612c5c575f80fd5b50565b5f81519050612c6d81612c49565b92915050565b5f805f60608486031215612c8a57612c896122a6565b5b5f612c9786828701612c26565b9350506020612ca886828701612c26565b9250506040612cb986828701612c5f565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4d6174683a206d756c446976206f766572666c6f7700000000000000000000005f82015250565b5f612d24601583612846565b9150612d2f82612cf0565b602082019050919050565b5f6020820190508181035f830152612d5181612d18565b905091905056fea2646970667358221220182d91ed3a56ffaa2fc55d8f2b7a6255a5c49b1a0d2e5fb7389f5c54dad58c3d64736f6c63430008190033";
    // QUICK
    const asset = "0xB5C064F955D8e7F38fE0460C556a72987494eE17";
    // USDT
    const currency = "0xc2132D05D31c914a87C6611C10748AEb04B58e8F";
    const deployment = await machine.deploy({ 
        bytecode, 
        abi, 
        args: [[
            asset,
            currency
        ], BigInt(1.5 * (10**18))],
        gasPrice: "fast"
    });
    const to: string = deployment.unwrap()?.contractAddress!;
    const amountInUnits: bigint = BigInt(1 * (10**18));
    const amountInCurrency: bigint = BigInt(0.03 * (10**18));
    console.log(`units in ${amountInUnits}`);
    console.log(`currency in ${amountInCurrency}`);
    await (async function() {
        const targetAllocation = await machine.query({
            to,
            methodSignature: "function targetAllocation() external view returns (uint256)",
            methodName: "targetAllocation"
        });
        console.log(`target allocation => ${Number(targetAllocation.unwrap()) / 10**18}%`);
    })();

    await (async function() {
        const sellSidePath = await machine.query({
            to,
            methodSignature: "function sellSidePath() external view returns (address[] memory)",
            methodName: "sellSidePath"
        });
        console.log(sellSidePath.unwrap());
    })();

    await (async function() {
        const buySidePath = await machine.query({
            to,
            methodSignature: "function buySidePath() external view returns (address[] memory)",
            methodName: "buySidePath"
        });
        console.log(buySidePath.unwrap());
    })();

    await (async function() {
        const bestAssets = await machine.query({
            to,
            methodSignature: "function bestAssets() external view returns (uint256)",
            methodName: "bestAssets"
        });
        console.log(`best assets => $${Number(bestAssets.unwrap()) / 10**18}`);
    })();   

    await (async function() {
        const realAssets = await machine.query({
            to,
            methodSignature: "function realAssets() external view returns (uint256)",
            methodName: "realAssets"
        });
        console.log(`real assets => $${Number(realAssets.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const sellSideYield = await machine.query({
            to,
            methodSignature: "function sellSideYield(uint256) external view returns (uint256)",
            methodName: "sellSideYield",
            methodArgs: [
                amountInUnits
            ]
        });
        console.log(`sell side yield => ${Number(sellSideYield.unwrap()) / 10**18}%`);
    })();

    await (async function() {
        const buySideYield = await machine.query({
            to,
            methodSignature: "function buySideYield(uint256) external view returns (uint256)",
            methodName: "buySideYield",
            methodArgs: [
                amountInCurrency
            ]
        });
        console.log(`buy side yield => ${Number(buySideYield.unwrap()) / 10**18}%`);
    })();

    await (async function() {
        const bestSellSideAmountOut = await machine.query({
            to,
            methodSignature: "function bestSellSideAmountOut(uint256) external view returns (uint256)",
            methodName: "bestSellSideAmountOut",
            methodArgs: [
                amountInUnits
            ]
        });
        console.log(`best sell side amount out => $${Number(bestSellSideAmountOut.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const bestBuySideAmountOut = await machine.query({
            to,
            methodSignature: "function bestBuySideAmountOut(uint256) external view returns (uint256)",
            methodName: "bestBuySideAmountOut",
            methodArgs: [
                amountInCurrency
            ]
        });
        console.log(`best buy side amount out => ${Number(bestBuySideAmountOut.unwrap()) / 10**18} units`);
    })();

    await (async function() {
        const realSellSideAmountOut = await machine.query({
            to,
            methodSignature: "function realSellSideAmountOut(uint256) external view returns (uint256)",
            methodName: "realSellSideAmountOut",
            methodArgs: [
                amountInUnits
            ]
        });
        console.log(`real sell side amount out => $${Number(realSellSideAmountOut.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const realBuySideAmountOut = await machine.query({
            to,
            methodSignature: "function realBuySideAmountOut(uint256) external view returns (uint256)",
            methodName: "realBuySideAmountOut",
            methodArgs: [
                amountInCurrency
            ]
        });
        console.log(`real buy side amount out => ${Number(realBuySideAmountOut.unwrap()) / 10**18} units`);
    })();

    await (async function() {
        const sellSideQuote = await machine.query({
            to,
            methodSignature: "function sellSideQuote() external view returns (uint256)",
            methodName: "sellSideQuote"
        });
        console.log(`sell side quote => $${Number(sellSideQuote.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const buySideQuote = await machine.query({
            to,
            methodSignature: "function buySideQuote() external view returns (uint256)",
            methodName: "buySideQuote"
        });
        console.log(`buy side quote => ${Number(buySideQuote.unwrap()) / 10**18} units`);
    })();

    await (async function() {
        await machine.invoke({
            to: asset,
            methodSignature: "function approve(address,uint256) external",
            methodName: "approve",
            methodArgs: [
                to,
                100000n * (10n**18n)
            ]
        });
        const sale = await machine.invoke({
            to,
            methodSignature: "function sell(uint256) external returns (uint256)",
            methodName: "sell",
            methodArgs: [
                amountInUnits
            ]
        });
        sale.unwrap();
        console.log(`sale successful`);
    })();

    await (async function() {
        await machine.invoke({
            to: currency,
            methodSignature: "function approve(address,uint256) external",
            methodName: "approve",
            methodArgs: [
                to,
                100000n * (10n**18n)
            ]
        });
        const purchase = await machine.invoke({
            to,
            methodSignature: "function buy(uint256) external returns (uint256)",
            methodName: "buy",
            methodArgs: [
                amountInCurrency
            ]
        });
        purchase.unwrap();
        console.log(`purchase successful`);
    })();
})();