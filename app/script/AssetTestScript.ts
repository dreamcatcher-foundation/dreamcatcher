import type { IEthereumVirtualMachine } from "../class/ethereumVirtualMachine/IEthereumVirtualMachine.ts";
import type { ISolFile } from "../class/host/file/ISolFile.ts";
import { EthereumVirtualMachine } from "../class/ethereumVirtualMachine/EthereumVirtualMachine.ts";
import { ethers as Ethers } from "ethers";
import { SolFile } from "../class/host/file/SolFile.ts";
import { Path } from "../class/host/Path.ts";
import { secret } from "../class/host/Secret.ts";
import * as TsResult from "ts-results";

(async function() {
    const url: string = "https://rpc.tenderly.co/fork/199a9605-bc91-4453-bffd-5c12ed0e0d8d";
    const key: TsResult.Option<string> = secret("polygonPrivateKey");
    const node: Ethers.JsonRpcProvider = new Ethers.JsonRpcProvider(url);
    const signer: Ethers.Wallet = new Ethers.Wallet(key.unwrap(), node);
    const machine: IEthereumVirtualMachine = EthereumVirtualMachine(signer);
    const abi = [
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "path",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256",
                    "name": "targetAllocation",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "InsufficientYield",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PairIsWorthless",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PairNotFound",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PathCannotBeLongerThan10",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "PathCannotBeShorterThan2",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint8",
                    "name": "decimals0",
                    "type": "uint8"
                },
                {
                    "internalType": "uint8",
                    "name": "decimals1",
                    "type": "uint8"
                }
            ],
            "name": "PrecisionLoss",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UnrecognizedLayout",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256"
                }
            ],
            "name": "Purchase",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256"
                }
            ],
            "name": "Sale",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "bestAssets",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "bestBuySideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "bestSellSideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "buy",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "buySidePath",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "buySideQuote",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "buySideYield",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "realAssets",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "realBuySideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "realSellSideAmountOut",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "sell",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "sellSidePath",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "sellSideQuote",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "sellSideYield",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetAllocation",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "percentage",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ];
    const bytecode = "608060405234801561000f575f80fd5b5060405161429c38038061429c83398181016040528101906100319190610fc3565b336100418161021d60201b60201c565b505f825190506002811015610082576040517fcc56455800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a8111156100bd576040517f119a55b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b818110156101555760018482815181106100dc576100db61101d565b5b6020026020010151908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018161014e9190611077565b90506100bf565b505f73ffffffffffffffffffffffffffffffffffffffff1661017b6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16036101c8576040517fd719ab6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6101d761038c60201b60201c565b0361020e576040517fbc21eb9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600281905550505050611525565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f735757371414417b8c6caad45baef941abc7d3ab3273ffffffffffffffffffffffffffffffffffffffff1663e6a4390561031d61045d60201b60201c565b61032b61049f60201b60201c565b6040518363ffffffff1660e01b81526004016103489291906110b9565b602060405180830381865afa158015610363573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038791906110e0565b905090565b5f8060028111156103a05761039f61110b565b5b6103ae6104f060201b60201c565b60028111156103c0576103bf61110b565b5b036103da576103d36107f860201b60201c565b905061045a565b600160028111156103ee576103ed61110b565b5b6103fc6104f060201b60201c565b600281111561040e5761040d61110b565b5b036104285761042161091260201b60201c565b905061045a565b6040517f5b9c3c8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f60015f815481106104725761047161101d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60018080805490506104b29190611138565b815481106104c3576104c261101d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6104ff6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610547573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056b91906110e0565b73ffffffffffffffffffffffffffffffffffffffff1661058f61045d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614801561066357506105bb6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610603573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062791906110e0565b73ffffffffffffffffffffffffffffffffffffffff1661064b61049f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16145b15610670575f90506107f5565b61067e6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ea91906110e0565b73ffffffffffffffffffffffffffffffffffffffff1661070e61045d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161480156107e2575061073a6102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a691906110e0565b73ffffffffffffffffffffffffffffffffffffffff166107ca61049f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16145b156107f057600190506107f5565b600290505b90565b5f61090d73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec61083a610a2c60201b60201c565b600a61084691906112a6565b610854610aac60201b60201c565b5f815181106108665761086561101d565b5b602002602001015161087c610aac60201b60201c565b60018151811061088f5761088e61101d565b5b60200260200101516040518463ffffffff1660e01b81526004016108b5939291906112ff565b602060405180830381865afa1580156108d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f49190611334565b610902610be260201b60201c565b610c6260201b60201c565b905090565b5f610a2773a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec610954610be260201b60201c565b600a61096091906112a6565b61096e610aac60201b60201c565b6001815181106109815761098061101d565b5b6020026020010151610997610aac60201b60201c565b5f815181106109a9576109a861101d565b5b60200260200101516040518463ffffffff1660e01b81526004016109cf939291906112ff565b602060405180830381865afa1580156109ea573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0e9190611334565b610a1c610be260201b60201c565b610c6260201b60201c565b905090565b5f610a3b61045d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a83573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa79190611389565b905090565b60605f600267ffffffffffffffff811115610aca57610ac9610dfa565b5b604051908082528060200260200182016040528015610af85781602001602082028036833780820191505090505b509050610b096102de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610b51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b759190611430565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff16915050825f81518110610baf57610bae61101d565b5b6020026020010183600181518110610bca57610bc961101d565b5b60200260200101828152508281525050508091505090565b5f610bf161049f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c39573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c5d9190611389565b905090565b5f610c7583836012610c7d60201b60201c565b905092915050565b5f610ca78483600a610c8f91906112a6565b85600a610c9c91906112a6565b610cb060201b60201c565b90509392505050565b5f610cc2848484610ccb60201b60201c565b90509392505050565b5f805f80198587098587029250828110838203039150505f8103610d0357838281610cf957610cf8611480565b5b0492505050610dce565b808411610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90611507565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610e3082610dea565b810181811067ffffffffffffffff82111715610e4f57610e4e610dfa565b5b80604052505050565b5f610e61610dd5565b9050610e6d8282610e27565b919050565b5f67ffffffffffffffff821115610e8c57610e8b610dfa565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eca82610ea1565b9050919050565b610eda81610ec0565b8114610ee4575f80fd5b50565b5f81519050610ef581610ed1565b92915050565b5f610f0d610f0884610e72565b610e58565b90508083825260208201905060208402830185811115610f3057610f2f610e9d565b5b835b81811015610f595780610f458882610ee7565b845260208401935050602081019050610f32565b5050509392505050565b5f82601f830112610f7757610f76610de6565b5b8151610f87848260208601610efb565b91505092915050565b5f819050919050565b610fa281610f90565b8114610fac575f80fd5b50565b5f81519050610fbd81610f99565b92915050565b5f8060408385031215610fd957610fd8610dde565b5b5f83015167ffffffffffffffff811115610ff657610ff5610de2565b5b61100285828601610f63565b925050602061101385828601610faf565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61108182610f90565b915061108c83610f90565b92508282019050808211156110a4576110a361104a565b5b92915050565b6110b381610ec0565b82525050565b5f6040820190506110cc5f8301856110aa565b6110d960208301846110aa565b9392505050565b5f602082840312156110f5576110f4610dde565b5b5f61110284828501610ee7565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f61114282610f90565b915061114d83610f90565b92508282039050818111156111655761116461104a565b5b92915050565b5f8160011c9050919050565b5f808291508390505b60018511156111c05780860481111561119c5761119b61104a565b5b60018516156111ab5780820291505b80810290506111b98561116b565b9450611180565b94509492505050565b5f826111d85760019050611293565b816111e5575f9050611293565b81600181146111fb576002811461120557611234565b6001915050611293565b60ff8411156112175761121661104a565b5b8360020a91508482111561122e5761122d61104a565b5b50611293565b5060208310610133831016604e8410600b84101617156112695782820a9050838111156112645761126361104a565b5b611293565b6112768484846001611177565b9250905081840481111561128d5761128c61104a565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6112b082610f90565b91506112bb8361129a565b92506112e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111c9565b905092915050565b6112f981610f90565b82525050565b5f6060820190506113125f8301866112f0565b61131f60208301856112f0565b61132c60408301846112f0565b949350505050565b5f6020828403121561134957611348610dde565b5b5f61135684828501610faf565b91505092915050565b6113688161129a565b8114611372575f80fd5b50565b5f815190506113838161135f565b92915050565b5f6020828403121561139e5761139d610dde565b5b5f6113ab84828501611375565b91505092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b6113d6816113b4565b81146113e0575f80fd5b50565b5f815190506113f1816113cd565b92915050565b5f63ffffffff82169050919050565b61140f816113f7565b8114611419575f80fd5b50565b5f8151905061142a81611406565b92915050565b5f805f6060848603121561144757611446610dde565b5b5f611454868287016113e3565b9350506020611465868287016113e3565b92505060406114768682870161141c565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f82825260208201905092915050565b7f4d6174683a206d756c446976206f766572666c6f7700000000000000000000005f82015250565b5f6114f16015836114ad565b91506114fc826114bd565b602082019050919050565b5f6020820190508181035f83015261151e816114e5565b9050919050565b612d6a806115325f395ff3fe608060405234801561000f575f80fd5b5060043610610113575f3560e01c8063960a5a0f116100a0578063e4849b321161006f578063e4849b32146102f5578063ed6d771314610325578063ee3cf29714610343578063f2fde38b14610373578063fb21b9b71461038f57610113565b8063960a5a0f14610259578063a8c2d1f214610277578063c1a2884614610295578063d96a094a146102c557610113565b80636ec80a48116100e75780636ec80a48146101b3578063715018a6146101e3578063847bad3b146101ed57806384bd91831461021d5780638da5cb5b1461023b57610113565b80627f0093146101175780630b5eda36146101355780632f686c921461016557806356c0757314610195575b5f80fd5b61011f6103ad565b60405161012c9190612259565b60405180910390f35b61014f600480360381019061014a91906122bd565b6104cf565b60405161015c91906122f7565b60405180910390f35b61017f600480360381019061017a91906122bd565b6104eb565b60405161018c91906122f7565b60405180910390f35b61019d610507565b6040516101aa91906122f7565b60405180910390f35b6101cd60048036038101906101c891906122bd565b6105c4565b6040516101da91906122f7565b60405180910390f35b6101eb6106cd565b005b610207600480360381019061020291906122bd565b6106e0565b60405161021491906122f7565b60405180910390f35b61022561070f565b60405161023291906122f7565b60405180910390f35b6102436107cc565b604051610250919061231f565b60405180910390f35b6102616107f3565b60405161026e91906122f7565b60405180910390f35b61027f6108ac565b60405161028c91906122f7565b60405180910390f35b6102af60048036038101906102aa91906122bd565b6108b5565b6040516102bc91906122f7565b60405180910390f35b6102df60048036038101906102da91906122bd565b6109be565b6040516102ec91906122f7565b60405180910390f35b61030f600480360381019061030a91906122bd565b610d21565b60405161031c91906122f7565b60405180910390f35b61032d611084565b60405161033a9190612259565b60405180910390f35b61035d600480360381019061035891906122bd565b61118b565b60405161036a91906122f7565b60405180910390f35b61038d60048036038101906103889190612362565b6111ba565b005b61039761123c565b6040516103a491906122f7565b60405180910390f35b60605f60018054905067ffffffffffffffff8111156103cf576103ce61238d565b5b6040519080825280602002602001820160405280156103fd5781602001602082028036833780820191505090505b5090505f5b6001805490508110156104c7576001816001808054905061042391906123e7565b61042d91906123e7565b8154811061043e5761043d61241a565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106104795761047861241a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816104c09190612447565b9050610402565b508091505090565b5f6104e4826104dc61123c565b6012806112f5565b9050919050565b5f610500826104f86107f3565b6012806112f5565b9050919050565b5f80610511611339565b73ffffffffffffffffffffffffffffffffffffffff166370a082316105346107cc565b6040518263ffffffff1660e01b8152600401610550919061231f565b602060405180830381865afa15801561056b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058f919061248e565b90505f81036105a1575f9150506105c1565b6105b2816105ad61137b565b6113f5565b90506105bd816105c4565b9150505b90565b5f8073a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663d06ca61f846105ff611084565b6040518363ffffffff1660e01b815260040161061c9291906124b9565b5f60405180830381865afa158015610636573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061065e919061260a565b90505f816001835161067091906123e7565b815181106106815761068061241a565b5b602002602001015190505f61069d8261069861140a565b6113f5565b90506106a8856104eb565b81106106c1576106b7856104eb565b93505050506106c8565b8093505050505b919050565b6106d5611484565b6106de5f611502565b565b5f806106eb836104eb565b90505f6106f7846105c4565b905061070681836012806115c3565b92505050919050565b5f80610719611339565b73ffffffffffffffffffffffffffffffffffffffff166370a0823161073c6107cc565b6040518263ffffffff1660e01b8152600401610758919061231f565b602060405180830381865afa158015610773573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610797919061248e565b90505f81036107a9575f9150506107c9565b6107ba816107b561137b565b6113f5565b90506107c5816104eb565b9150505b90565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80600281111561080757610806612651565b5b61080f611632565b600281111561082157610820612651565b5b036108355761082e61190a565b90506108a9565b6001600281111561084957610848612651565b5b610851611632565b600281111561086357610862612651565b5b0361087757610870611a06565b90506108a9565b6040517f5b9c3c8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f600254905090565b5f8073a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663d06ca61f846108f06103ad565b6040518363ffffffff1660e01b815260040161090d9291906124b9565b5f60405180830381865afa158015610927573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061094f919061260a565b90505f816001835161096191906123e7565b815181106109725761097161241a565b5b602002602001015190505f61098e8261098961137b565b6113f5565b9050610999856104cf565b81106109b2576109a8856104cf565b93505050506109b9565b8093505050505b919050565b5f6109c7611484565b6109cf611b02565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd6109f26107cc565b30856040518463ffffffff1660e01b8152600401610a129392919061267e565b6020604051808303815f875af1158015610a2e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a5291906126e8565b506804e1003b28d9280000610a668361118b565b1015610a9e576040517ffa3505cf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aa6611b02565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff5f6040518363ffffffff1660e01b8152600401610af4929190612755565b6020604051808303815f875af1158015610b10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3491906126e8565b50610b3d611b02565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff610b8085610b7961140a565b6012611b53565b6040518363ffffffff1660e01b8152600401610b9d92919061277c565b6020604051808303815f875af1158015610bb9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bdd91906126e8565b505f610bf283610beb61140a565b6012611b53565b90505f73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff166338ed1739835f610c2f6103ad565b610c376107cc565b426040518663ffffffff1660e01b8152600401610c589594939291906127a3565b5f604051808303815f875af1158015610c73573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610c9b919061260a565b90505f8160018351610cad91906123e7565b81518110610cbe57610cbd61241a565b5b602002602001015190505f610cda82610cd561137b565b6113f5565b90507f350df6fcc944b226b77efc36902e19b43c566d75173622086e809d46dfbc22208682604051610d0d9291906127fb565b60405180910390a180945050505050919050565b5f610d2a611484565b610d32611339565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd610d556107cc565b30856040518463ffffffff1660e01b8152600401610d759392919061267e565b6020604051808303815f875af1158015610d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db591906126e8565b506804e1003b28d9280000610dc9836106e0565b1015610e01576040517ffa3505cf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e09611339565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff5f6040518363ffffffff1660e01b8152600401610e57929190612755565b6020604051808303815f875af1158015610e73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e9791906126e8565b50610ea0611339565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a5e0829caced8ffdd4de3c43696c57f7d7a678ff610ee385610edc61137b565b6012611b53565b6040518363ffffffff1660e01b8152600401610f0092919061277c565b6020604051808303815f875af1158015610f1c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4091906126e8565b505f610f5583610f4e61137b565b6012611b53565b90505f73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff166338ed1739835f610f92611084565b610f9a6107cc565b426040518663ffffffff1660e01b8152600401610fbb9594939291906127a3565b5f604051808303815f875af1158015610fd6573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610ffe919061260a565b90505f816001835161101091906123e7565b815181106110215761102061241a565b5b602002602001015190505f61103d8261103861140a565b6113f5565b90507fdabca3bec2ab18bf51000cbc53d346d6d9df2ffff2bbb535f8c5bc9b1d784b9b86826040516110709291906127fb565b60405180910390a180945050505050919050565b60605f60018054905067ffffffffffffffff8111156110a6576110a561238d565b5b6040519080825280602002602001820160405280156110d45781602001602082028036833780820191505090505b5090505f5b60018054905081101561118357600181815481106110fa576110f961241a565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106111355761113461241a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018161117c9190612447565b90506110d9565b508091505090565b5f80611196836104cf565b90505f6111a2846108b5565b90506111b181836012806115c3565b92505050919050565b6111c2611484565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611230576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611227906128a2565b60405180910390fd5b61123981611502565b50565b5f8060028111156112505761124f612651565b5b611258611632565b600281111561126a57611269612651565b5b0361127e57611277611b80565b90506112f2565b6001600281111561129257611291612651565b5b61129a611632565b60028111156112ac576112ab612651565b5b036112c0576112b9611c7c565b90506112f2565b6040517f5b9c3c8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90565b5f6113008383611d78565b61130a85846113f5565b945061131684836113f5565b935061132f858585600a61132a91906129fb565b611dd5565b9050949350505050565b5f60015f8154811061134e5761134d61241a565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f611384611339565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113f09190612a6f565b905090565b5f61140283836012611b53565b905092915050565b5f611413611b02565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561145b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061147f9190612a6f565b905090565b61148c611dea565b73ffffffffffffffffffffffffffffffffffffffff166114aa6107cc565b73ffffffffffffffffffffffffffffffffffffffff1614611500576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f790612ae4565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6115ce8383611d78565b6115d885846113f5565b94506115e484836113f5565b93505f84036115f5575f905061162a565b5f8503611604575f905061162a565b83851061161a57611613611df1565b905061162a565b6116278585601280611e01565b90505b949350505050565b5f61163b611e52565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611683573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116a79190612b16565b73ffffffffffffffffffffffffffffffffffffffff166116c5611339565b73ffffffffffffffffffffffffffffffffffffffff1614801561178d57506116eb611e52565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611733573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117579190612b16565b73ffffffffffffffffffffffffffffffffffffffff16611775611b02565b73ffffffffffffffffffffffffffffffffffffffff16145b1561179a575f9050611907565b6117a2611e52565b73ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061180e9190612b16565b73ffffffffffffffffffffffffffffffffffffffff1661182c611339565b73ffffffffffffffffffffffffffffffffffffffff161480156118f45750611852611e52565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561189a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118be9190612b16565b73ffffffffffffffffffffffffffffffffffffffff166118dc611b02565b73ffffffffffffffffffffffffffffffffffffffff16145b156119025760019050611907565b600290505b90565b5f611a0173a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec61194661137b565b600a61195291906129fb565b61195a611ef4565b5f8151811061196c5761196b61241a565b5b602002602001015161197c611ef4565b60018151811061198f5761198e61241a565b5b60200260200101516040518463ffffffff1660e01b81526004016119b593929190612b41565b602060405180830381865afa1580156119d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119f4919061248e565b6119fc61140a565b6113f5565b905090565b5f611afd73a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec611a4261140a565b600a611a4e91906129fb565b611a56611ef4565b600181518110611a6957611a6861241a565b5b6020026020010151611a79611ef4565b5f81518110611a8b57611a8a61241a565b5b60200260200101516040518463ffffffff1660e01b8152600401611ab193929190612b41565b602060405180830381865afa158015611acc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611af0919061248e565b611af861140a565b6113f5565b905090565b5f6001808080549050611b1591906123e7565b81548110611b2657611b2561241a565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f611b778483600a611b6591906129fb565b85600a611b7291906129fb565b611dd5565b90509392505050565b5f611c7773a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec611bbc61140a565b600a611bc891906129fb565b611bd0611ef4565b600181518110611be357611be261241a565b5b6020026020010151611bf3611ef4565b5f81518110611c0557611c0461241a565b5b60200260200101516040518463ffffffff1660e01b8152600401611c2b93929190612b41565b602060405180830381865afa158015611c46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c6a919061248e565b611c7261137b565b6113f5565b905090565b5f611d7373a5e0829caced8ffdd4de3c43696c57f7d7a678ff73ffffffffffffffffffffffffffffffffffffffff1663ad615dec611cb861137b565b600a611cc491906129fb565b611ccc611ef4565b5f81518110611cde57611cdd61241a565b5b6020026020010151611cee611ef4565b600181518110611d0157611d0061241a565b5b60200260200101516040518463ffffffff1660e01b8152600401611d2793929190612b41565b602060405180830381865afa158015611d42573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d66919061248e565b611d6e61137b565b6113f5565b905090565b60128260ff161180611d8d575060128160ff16115b15611dd15781816040517f8d72b2b5000000000000000000000000000000000000000000000000000000008152600401611dc8929190612b85565b60405180910390fd5b5050565b5f611de1848484612024565b90509392505050565b5f33905090565b5f68056bc75e2d63100000905090565b5f611e0c8383611d78565b611e1685846113f5565b9450611e2284836113f5565b93505f611e318686868661212e565b9050611e4781611e3f611df1565b6012806112f5565b915050949350505050565b5f735757371414417b8c6caad45baef941abc7d3ab3273ffffffffffffffffffffffffffffffffffffffff1663e6a43905611e8b611339565b611e93611b02565b6040518363ffffffff1660e01b8152600401611eb0929190612bac565b602060405180830381865afa158015611ecb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611eef9190612b16565b905090565b60605f600267ffffffffffffffff811115611f1257611f1161238d565b5b604051908082528060200260200182016040528015611f405781602001602082028036833780820191505090505b509050611f4b611e52565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611f93573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb79190612c4f565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff16915050825f81518110611ff157611ff061241a565b5b602002602001018360018151811061200c5761200b61241a565b5b60200260200101828152508281525050508091505090565b5f805f80198587098587029250828110838203039150505f810361205c5783828161205257612051612c9f565b5b0492505050612127565b80841161209e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209590612d16565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f6121398383611d78565b61214385846113f5565b945061214f84836113f5565b93506121688584600a61216291906129fb565b86611dd5565b9050949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121c48261219b565b9050919050565b6121d4816121ba565b82525050565b5f6121e583836121cb565b60208301905092915050565b5f602082019050919050565b5f61220782612172565b612211818561217c565b935061221c8361218c565b805f5b8381101561224c57815161223388826121da565b975061223e836121f1565b92505060018101905061221f565b5085935050505092915050565b5f6020820190508181035f83015261227181846121fd565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61229c8161228a565b81146122a6575f80fd5b50565b5f813590506122b781612293565b92915050565b5f602082840312156122d2576122d1612282565b5b5f6122df848285016122a9565b91505092915050565b6122f18161228a565b82525050565b5f60208201905061230a5f8301846122e8565b92915050565b612319816121ba565b82525050565b5f6020820190506123325f830184612310565b92915050565b612341816121ba565b811461234b575f80fd5b50565b5f8135905061235c81612338565b92915050565b5f6020828403121561237757612376612282565b5b5f6123848482850161234e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123f18261228a565b91506123fc8361228a565b9250828203905081811115612414576124136123ba565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6124518261228a565b915061245c8361228a565b9250828201905080821115612474576124736123ba565b5b92915050565b5f8151905061248881612293565b92915050565b5f602082840312156124a3576124a2612282565b5b5f6124b08482850161247a565b91505092915050565b5f6040820190506124cc5f8301856122e8565b81810360208301526124de81846121fd565b90509392505050565b5f80fd5b5f601f19601f8301169050919050565b612504826124eb565b810181811067ffffffffffffffff821117156125235761252261238d565b5b80604052505050565b5f612535612279565b905061254182826124fb565b919050565b5f67ffffffffffffffff8211156125605761255f61238d565b5b602082029050602081019050919050565b5f80fd5b5f61258761258284612546565b61252c565b905080838252602082019050602084028301858111156125aa576125a9612571565b5b835b818110156125d357806125bf888261247a565b8452602084019350506020810190506125ac565b5050509392505050565b5f82601f8301126125f1576125f06124e7565b5b8151612601848260208601612575565b91505092915050565b5f6020828403121561261f5761261e612282565b5b5f82015167ffffffffffffffff81111561263c5761263b612286565b5b612648848285016125dd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f6060820190506126915f830186612310565b61269e6020830185612310565b6126ab60408301846122e8565b949350505050565b5f8115159050919050565b6126c7816126b3565b81146126d1575f80fd5b50565b5f815190506126e2816126be565b92915050565b5f602082840312156126fd576126fc612282565b5b5f61270a848285016126d4565b91505092915050565b5f819050919050565b5f819050919050565b5f61273f61273a61273584612713565b61271c565b61228a565b9050919050565b61274f81612725565b82525050565b5f6040820190506127685f830185612310565b6127756020830184612746565b9392505050565b5f60408201905061278f5f830185612310565b61279c60208301846122e8565b9392505050565b5f60a0820190506127b65f8301886122e8565b6127c36020830187612746565b81810360408301526127d581866121fd565b90506127e46060830185612310565b6127f160808301846122e8565b9695505050505050565b5f60408201905061280e5f8301856122e8565b61281b60208301846122e8565b9392505050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61288c602683612822565b915061289782612832565b604082019050919050565b5f6020820190508181035f8301526128b981612880565b9050919050565b5f8160011c9050919050565b5f808291508390505b6001851115612915578086048111156128f1576128f06123ba565b5b60018516156129005780820291505b808102905061290e856128c0565b94506128d5565b94509492505050565b5f8261292d57600190506129e8565b8161293a575f90506129e8565b8160018114612950576002811461295a57612989565b60019150506129e8565b60ff84111561296c5761296b6123ba565b5b8360020a915084821115612983576129826123ba565b5b506129e8565b5060208310610133831016604e8410600b84101617156129be5782820a9050838111156129b9576129b86123ba565b5b6129e8565b6129cb84848460016128cc565b925090508184048111156129e2576129e16123ba565b5b81810290505b9392505050565b5f60ff82169050919050565b5f612a058261228a565b9150612a10836129ef565b9250612a3d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461291e565b905092915050565b612a4e816129ef565b8114612a58575f80fd5b50565b5f81519050612a6981612a45565b92915050565b5f60208284031215612a8457612a83612282565b5b5f612a9184828501612a5b565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612ace602083612822565b9150612ad982612a9a565b602082019050919050565b5f6020820190508181035f830152612afb81612ac2565b9050919050565b5f81519050612b1081612338565b92915050565b5f60208284031215612b2b57612b2a612282565b5b5f612b3884828501612b02565b91505092915050565b5f606082019050612b545f8301866122e8565b612b6160208301856122e8565b612b6e60408301846122e8565b949350505050565b612b7f816129ef565b82525050565b5f604082019050612b985f830185612b76565b612ba56020830184612b76565b9392505050565b5f604082019050612bbf5f830185612310565b612bcc6020830184612310565b9392505050565b5f6dffffffffffffffffffffffffffff82169050919050565b612bf581612bd3565b8114612bff575f80fd5b50565b5f81519050612c1081612bec565b92915050565b5f63ffffffff82169050919050565b612c2e81612c16565b8114612c38575f80fd5b50565b5f81519050612c4981612c25565b92915050565b5f805f60608486031215612c6657612c65612282565b5b5f612c7386828701612c02565b9350506020612c8486828701612c02565b9250506040612c9586828701612c3b565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4d6174683a206d756c446976206f766572666c6f7700000000000000000000005f82015250565b5f612d00601583612822565b9150612d0b82612ccc565b602082019050919050565b5f6020820190508181035f830152612d2d81612cf4565b905091905056fea2646970667358221220444fc88fac9820679e2cb6a8e58abf0494e57e0b61251f67bc1638370f0cd76b64736f6c634300081a0033";
    // MATIC
    const asset = "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270";
    // USDT
    const currency = "0xc2132D05D31c914a87C6611C10748AEb04B58e8F";
    const args = [[
        asset,
        "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619",
        currency
    ], 20n * (10n**18n)];
    const deployment = await machine.deploy({ bytecode, abi, args });
    const to: string = deployment.unwrap()?.contractAddress!;
    const amountInUnits = 1n * (10n**18n);
    const amountInCurrency = 1n * (10n**18n);

    await (async function() {
        const targetAllocation = await machine.query({
            to,
            methodSignature: "function targetAllocation() external view returns (uint256)",
            methodName: "targetAllocation"
        });
        console.log(`target allocation => ${Number(targetAllocation.unwrap()) / 10**18}%`);
    })();

    await (async function() {
        const sellSidePath = await machine.query({
            to,
            methodSignature: "function sellSidePath() external view returns (address[] memory)",
            methodName: "sellSidePath"
        });
        console.log(sellSidePath.unwrap());
    })();

    await (async function() {
        const buySidePath = await machine.query({
            to,
            methodSignature: "function buySidePath() external view returns (address[] memory)",
            methodName: "buySidePath"
        });
        console.log(buySidePath.unwrap());
    })();

    await (async function() {
        const bestAssets = await machine.query({
            to,
            methodSignature: "function bestAssets() external view returns (uint256)",
            methodName: "bestAssets"
        });
        console.log(`best assets => $${Number(bestAssets.unwrap()) / 10**18}`);
    })();   

    await (async function() {
        const realAssets = await machine.query({
            to,
            methodSignature: "function realAssets() external view returns (uint256)",
            methodName: "realAssets"
        });
        console.log(`real assets => $${Number(realAssets.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const sellSideYield = await machine.query({
            to,
            methodSignature: "function sellSideYield(uint256) external view returns (uint256)",
            methodName: "sellSideYield",
            methodArgs: [
                amountInUnits
            ]
        });
        console.log(`sell side yield => ${Number(sellSideYield.unwrap()) / 10**18}%`);
    })();

    await (async function() {
        const buySideYield = await machine.query({
            to,
            methodSignature: "function buySideYield(uint256) external view returns (uint256)",
            methodName: "buySideYield",
            methodArgs: [
                amountInCurrency
            ]
        });
        console.log(`buy side yield => ${Number(buySideYield.unwrap()) / 10**18}%`);
    })();

    await (async function() {
        const bestSellSideAmountOut = await machine.query({
            to,
            methodSignature: "function bestSellSideAmountOut(uint256) external view returns (uint256)",
            methodName: "bestSellSideAmountOut",
            methodArgs: [
                amountInUnits
            ]
        });
        console.log(`best sell side amount out => $${Number(bestSellSideAmountOut.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const bestBuySideAmountOut = await machine.query({
            to,
            methodSignature: "function bestBuySideAmountOut(uint256) external view returns (uint256)",
            methodName: "bestBuySideAmountOut",
            methodArgs: [
                amountInCurrency
            ]
        });
        console.log(`best buy side amount out => ${Number(bestBuySideAmountOut.unwrap()) / 10**18} units`);
    })();

    await (async function() {
        const realSellSideAmountOut = await machine.query({
            to,
            methodSignature: "function realSellSideAmountOut(uint256) external view returns (uint256)",
            methodName: "realSellSideAmountOut",
            methodArgs: [
                amountInUnits
            ]
        });
        console.log(`real sell side amount out => $${Number(realSellSideAmountOut.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const realBuySideAmountOut = await machine.query({
            to,
            methodSignature: "function realBuySideAmountOut(uint256) external view returns (uint256)",
            methodName: "realBuySideAmountOut",
            methodArgs: [
                amountInCurrency
            ]
        });
        console.log(`real buy side amount out => ${Number(realBuySideAmountOut.unwrap()) / 10**18} units`);
    })();

    await (async function() {
        const sellSideQuote = await machine.query({
            to,
            methodSignature: "function sellSideQuote() external view returns (uint256)",
            methodName: "sellSideQuote"
        });
        console.log(`sell side quote => $${Number(sellSideQuote.unwrap()) / 10**18}`);
    })();

    await (async function() {
        const buySideQuote = await machine.query({
            to,
            methodSignature: "function buySideQuote() external view returns (uint256)",
            methodName: "buySideQuote"
        });
        console.log(`buy side quote => ${Number(buySideQuote.unwrap()) / 10**18} units`);
    })();

    await (async function() {
        await machine.invoke({
            to: asset,
            methodSignature: "function approve(address,uint256) external",
            methodName: "approve",
            methodArgs: [
                to,
                100000n * (10n**18n)
            ]
        });
        const sale = await machine.invoke({
            to,
            methodSignature: "function sell(uint256) external returns (uint256)",
            methodName: "sell",
            methodArgs: [
                amountInUnits
            ]
        });
        sale.unwrap();
        console.log(`sale successful`);
    })();

    await (async function() {
        await machine.invoke({
            to: currency,
            methodSignature: "function approve(address,uint256) external",
            methodName: "approve",
            methodArgs: [
                to,
                100000n * (10n**18n)
            ]
        });
        const purchase = await machine.invoke({
            to,
            methodSignature: "function buy(uint256) external returns (uint256)",
            methodName: "buy",
            methodArgs: [
                amountInCurrency
            ]
        });
        purchase.unwrap();
        console.log(`purchase successful`);
    })();
})();