import { EthereumVirtualMachine } from "../../class/ethereumVirtualMachine/EthereumVirtualMachine.ts";
import { ethers as Ethers } from "ethers";
import { secret } from "../../class/host/Secret.ts";
import { SolFile } from "../../class/host/file/SolFile.ts";
import { File } from "../../class/host/file/File.ts";
import { Path } from "../../class/host/Path.ts";
import * as TsResult from "ts-results";

(async function() {
    let mainnetNodeUrl = "https://polygon-rpc.com";
    let testnetNodeUrl =  "https://rpc.tenderly.co/fork/32d6d64e-587c-47bf-9b50-98d37af5c16d";
    let nodeUrl = testnetNodeUrl;
    let key = secret("polygonPrivateKey");
    if (key.none) {
        err("Script: missing private key");
        return;
    }
    let node = new Ethers.JsonRpcProvider(nodeUrl);
    let signer = new Ethers.Wallet(key.unwrap(), node);
    let machine = EthereumVirtualMachine(signer);
    
    await (async function() {
        let factory = "0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32";
        let router = "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff";
        let link = "0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39";
        let wbtc = "0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6";
    
        let usdc = "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"; 

        let ownableToken = (await deploy(
            "OwnableToken",
            "608060405234801561000f575f80fd5b506040516120a43803806120a4833981810160405281019061003191906102d6565b8282826100438161006e60201b60201c565b508160049081610053919061056b565b508060059081610063919061056b565b50505050505061063a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61018e82610148565b810181811067ffffffffffffffff821117156101ad576101ac610158565b5b80604052505050565b5f6101bf61012f565b90506101cb8282610185565b919050565b5f67ffffffffffffffff8211156101ea576101e9610158565b5b6101f382610148565b9050602081019050919050565b8281835e5f83830152505050565b5f61022061021b846101d0565b6101b6565b90508281526020810184848401111561023c5761023b610144565b5b610247848285610200565b509392505050565b5f82601f83011261026357610262610140565b5b815161027384826020860161020e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102a58261027c565b9050919050565b6102b58161029b565b81146102bf575f80fd5b50565b5f815190506102d0816102ac565b92915050565b5f805f606084860312156102ed576102ec610138565b5b5f84015167ffffffffffffffff81111561030a5761030961013c565b5b6103168682870161024f565b935050602084015167ffffffffffffffff8111156103375761033661013c565b5b6103438682870161024f565b9250506040610354868287016102c2565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103ac57607f821691505b6020821081036103bf576103be610368565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e6565b61042b86836103e6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61046f61046a61046584610443565b61044c565b610443565b9050919050565b5f819050919050565b61048883610455565b61049c61049482610476565b8484546103f2565b825550505050565b5f90565b6104b06104a4565b6104bb81848461047f565b505050565b5b818110156104de576104d35f826104a8565b6001810190506104c1565b5050565b601f821115610523576104f4816103c5565b6104fd846103d7565b8101602085101561050c578190505b610520610518856103d7565b8301826104c0565b50505b505050565b5f82821c905092915050565b5f6105435f1984600802610528565b1980831691505092915050565b5f61055b8383610534565b9150826002028217905092915050565b6105748261035e565b67ffffffffffffffff81111561058d5761058c610158565b5b6105978254610395565b6105a28282856104e2565b5f60209050601f8311600181146105d3575f84156105c1578287015190505b6105cb8582610550565b865550610632565b601f1984166105e1866103c5565b5f5b82811015610608578489015182556001820191506020850194506020810190506105e3565b868310156106255784890151610621601f891682610534565b8355505b6001600288020188555050505b505050505050565b611a5d806106475f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063715018a611610095578063a457c2d711610064578063a457c2d71461029a578063a9059cbb146102ca578063dd62ed3e146102fa578063f2fde38b1461032a576100fe565b8063715018a6146102385780638da5cb5b1461024257806395d89b41146102605780639dc29fac1461027e576100fe565b8063313ce567116100d1578063313ce5671461019e57806339509351146101bc57806340c10f19146101ec57806370a0823114610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a610346565b60405161011791906110d5565b60405180910390f35b61013a60048036038101906101359190611186565b6103d6565b60405161014791906111de565b60405180910390f35b6101586103f8565b6040516101659190611206565b60405180910390f35b6101886004803603810190610183919061121f565b610401565b60405161019591906111de565b60405180910390f35b6101a661042f565b6040516101b3919061128a565b60405180910390f35b6101d660048036038101906101d19190611186565b610437565b6040516101e391906111de565b60405180910390f35b61020660048036038101906102019190611186565b61046d565b005b610222600480360381019061021d91906112a3565b610483565b60405161022f9190611206565b60405180910390f35b6102406104c9565b005b61024a6104dc565b60405161025791906112dd565b60405180910390f35b610268610503565b60405161027591906110d5565b60405180910390f35b61029860048036038101906102939190611186565b610593565b005b6102b460048036038101906102af9190611186565b6105a9565b6040516102c191906111de565b60405180910390f35b6102e460048036038101906102df9190611186565b61061e565b6040516102f191906111de565b60405180910390f35b610314600480360381019061030f91906112f6565b610640565b6040516103219190611206565b60405180910390f35b610344600480360381019061033f91906112a3565b6106c2565b005b60606004805461035590611361565b80601f016020809104026020016040519081016040528092919081815260200182805461038190611361565b80156103cc5780601f106103a3576101008083540402835291602001916103cc565b820191905f5260205f20905b8154815290600101906020018083116103af57829003601f168201915b5050505050905090565b5f806103e0610744565b90506103ed81858561074b565b600191505092915050565b5f600354905090565b5f8061040b610744565b905061041885828561090e565b610423858585610999565b60019150509392505050565b5f6012905090565b5f80610441610744565b90506104628185856104538589610640565b61045d91906113be565b61074b565b600191505092915050565b610475610c08565b61047f8282610c86565b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104d1610c08565b6104da5f610dd5565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461051290611361565b80601f016020809104026020016040519081016040528092919081815260200182805461053e90611361565b80156105895780601f1061056057610100808354040283529160200191610589565b820191905f5260205f20905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b61059b610c08565b6105a58282610e96565b5050565b5f806105b3610744565b90505f6105c08286610640565b905083811015610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90611461565b60405180910390fd5b610612828686840361074b565b60019250505092915050565b5f80610628610744565b9050610635818585610999565b600191505092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6106ca610c08565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072f906114ef565b60405180910390fd5b61074181610dd5565b50565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b09061157d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e9061160b565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109019190611206565b60405180910390a3505050565b5f6109198484610640565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109935781811015610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c90611673565b60405180910390fd5b610992848484840361074b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fe90611701565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c9061178f565b60405180910390fd5b610a8083838361105b565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb9061181d565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bef9190611206565b60405180910390a3610c02848484611060565b50505050565b610c10610744565b73ffffffffffffffffffffffffffffffffffffffff16610c2e6104dc565b73ffffffffffffffffffffffffffffffffffffffff1614610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90611885565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ceb906118ed565b60405180910390fd5b610cff5f838361105b565b8060035f828254610d1091906113be565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dbe9190611206565b60405180910390a3610dd15f8383611060565b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061197b565b60405180910390fd5b610f0f825f8361105b565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a90611a09565b60405180910390fd5b81810360015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160035f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110439190611206565b60405180910390a3611056835f84611060565b505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6110a782611065565b6110b1818561106f565b93506110c181856020860161107f565b6110ca8161108d565b840191505092915050565b5f6020820190508181035f8301526110ed818461109d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611122826110f9565b9050919050565b61113281611118565b811461113c575f80fd5b50565b5f8135905061114d81611129565b92915050565b5f819050919050565b61116581611153565b811461116f575f80fd5b50565b5f813590506111808161115c565b92915050565b5f806040838503121561119c5761119b6110f5565b5b5f6111a98582860161113f565b92505060206111ba85828601611172565b9150509250929050565b5f8115159050919050565b6111d8816111c4565b82525050565b5f6020820190506111f15f8301846111cf565b92915050565b61120081611153565b82525050565b5f6020820190506112195f8301846111f7565b92915050565b5f805f60608486031215611236576112356110f5565b5b5f6112438682870161113f565b93505060206112548682870161113f565b925050604061126586828701611172565b9150509250925092565b5f60ff82169050919050565b6112848161126f565b82525050565b5f60208201905061129d5f83018461127b565b92915050565b5f602082840312156112b8576112b76110f5565b5b5f6112c58482850161113f565b91505092915050565b6112d781611118565b82525050565b5f6020820190506112f05f8301846112ce565b92915050565b5f806040838503121561130c5761130b6110f5565b5b5f6113198582860161113f565b925050602061132a8582860161113f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061137857607f821691505b60208210810361138b5761138a611334565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113c882611153565b91506113d383611153565b92508282019050808211156113eb576113ea611391565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f61144b60258361106f565b9150611456826113f1565b604082019050919050565b5f6020820190508181035f8301526114788161143f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6114d960268361106f565b91506114e48261147f565b604082019050919050565b5f6020820190508181035f830152611506816114cd565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61156760248361106f565b91506115728261150d565b604082019050919050565b5f6020820190508181035f8301526115948161155b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6115f560228361106f565b91506116008261159b565b604082019050919050565b5f6020820190508181035f830152611622816115e9565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f61165d601d8361106f565b915061166882611629565b602082019050919050565b5f6020820190508181035f83015261168a81611651565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6116eb60258361106f565b91506116f682611691565b604082019050919050565b5f6020820190508181035f830152611718816116df565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f61177960238361106f565b91506117848261171f565b604082019050919050565b5f6020820190508181035f8301526117a68161176d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61180760268361106f565b9150611812826117ad565b604082019050919050565b5f6020820190508181035f830152611834816117fb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61186f60208361106f565b915061187a8261183b565b602082019050919050565b5f6020820190508181035f83015261189c81611863565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f6118d7601f8361106f565b91506118e2826118a3565b602082019050919050565b5f6020820190508181035f830152611904816118cb565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61196560218361106f565b91506119708261190b565b604082019050919050565b5f6020820190508181035f83015261199281611959565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119f360228361106f565b91506119fe82611999565b604082019050919050565b5f6020820190508181035f830152611a20816119e7565b905091905056fea26469706673582212208ff6820ed28121253bd8f2856798b50510a6e0b2b48880954ee197117c8a697f64736f6c63430008190033",
            [
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "symbol",
                            "type": "string"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Approval",
                    "type": "event"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "OwnershipTransferred",
                    "type": "event"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Transfer",
                    "type": "event"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "burn",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "subtractedValue",
                            "type": "uint256"
                        }
                    ],
                    "name": "decreaseAllowance",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "addedValue",
                            "type": "uint256"
                        }
                    ],
                    "name": "increaseAllowance",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "mint",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "renounceOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "transferOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                }
            ],
            "TestToken",
            "vTT",
            await signer.getAddress()
        )).unwrap()!;

        let vault = (await deploy(
            "Vault",
            "60a060405234801561000f575f80fd5b5060405161419f38038061419f8339818101604052810190610031919061051f565b80336100428161040060201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050601260805173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100e89190610580565b60ff161461012b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101229061062b565b60405180910390fd5b505f60015f6032811061014157610140610649565b5b600a02019050733c499c542cef5e3811e1192ce70d8cc03d5c3359815f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550737ceb23fd6bc0add59e62ac25578270cff1b9f619600180603281106101c6576101c5610649565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731bfd67037b42cf73acf2047067bd4f2c47d9bfd6600160026032811061023457610233610649565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507353e0bca35ec356bd5dddfebbd1fc0fd03fabad3960016003603281106102a2576102a1610649565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730d500b1d8e8ef31e21c99d1db9a6444d3adf127060016004603281106103105761030f610649565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550678ac7230489e800006001806032811061037157610370610649565b5b600a0201600101819055506801a055690d9db80000600160026032811061039b5761039a610649565b5b600a020160010181905550678ac7230489e8000060016003603281106103c4576103c3610649565b5b600a0201600101819055506802b5e3af16b188000060016004603281106103ee576103ed610649565b5b600a0201600101819055505050610676565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104ee826104c5565b9050919050565b6104fe816104e4565b8114610508575f80fd5b50565b5f81519050610519816104f5565b92915050565b5f60208284031215610534576105336104c1565b5b5f6105418482850161050b565b91505092915050565b5f60ff82169050919050565b61055f8161054a565b8114610569575f80fd5b50565b5f8151905061057a81610556565b92915050565b5f60208284031215610595576105946104c1565b5b5f6105a28482850161056c565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c65546f6b656e436f6e74726f6c6c65723a206f776e61626c65205f8201527f746f6b656e20646563696d616c73206d75737420626520313800000000000000602082015250565b5f6106156039836105ab565b9150610620826105bb565b604082019050919050565b5f6020820190508181035f83015261064281610609565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b608051613b1161068e5f395f6110ac0152613b115ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638da5cb5b116100595780638da5cb5b14610100578063b3d7f6b91461011e578063dd5626cf1461014e578063f2fde38b1461017e57610086565b806301e1d1141461008a57806318160ddd146100a8578063715018a6146100c657806374667b70146100d0575b5f80fd5b61009261019a565b60405161009f919061304e565b60405180910390f35b6100b061052f565b6040516100bd919061304e565b60405180910390f35b6100ce61053d565b005b6100ea60048036038101906100e591906130c5565b610550565b6040516100f791906132be565b60405180910390f35b61010861066a565b60405161011591906132e7565b60405180910390f35b6101386004803603810190610133919061332a565b610691565b604051610145919061304e565b60405180910390f35b6101686004803603810190610163919061332a565b6106b2565b604051610175919061304e565b60405180910390f35b610198600480360381019061019391906130c5565b6106d3565b005b5f806102b3733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101ec91906132e7565b602060405180830381865afa158015610207573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061022b9190613369565b733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610288573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ac91906133ca565b6012610755565b90505f600190505b60328160ff161015610527575f60018260ff16603281106102df576102de6133f5565b5b600a020190505f73ffffffffffffffffffffffffffffffffffffffff16815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461051257610343612d61565b735757371414417b8c6caad45baef941abc7d3ab3281602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff81602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061049281610858565b90505f60078111156104a7576104a66130f0565b5b815f015160078111156104bd576104bc6130f0565b5b1480156104f457505f60078111156104d8576104d76130f0565b5b8160e001515f015160078111156104f2576104f16130f0565b5b145b15610510578060e00151602001518461050d919061344f565b93505b505b506001816105209190613482565b90506102bb565b508091505090565b5f6105386110a9565b905090565b61054561113c565b61054e5f6111ba565b565b610558612df0565b5f806105638461127b565b915060ff1691508015610613575f60018360328110610585576105846133f5565b5b600a02019050610593612df0565b815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081600101548160400181815250506106058161132f565b905080945050505050610665565b61061b612df0565b84816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061065c8161132f565b90508093505050505b919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6106ab8261069e61019a565b6106a661052f565b611864565b9050919050565b5f6106cc826106bf61019a565b6106c761052f565b6118df565b9050919050565b6106db61113c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090613536565b60405180910390fd5b610752816111ba565b50565b5f600260ff168360ff161080156107725750600260ff168260ff16105b156107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a9906135c4565b60405180910390fd5b601260ff168360ff161180156107ce5750601260ff168260ff16115b1561080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590613652565b60405180910390fd5b5f84148061082157508160ff168360ff16145b61084d576108488483600a610836919061379f565b85600a610843919061379f565b611948565b61084f565b835b90509392505050565b610860612d61565b5f73ffffffffffffffffffffffffffffffffffffffff16826040015173ffffffffffffffffffffffffffffffffffffffff1614806108cd57505f73ffffffffffffffffffffffffffffffffffffffff16826060015173ffffffffffffffffffffffffffffffffffffffff16145b8061090a57505f73ffffffffffffffffffffffffffffffffffffffff1682602001515f015173ffffffffffffffffffffffffffffffffffffffff16145b8061094857505f73ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff16145b15610985576004825f01906007811115610965576109646130f0565b5b90816007811115610979576109786130f0565b5b815250508190506110a4565b61098d612e68565b82602001515f015181602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082602001516020015181602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508260400151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508260600151816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610b82816040015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610acb91906132e7565b602060405180830381865afa158015610ae6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b0a9190613369565b826040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b57573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7b91906133ca565b6012610755565b8160c0018181525050610b9481611a52565b90505f6006811115610ba957610ba86130f0565b5b815f01516006811115610bbf57610bbe6130f0565b5b14610d465760016006811115610bd857610bd76130f0565b5b815f01516006811115610bee57610bed6130f0565b5b14610d0c5760026006811115610c0757610c066130f0565b5b815f01516006811115610c1d57610c1c6130f0565b5b14610d045760036006811115610c3657610c356130f0565b5b815f01516006811115610c4c57610c4b6130f0565b5b14610cfc5760046006811115610c6557610c646130f0565b5b815f01516006811115610c7b57610c7a6130f0565b5b14610cf45760056006811115610c9457610c936130f0565b5b815f01516006811115610caa57610ca96130f0565b5b14610cec57600680811115610cc257610cc16130f0565b5b815f01516006811115610cd857610cd76130f0565b5b14610ce4576007610ce7565b60065b610cef565b60055b610cf7565b60045b610cff565b60035b610d07565b60025b610d0f565b60015b835f01906007811115610d2557610d246130f0565b5b90816007811115610d3957610d386130f0565b5b81525050829150506110a4565b5f835f01906007811115610d5d57610d5c6130f0565b5b90816007811115610d7157610d706130f0565b5b81525050610e6c816040015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610db591906132e7565b602060405180830381865afa158015610dd0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610df49190613369565b826040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6591906133ca565b6012610755565b8360800181815250505f6006811115610e8857610e876130f0565b5b8161014001515f01516006811115610ea357610ea26130f0565b5b146110165760016006811115610ebc57610ebb6130f0565b5b8161014001515f01516006811115610ed757610ed66130f0565b5b1461100e5760026006811115610ef057610eef6130f0565b5b8161014001515f01516006811115610f0b57610f0a6130f0565b5b146110065760036006811115610f2457610f236130f0565b5b8161014001515f01516006811115610f3f57610f3e6130f0565b5b14610ffe5760046006811115610f5857610f576130f0565b5b8161014001515f01516006811115610f7357610f726130f0565b5b14610ff65760056006811115610f8c57610f8b6130f0565b5b8161014001515f01516006811115610fa757610fa66130f0565b5b14610fee57600680811115610fbf57610fbe6130f0565b5b8161014001515f01516006811115610fda57610fd96130f0565b5b14610fe6576007610fe9565b60065b610ff1565b60055b610ff9565b60045b611001565b60035b611009565b60025b611011565b60015b611018565b5f5b8360e001515f01906007811115611032576110316130f0565b5b90816007811115611046576110456130f0565b5b815250505f8360800151146110645780610140015160200151611066565b5f5b8360e00151602001818152505080608001518360a0019060ff16908160ff16815250508060a001518360c0019060ff16908160ff1681525050829150505b919050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611113573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111379190613369565b905090565b6111446127f9565b73ffffffffffffffffffffffffffffffffffffffff1661116261066a565b73ffffffffffffffffffffffffffffffffffffffff16146111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111af90613833565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f805f5b60328160ff161015611322575f60018260ff16603281106112a3576112a26133f5565b5b600a020190508473ffffffffffffffffffffffffffffffffffffffff16815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361130d5781600193509350505061132a565b5060018161131b9190613482565b905061127f565b505f80915091505b915091565b611337612df0565b5f73ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16036113a6576005825f01906008811115611386576113856130f0565b5b9081600881111561139a576113996130f0565b5b8152505081905061185f565b5f6113af61019a565b036113ec576001825f019060088111156113cc576113cb6130f0565b5b908160088111156113e0576113df6130f0565b5b8152505081905061185f565b6113f4612d61565b735757371414417b8c6caad45baef941abc7d3ab3281602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff81602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508260200151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061152481610858565b90505f835f0190600881111561153d5761153c6130f0565b5b90816008811115611551576115506130f0565b5b8152505080608001518360a00181815250505f6007811115611576576115756130f0565b5b8160e001515f015160078111156115905761158f6130f0565b5b146115d9578060e001515f01518361012001515f019060078111156115b8576115b76130f0565b5b908160078111156115cc576115cb6130f0565b5b815250508291505061185f565b8060e0015160200151836101200151602001818152505061161c61160d8461012001516020015161160861019a565b612800565b68056bc75e2d6310000061281c565b83606001818152505061164c61164261163361019a565b68056bc75e2d63100000612800565b846040015161281c565b8361010001818152505061165e612e68565b735757371414417b8c6caad45baef941abc7d3ab3281602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff81602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360200151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508361010001518160e001818152505061179d81611a52565b90505f60068111156117b2576117b16130f0565b5b8161016001515f015160068111156117cd576117cc6130f0565b5b146117dc57839250505061185f565b8061016001516020015184608001818152505083608001518460a001511115611824576118118460a001518560800151612838565b8460c0018181525050839250505061185f565b83608001518460a0015110156118595761184684608001518560a00151612838565b8460e0018181525050839250505061185f565b83925050505b919050565b5f808314801561187357505f82145b1561188957683635c9adc5dea0000090506118d8565b5f831415801561189857505f82145b156118ae57683635c9adc5dea0000090506118d8565b5f831480156118bd57505f8214155b156118ca575f90506118d8565b6118d5848385611948565b90505b9392505050565b5f80831480156118ee57505f82145b156118fb575f9050611941565b5f831415801561190a57505f82145b15611917575f9050611941565b5f8314801561192657505f8214155b15611933575f9050611941565b61193e848385611948565b90505b9392505050565b5f805f80198587098587029250828110838203039150505f81036119805783828161197657611975613851565b5b0492505050611a4b565b8084116119c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b9906138c8565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b611a5a612e68565b5f8260c0015114611a6f578160c00151611a79565b670de0b6b3a76400005b8260c00181815250505f8260e0015114611a97578160e00151611aa1565b670de0b6b3a76400005b8260e00181815250505f73ffffffffffffffffffffffffffffffffffffffff16826040015173ffffffffffffffffffffffffffffffffffffffff161480611b1757505f73ffffffffffffffffffffffffffffffffffffffff16826060015173ffffffffffffffffffffffffffffffffffffffff16145b80611b5457505f73ffffffffffffffffffffffffffffffffffffffff1682602001515f015173ffffffffffffffffffffffffffffffffffffffff16145b80611b9257505f73ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff16145b15611d19576004825f01906006811115611baf57611bae6130f0565b5b90816006811115611bc357611bc26130f0565b5b81525050815f01518261014001515f01906006811115611be657611be56130f0565b5b90816006811115611bfa57611bf96130f0565b5b81525050815f01518261016001515f01906006811115611c1d57611c1c6130f0565b5b90816006811115611c3157611c306130f0565b5b81525050815f01518261018001515f01906006811115611c5457611c536130f0565b5b90816006811115611c6857611c676130f0565b5b81525050815f0151826101a001515f01906006811115611c8b57611c8a6130f0565b5b90816006811115611c9f57611c9e6130f0565b5b81525050815f0151826101c001515f01906006811115611cc257611cc16130f0565b5b90816006811115611cd657611cd56130f0565b5b81525050815f0151826101e001515f01906006811115611cf957611cf86130f0565b5b90816006811115611d0d57611d0c6130f0565b5b815250508190506127f4565b5f826040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8b91906133ca565b90505f836060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ddb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dff91906133ca565b90505f84602001515f015173ffffffffffffffffffffffffffffffffffffffff1663e6a43905866040015187606001516040518363ffffffff1660e01b8152600401611e4c9291906138e6565b602060405180830381865afa158015611e67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e8b9190613921565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612149576003855f01906006811115611ed857611ed76130f0565b5b90816006811115611eec57611eeb6130f0565b5b81525050846040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f6191906133ca565b856080019060ff16908160ff1681525050846060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fbf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fe391906133ca565b8560a0019060ff16908160ff1681525050845f01518561014001515f01906006811115612013576120126130f0565b5b90816006811115612027576120266130f0565b5b81525050845f01518561016001515f0190600681111561204a576120496130f0565b5b9081600681111561205e5761205d6130f0565b5b81525050845f01518561018001515f01906006811115612081576120806130f0565b5b90816006811115612095576120946130f0565b5b81525050845f0151856101a001515f019060068111156120b8576120b76130f0565b5b908160068111156120cc576120cb6130f0565b5b81525050845f0151856101c001515f019060068111156120ef576120ee6130f0565b5b90816006811115612103576121026130f0565b5b81525050845f0151856101e001515f01906006811115612126576121256130f0565b5b9081600681111561213a576121396130f0565b5b815250508493505050506127f4565b5f808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612194573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121b891906139c8565b50915091505f8373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612207573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061222b9190613921565b90505f8473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612277573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061229b9190613921565b90508173ffffffffffffffffffffffffffffffffffffffff16896040015173ffffffffffffffffffffffffffffffffffffffff1614801561230b57508073ffffffffffffffffffffffffffffffffffffffff16896060015173ffffffffffffffffffffffffffffffffffffffff16145b15612584575f895f01906006811115612327576123266130f0565b5b9081600681111561233b5761233a6130f0565b5b81525050886040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561238c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123b091906133ca565b896080019060ff16908160ff1681525050886060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561240e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061243291906133ca565b8960a0019060ff16908160ff168152505061245f846dffffffffffffffffffffffffffff16886012610755565b89610100018181525050612485836dffffffffffffffffffffffffffff16876012610755565b896101200181815250506124b18960c001518a61010001518b61012001518c6020015160200151612894565b8961014001819052506124dc8960e001518a61012001518b61010001518c6020015160200151612894565b8961016001819052506125078960c001518a61010001518b61012001518c60200151602001516129f0565b8961018001819052506125328960e001518a61012001518b61010001518c60200151602001516129f0565b896101a0018190525061254f8961018001518a6101400151612b60565b896101c0018190525061256c896101a001518a6101600151612b60565b896101e00181905250889750505050505050506127f4565b5f895f0190600681111561259b5761259a6130f0565b5b908160068111156125af576125ae6130f0565b5b81525050886040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612600573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061262491906133ca565b896080019060ff16908160ff1681525050886060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612682573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126a691906133ca565b8960a0019060ff16908160ff16815250506126d3836dffffffffffffffffffffffffffff16886012610755565b896101000181815250506126f9846dffffffffffffffffffffffffffff16876012610755565b896101200181815250506127258960c001518a61010001518b61012001518c6020015160200151612894565b8961014001819052506127508960e001518a61012001518b61010001518c6020015160200151612894565b89610160018190525061277b8960c001518a61010001518b61012001518c60200151602001516129f0565b8961018001819052506127a68960e001518a61012001518b61010001518c60200151602001516129f0565b896101a001819052506127c38961018001518a6101400151612b60565b896101c001819052506127e0896101a001518a6101600151612b60565b896101e00181905250889750505050505050505b919050565b5f33905090565b5f61281483670de0b6b3a764000084611948565b905092915050565b5f6128308383670de0b6b3a7640000611948565b905092915050565b5f805f6128458585612cb6565b9150915081612889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161288090613a88565b60405180910390fd5b809250505092915050565b61289c612f4a565b6128a4612f4a565b5f86036128e4576002815f019060068111156128c3576128c26130f0565b5b908160068111156128d7576128d66130f0565b5b81525050809150506129e8565b5f8514806128f157505f84145b1561292f576001815f0190600681111561290e5761290d6130f0565b5b90816006811115612922576129216130f0565b5b81525050809150506129e8565b5f815f01906006811115612946576129456130f0565b5b9081600681111561295a576129596130f0565b5b815250508273ffffffffffffffffffffffffffffffffffffffff1663ad615dec8787876040518463ffffffff1660e01b815260040161299b93929190613aa6565b602060405180830381865afa1580156129b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129da9190613369565b816020018181525050809150505b949350505050565b6129f8612f74565b612a00612f74565b5f8603612a4a576002815f01906006811115612a1f57612a1e6130f0565b5b90816006811115612a3357612a326130f0565b5b815250505f81602001818152505080915050612b58565b5f851480612a5757505f84145b15612a9f576001815f01906006811115612a7457612a736130f0565b5b90816006811115612a8857612a876130f0565b5b815250505f81602001818152505080915050612b58565b5f815f01906006811115612ab657612ab56130f0565b5b90816006811115612aca57612ac96130f0565b5b815250508273ffffffffffffffffffffffffffffffffffffffff1663054d50d48787876040518463ffffffff1660e01b8152600401612b0b93929190613aa6565b602060405180830381865afa158015612b26573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b4a9190613369565b816020018181525050809150505b949350505050565b612b68612f9e565b612b70612f9e565b5f6006811115612b8357612b826130f0565b5b835f01516006811115612b9957612b986130f0565b5b14612bd957825f0151815f01906006811115612bb857612bb76130f0565b5b90816006811115612bcc57612bcb6130f0565b5b8152505080915050612cb0565b5f6006811115612bec57612beb6130f0565b5b845f01516006811115612c0257612c016130f0565b5b14612c4257835f0151815f01906006811115612c2157612c206130f0565b5b90816006811115612c3557612c346130f0565b5b8152505080915050612cb0565b826020015184602001511115612c615782602001518460200181815250505b5f815f01906006811115612c7857612c776130f0565b5b90816006811115612c8c57612c8b6130f0565b5b81525050612ca284602001518460200151612cdc565b816020018181525050809150505b92915050565b5f8083831115612ccb575f8091509150612cd5565b6001838503915091505b9250929050565b5f612cf968056bc75e2d63100000612cf48585612d01565b612838565b905092915050565b5f808303612d11575f9050612d36565b81831015612d2857612d238383612d3c565b612d33565b68056bc75e2d631000005b90505b92915050565b5f612d59612d4a8484612800565b68056bc75e2d6310000061281c565b905092915050565b6040518061010001604052805f6007811115612d8057612d7f6130f0565b5b8152602001612d8d612fc8565b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f60ff1681526020015f60ff168152602001612dea61300c565b81525090565b6040518061014001604052805f6008811115612e0f57612e0e6130f0565b5b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f8152602001612e6261300c565b81525090565b6040518061020001604052805f6006811115612e8757612e866130f0565b5b8152602001612e94612fc8565b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f60ff1681526020015f60ff1681526020015f81526020015f81526020015f81526020015f8152602001612f03612f4a565b8152602001612f10612f4a565b8152602001612f1d612f74565b8152602001612f2a612f74565b8152602001612f37612f9e565b8152602001612f44612f9e565b81525090565b60405180604001604052805f6006811115612f6857612f676130f0565b5b81526020015f81525090565b60405180604001604052805f6006811115612f9257612f916130f0565b5b81526020015f81525090565b60405180604001604052805f6006811115612fbc57612fbb6130f0565b5b81526020015f81525090565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090565b60405180604001604052805f600781111561302a576130296130f0565b5b81526020015f81525090565b5f819050919050565b61304881613036565b82525050565b5f6020820190506130615f83018461303f565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6130948261306b565b9050919050565b6130a48161308a565b81146130ae575f80fd5b50565b5f813590506130bf8161309b565b92915050565b5f602082840312156130da576130d9613067565b5b5f6130e7848285016130b1565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6009811061312e5761312d6130f0565b5b50565b5f81905061313e8261311d565b919050565b5f61314d82613131565b9050919050565b61315d81613143565b82525050565b61316c8161308a565b82525050565b61317b81613036565b82525050565b60088110613192576131916130f0565b5b50565b5f8190506131a282613181565b919050565b5f6131b182613195565b9050919050565b6131c1816131a7565b82525050565b604082015f8201516131db5f8501826131b8565b5060208201516131ee6020850182613172565b50505050565b61016082015f8201516132095f850182613154565b50602082015161321c6020850182613163565b50604082015161322f6040850182613172565b5060608201516132426060850182613172565b5060808201516132556080850182613172565b5060a082015161326860a0850182613172565b5060c082015161327b60c0850182613172565b5060e082015161328e60e0850182613172565b506101008201516132a3610100850182613172565b506101208201516132b86101208501826131c7565b50505050565b5f610160820190506132d25f8301846131f4565b92915050565b6132e18161308a565b82525050565b5f6020820190506132fa5f8301846132d8565b92915050565b61330981613036565b8114613313575f80fd5b50565b5f8135905061332481613300565b92915050565b5f6020828403121561333f5761333e613067565b5b5f61334c84828501613316565b91505092915050565b5f8151905061336381613300565b92915050565b5f6020828403121561337e5761337d613067565b5b5f61338b84828501613355565b91505092915050565b5f60ff82169050919050565b6133a981613394565b81146133b3575f80fd5b50565b5f815190506133c4816133a0565b92915050565b5f602082840312156133df576133de613067565b5b5f6133ec848285016133b6565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61345982613036565b915061346483613036565b925082820190508082111561347c5761347b613422565b5b92915050565b5f61348c82613394565b915061349783613394565b9250828201905060ff8111156134b0576134af613422565b5b92915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6135206026836134b6565b915061352b826134c6565b604082019050919050565b5f6020820190508181035f83015261354d81613514565b9050919050565b7f4669786564506f696e74456e67696e653a2060646563696d616c7360203c20605f8201527f5f4d494e5f444543494d414c5360000000000000000000000000000000000000602082015250565b5f6135ae602e836134b6565b91506135b982613554565b604082019050919050565b5f6020820190508181035f8301526135db816135a2565b9050919050565b7f4669786564506f696e74456e67696e653a2060646563696d616c7360203e20605f8201527f5f4d41585f444543494d414c5360000000000000000000000000000000000000602082015250565b5f61363c602e836134b6565b9150613647826135e2565b604082019050919050565b5f6020820190508181035f83015261366981613630565b9050919050565b5f8160011c9050919050565b5f808291508390505b60018511156136c5578086048111156136a1576136a0613422565b5b60018516156136b05780820291505b80810290506136be85613670565b9450613685565b94509492505050565b5f826136dd5760019050613798565b816136ea575f9050613798565b8160018114613700576002811461370a57613739565b6001915050613798565b60ff84111561371c5761371b613422565b5b8360020a91508482111561373357613732613422565b5b50613798565b5060208310610133831016604e8410600b841016171561376e5782820a90508381111561376957613768613422565b5b613798565b61377b848484600161367c565b9250905081840481111561379257613791613422565b5b81810290505b9392505050565b5f6137a982613036565b91506137b483613394565b92506137e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846136ce565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61381d6020836134b6565b9150613828826137e9565b602082019050919050565b5f6020820190508181035f83015261384a81613811565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4d6174683a206d756c446976206f766572666c6f7700000000000000000000005f82015250565b5f6138b26015836134b6565b91506138bd8261387e565b602082019050919050565b5f6020820190508181035f8301526138df816138a6565b9050919050565b5f6040820190506138f95f8301856132d8565b61390660208301846132d8565b9392505050565b5f8151905061391b8161309b565b92915050565b5f6020828403121561393657613935613067565b5b5f6139438482850161390d565b91505092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61396e8161394c565b8114613978575f80fd5b50565b5f8151905061398981613965565b92915050565b5f63ffffffff82169050919050565b6139a78161398f565b81146139b1575f80fd5b50565b5f815190506139c28161399e565b92915050565b5f805f606084860312156139df576139de613067565b5b5f6139ec8682870161397b565b93505060206139fd8682870161397b565b9250506040613a0e868287016139b4565b9150509250925092565b7f4669786564506f696e74456e67696e653a2061726974686d6574696320756e645f8201527f6572666c6f770000000000000000000000000000000000000000000000000000602082015250565b5f613a726026836134b6565b9150613a7d82613a18565b604082019050919050565b5f6020820190508181035f830152613a9f81613a66565b9050919050565b5f606082019050613ab95f83018661303f565b613ac6602083018561303f565b613ad3604083018461303f565b94935050505056fea26469706673582212203113bb9a1b44adc7ba46fd68c8acf904c47737f120685e7a03fbfb0d9655a0b464736f6c63430008190033",
            [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "ownableToken",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "OwnershipTransferred",
                    "type": "event"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": false,
                            "internalType": "address",
                            "name": "tokenIn",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "address",
                            "name": "tokenOut",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "amountIn",
                            "type": "uint256"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "amountOut",
                            "type": "uint256"
                        }
                    ],
                    "name": "Swap",
                    "type": "event"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "name": "debug__fecthSlotData",
                    "outputs": [
                        {
                            "components": [
                                {
                                    "internalType": "enum Vault.SlotResult",
                                    "name": "result",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "address",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "targetAllocation",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "actualAllocation",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "targetBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "actualBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "surplusBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "deficitBalance",
                                    "type": "uint256"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "enum RebalanceEngine.RebalanceEngineResult",
                                            "name": "result",
                                            "type": "uint8"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        }
                                    ],
                                    "internalType": "struct RebalanceEngine.TotalValue",
                                    "name": "totalValue",
                                    "type": "tuple"
                                }
                            ],
                            "internalType": "struct Vault.Slot",
                            "name": "",
                            "type": "tuple"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "supplyIn",
                            "type": "uint256"
                        }
                    ],
                    "name": "previewBurn",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "assetsIn",
                            "type": "uint256"
                        }
                    ],
                    "name": "previewMint",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "renounceOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "totalAssets",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "transferOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                }
            ],
            ownableToken
        )).unwrap()!;

        (await machine.invoke({
            to: ownableToken,
            methodSignature: "function transferOwnership(address) external",
            methodName: "transferOwnership",
            methodArgs: [
                vault
            ]
        })).unwrap();

        await transfer(link, 3994);

        log("total assets", await totalAssets());
        log("total value", await totalValue());
        log("target value", await targetValue());
        log("target allocation", await targetAllocation());
        log("actual allocation", await actualAllocation());
        log("target balance", await targetBalance());
        log("actual balance", await actualBalance());
        log("surplus balance", await surplusBalance());
        log("deficit balance", await deficitBalance());

        await transfer(wbtc, 1);

        log("total assets", await totalAssets());
        log("total value", await totalValue());
        log("target value", await targetValue());
        log("target allocation", await targetAllocation());
        log("actual allocation", await actualAllocation());
        log("target balance", await targetBalance());
        log("actual balance", await actualBalance());
        log("surplus balance", await surplusBalance());
        log("deficit balance", await deficitBalance());

        async function totalAssets() {
            return "$" + Number((await machine.query({
                to: vault,
                methodSignature: "function totalAssets() external view returns (uint256)",
                methodName: "totalAssets"
            })).unwrap() as any) / 10**18;
        }

        async function totalValue() {
            return "$" + await format((await fetch())[9][1])
        }

        async function targetValue() {
            return "$" + await format((await fetch())[8]);
        }

        async function deficitBalance() {
            return await format((await fetch())[7]) + " tokens";
        }

        async function surplusBalance() {
            return await format((await fetch())[6]) + " tokens";
        }

        async function actualBalance() {
            return await format((await fetch())[5]) + " tokens";
        }

        async function targetBalance() {
            return await format((await fetch())[4]) + " tokens";
        }

        async function targetAllocation() {
            return await format((await fetch())[2]) + "%";
        }

        async function actualAllocation() {
            return await format((await fetch())[3]) + "%";
        }

        async function fetch() {
            let result = (await machine.query({
                to: vault,
                methodSignature: `function debug__fecthSlotData(address) external view returns (uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,(uint8,uint256))`,
                methodName: "debug__fecthSlotData",
                methodArgs: [
                    link
                ]
            })).unwrap() as any;
            return result;
        }

        async function transfer(token: string, value: number) {
            let decimals = (await machine.query({
                to: token,
                methodSignature: "function decimals() external view returns (uint8)",
                methodName: "decimals"
            })).unwrap() as bigint;
            (await machine.invoke({
                to: token,
                methodSignature: "function transfer(address,uint256) external",
                methodName: "transfer",
                methodArgs: [
                    vault,
                    BigInt(value * 10**Number(decimals))
                ]
            })).unwrap();
        }

        async function format(bigint: bigint) {
            return Number(bigint) / 10**18;
        }
    })();

    async function deploySolFile(path: string, ...args: unknown[]): Promise<TsResult.Option<string>> {
        let file = File(Path(path));
        let contractName = file.name().unwrapOr("UnknownContract");
        let sol = SolFile(Path(path));
        if (sol.err) {
            err(contractName + ": unable to build sol file");
            err(contractName + ": " + sol.toString());
            return TsResult.None;
        }
        let errors = sol.unwrap().errors();
        if (errors.err) {
            err(contractName + ": unable to generate errors");
            err(contractName + ": " + errors.toString());
            return TsResult.None;
        }
        if (errors.unwrap().length != 0) {
            err(contractName + ": has source code errors");
            errors.unwrap().forEach(error => err(contractName + ": " + error));
            return TsResult.None;
        }
        let bytecode = sol.unwrap().bytecode();
        if (bytecode.err) {
            err(contractName + ": unable to generate bytecode");
            err(contractName + ": " + bytecode.toString());
            return TsResult.None;
        }
        let abi = sol.unwrap().abi();
        if (abi.err) {
            err(contractName + ": unable to generate abi");
            err(contractName + ": " + abi.toString());
            return TsResult.None;
        }
        return await deploy(contractName, bytecode.unwrap(), abi.unwrap(), args);
    }

    async function deploy(contractName: string, bytecode: string, abi?: object[] | string[], ...args: unknown[]): Promise<TsResult.Option<string>> {
        let deployment = await machine.deploy({ bytecode, abi, args });
        if (deployment.err) {
            err(contractName + ": unable to deploy");
            err(contractName + ": " + deployment.toString());
            return TsResult.None;
        }
        let address = deployment.unwrap()?.contractAddress;
        if (!address) {
            err(contractName + ": may have been deployed but did not return an address");
            return TsResult.None;
        }
        return TsResult.Some(address);
    }

    function log(...any: any[]) {
        return console.log(...any);
    }
    
    function err(...any: any[]) {
        return console.error(...any);
    }
})();

