import { EthereumVirtualMachine } from "../../class/ethereumVirtualMachine/EthereumVirtualMachine.ts";
import { ethers as Ethers } from "ethers";
import { secret } from "../../class/host/Secret.ts";
import { SolFile } from "../../class/host/file/SolFile.ts";
import { File } from "../../class/host/file/File.ts";
import { Path } from "../../class/host/Path.ts";
import * as TsResult from "ts-results";

(async function() {
    let mainnetNodeUrl = "https://polygon-rpc.com";
    let testnetNodeUrl =  "https://rpc.tenderly.co/fork/ca9185f3-d050-4189-90b5-53d35e920601";
    let nodeUrl = testnetNodeUrl;
    let key = secret("polygonPrivateKey");
    if (key.none) {
        err("Script: missing private key");
        return;
    }
    let node = new Ethers.JsonRpcProvider(nodeUrl);
    let signer = new Ethers.Wallet(key.unwrap(), node);
    let machine = EthereumVirtualMachine(signer);
    
    await (async function() {
        let factory = "0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32";
        let router = "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff";
        let usdc = "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359";
        let weth = "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619";
        let wbtc = "0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6";
        let link = "0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39";
        let wmatic = "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270";

        let ownableToken = (await deploy(
            "OwnableToken",
            "608060405234801561000f575f80fd5b506040516120a43803806120a4833981810160405281019061003191906102d6565b8282826100438161006e60201b60201c565b508160049081610053919061056b565b508060059081610063919061056b565b50505050505061063a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61018e82610148565b810181811067ffffffffffffffff821117156101ad576101ac610158565b5b80604052505050565b5f6101bf61012f565b90506101cb8282610185565b919050565b5f67ffffffffffffffff8211156101ea576101e9610158565b5b6101f382610148565b9050602081019050919050565b8281835e5f83830152505050565b5f61022061021b846101d0565b6101b6565b90508281526020810184848401111561023c5761023b610144565b5b610247848285610200565b509392505050565b5f82601f83011261026357610262610140565b5b815161027384826020860161020e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102a58261027c565b9050919050565b6102b58161029b565b81146102bf575f80fd5b50565b5f815190506102d0816102ac565b92915050565b5f805f606084860312156102ed576102ec610138565b5b5f84015167ffffffffffffffff81111561030a5761030961013c565b5b6103168682870161024f565b935050602084015167ffffffffffffffff8111156103375761033661013c565b5b6103438682870161024f565b9250506040610354868287016102c2565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103ac57607f821691505b6020821081036103bf576103be610368565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e6565b61042b86836103e6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61046f61046a61046584610443565b61044c565b610443565b9050919050565b5f819050919050565b61048883610455565b61049c61049482610476565b8484546103f2565b825550505050565b5f90565b6104b06104a4565b6104bb81848461047f565b505050565b5b818110156104de576104d35f826104a8565b6001810190506104c1565b5050565b601f821115610523576104f4816103c5565b6104fd846103d7565b8101602085101561050c578190505b610520610518856103d7565b8301826104c0565b50505b505050565b5f82821c905092915050565b5f6105435f1984600802610528565b1980831691505092915050565b5f61055b8383610534565b9150826002028217905092915050565b6105748261035e565b67ffffffffffffffff81111561058d5761058c610158565b5b6105978254610395565b6105a28282856104e2565b5f60209050601f8311600181146105d3575f84156105c1578287015190505b6105cb8582610550565b865550610632565b601f1984166105e1866103c5565b5f5b82811015610608578489015182556001820191506020850194506020810190506105e3565b868310156106255784890151610621601f891682610534565b8355505b6001600288020188555050505b505050505050565b611a5d806106475f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063715018a611610095578063a457c2d711610064578063a457c2d71461029a578063a9059cbb146102ca578063dd62ed3e146102fa578063f2fde38b1461032a576100fe565b8063715018a6146102385780638da5cb5b1461024257806395d89b41146102605780639dc29fac1461027e576100fe565b8063313ce567116100d1578063313ce5671461019e57806339509351146101bc57806340c10f19146101ec57806370a0823114610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a610346565b60405161011791906110d5565b60405180910390f35b61013a60048036038101906101359190611186565b6103d6565b60405161014791906111de565b60405180910390f35b6101586103f8565b6040516101659190611206565b60405180910390f35b6101886004803603810190610183919061121f565b610401565b60405161019591906111de565b60405180910390f35b6101a661042f565b6040516101b3919061128a565b60405180910390f35b6101d660048036038101906101d19190611186565b610437565b6040516101e391906111de565b60405180910390f35b61020660048036038101906102019190611186565b61046d565b005b610222600480360381019061021d91906112a3565b610483565b60405161022f9190611206565b60405180910390f35b6102406104c9565b005b61024a6104dc565b60405161025791906112dd565b60405180910390f35b610268610503565b60405161027591906110d5565b60405180910390f35b61029860048036038101906102939190611186565b610593565b005b6102b460048036038101906102af9190611186565b6105a9565b6040516102c191906111de565b60405180910390f35b6102e460048036038101906102df9190611186565b61061e565b6040516102f191906111de565b60405180910390f35b610314600480360381019061030f91906112f6565b610640565b6040516103219190611206565b60405180910390f35b610344600480360381019061033f91906112a3565b6106c2565b005b60606004805461035590611361565b80601f016020809104026020016040519081016040528092919081815260200182805461038190611361565b80156103cc5780601f106103a3576101008083540402835291602001916103cc565b820191905f5260205f20905b8154815290600101906020018083116103af57829003601f168201915b5050505050905090565b5f806103e0610744565b90506103ed81858561074b565b600191505092915050565b5f600354905090565b5f8061040b610744565b905061041885828561090e565b610423858585610999565b60019150509392505050565b5f6012905090565b5f80610441610744565b90506104628185856104538589610640565b61045d91906113be565b61074b565b600191505092915050565b610475610c08565b61047f8282610c86565b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104d1610c08565b6104da5f610dd5565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461051290611361565b80601f016020809104026020016040519081016040528092919081815260200182805461053e90611361565b80156105895780601f1061056057610100808354040283529160200191610589565b820191905f5260205f20905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b61059b610c08565b6105a58282610e96565b5050565b5f806105b3610744565b90505f6105c08286610640565b905083811015610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90611461565b60405180910390fd5b610612828686840361074b565b60019250505092915050565b5f80610628610744565b9050610635818585610999565b600191505092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6106ca610c08565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072f906114ef565b60405180910390fd5b61074181610dd5565b50565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b09061157d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e9061160b565b60405180910390fd5b8060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109019190611206565b60405180910390a3505050565b5f6109198484610640565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109935781811015610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c90611673565b60405180910390fd5b610992848484840361074b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fe90611701565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c9061178f565b60405180910390fd5b610a8083838361105b565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb9061181d565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bef9190611206565b60405180910390a3610c02848484611060565b50505050565b610c10610744565b73ffffffffffffffffffffffffffffffffffffffff16610c2e6104dc565b73ffffffffffffffffffffffffffffffffffffffff1614610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90611885565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ceb906118ed565b60405180910390fd5b610cff5f838361105b565b8060035f828254610d1091906113be565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dbe9190611206565b60405180910390a3610dd15f8383611060565b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061197b565b60405180910390fd5b610f0f825f8361105b565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a90611a09565b60405180910390fd5b81810360015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160035f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110439190611206565b60405180910390a3611056835f84611060565b505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6110a782611065565b6110b1818561106f565b93506110c181856020860161107f565b6110ca8161108d565b840191505092915050565b5f6020820190508181035f8301526110ed818461109d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611122826110f9565b9050919050565b61113281611118565b811461113c575f80fd5b50565b5f8135905061114d81611129565b92915050565b5f819050919050565b61116581611153565b811461116f575f80fd5b50565b5f813590506111808161115c565b92915050565b5f806040838503121561119c5761119b6110f5565b5b5f6111a98582860161113f565b92505060206111ba85828601611172565b9150509250929050565b5f8115159050919050565b6111d8816111c4565b82525050565b5f6020820190506111f15f8301846111cf565b92915050565b61120081611153565b82525050565b5f6020820190506112195f8301846111f7565b92915050565b5f805f60608486031215611236576112356110f5565b5b5f6112438682870161113f565b93505060206112548682870161113f565b925050604061126586828701611172565b9150509250925092565b5f60ff82169050919050565b6112848161126f565b82525050565b5f60208201905061129d5f83018461127b565b92915050565b5f602082840312156112b8576112b76110f5565b5b5f6112c58482850161113f565b91505092915050565b6112d781611118565b82525050565b5f6020820190506112f05f8301846112ce565b92915050565b5f806040838503121561130c5761130b6110f5565b5b5f6113198582860161113f565b925050602061132a8582860161113f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061137857607f821691505b60208210810361138b5761138a611334565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113c882611153565b91506113d383611153565b92508282019050808211156113eb576113ea611391565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f61144b60258361106f565b9150611456826113f1565b604082019050919050565b5f6020820190508181035f8301526114788161143f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6114d960268361106f565b91506114e48261147f565b604082019050919050565b5f6020820190508181035f830152611506816114cd565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61156760248361106f565b91506115728261150d565b604082019050919050565b5f6020820190508181035f8301526115948161155b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6115f560228361106f565b91506116008261159b565b604082019050919050565b5f6020820190508181035f830152611622816115e9565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f61165d601d8361106f565b915061166882611629565b602082019050919050565b5f6020820190508181035f83015261168a81611651565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6116eb60258361106f565b91506116f682611691565b604082019050919050565b5f6020820190508181035f830152611718816116df565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f61177960238361106f565b91506117848261171f565b604082019050919050565b5f6020820190508181035f8301526117a68161176d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f61180760268361106f565b9150611812826117ad565b604082019050919050565b5f6020820190508181035f830152611834816117fb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61186f60208361106f565b915061187a8261183b565b602082019050919050565b5f6020820190508181035f83015261189c81611863565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f6118d7601f8361106f565b91506118e2826118a3565b602082019050919050565b5f6020820190508181035f830152611904816118cb565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61196560218361106f565b91506119708261190b565b604082019050919050565b5f6020820190508181035f83015261199281611959565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119f360228361106f565b91506119fe82611999565b604082019050919050565b5f6020820190508181035f830152611a20816119e7565b905091905056fea26469706673582212208ff6820ed28121253bd8f2856798b50510a6e0b2b48880954ee197117c8a697f64736f6c63430008190033",
            [
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "symbol",
                            "type": "string"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Approval",
                    "type": "event"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "OwnershipTransferred",
                    "type": "event"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Transfer",
                    "type": "event"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "burn",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "subtractedValue",
                            "type": "uint256"
                        }
                    ],
                    "name": "decreaseAllowance",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "addedValue",
                            "type": "uint256"
                        }
                    ],
                    "name": "increaseAllowance",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "mint",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "renounceOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "transferOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                }
            ],
            "TestToken",
            "vTT",
            await signer.getAddress()
        )).unwrap()!;

        let vault = (await deploy(
            "Vault",
            "60a060405234801561000f575f80fd5b50604051615fbd380380615fbd8339818101604052810190610031919061047a565b80336100428161035b60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050601260805173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100e891906104db565b60ff161461012b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012290610586565b60405180910390fd5b505f60015f60328110610141576101406105a4565b5b600a02019050733c499c542cef5e3811e1192ce70d8cc03d5c3359815f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550737ceb23fd6bc0add59e62ac25578270cff1b9f619600180603281106101c6576101c56105a4565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731bfd67037b42cf73acf2047067bd4f2c47d9bfd66001600260328110610234576102336105a4565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507353e0bca35ec356bd5dddfebbd1fc0fd03fabad3960016003603281106102a2576102a16105a4565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730d500b1d8e8ef31e21c99d1db9a6444d3adf127060016004603281106103105761030f6105a4565b5b600a02015f0160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506105d1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61044982610420565b9050919050565b6104598161043f565b8114610463575f80fd5b50565b5f8151905061047481610450565b92915050565b5f6020828403121561048f5761048e61041c565b5b5f61049c84828501610466565b91505092915050565b5f60ff82169050919050565b6104ba816104a5565b81146104c4575f80fd5b50565b5f815190506104d5816104b1565b92915050565b5f602082840312156104f0576104ef61041c565b5b5f6104fd848285016104c7565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c65546f6b656e436f6e74726f6c6c65723a206f776e61626c65205f8201527f746f6b656e20646563696d616c73206d75737420626520313800000000000000602082015250565b5f610570603983610506565b915061057b82610516565b604082019050919050565b5f6020820190508181035f83015261059d81610564565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6080516159c66105f75f395f8181611d6d01528181611dff0152612e1301526159c65ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063a0712d681161006f578063a0712d681461013f578063a27fc33f1461016f578063b3d7f6b91461019f578063dd5626cf146101cf578063f2fde38b146101ff578063fd71c8541461021b576100a7565b806301e1d114146100ab57806318160ddd146100c957806342966c68146100e7578063715018a6146101175780638da5cb5b14610121575b5f80fd5b6100b361024b565b6040516100c09190614760565b60405180910390f35b6100d16105e0565b6040516100de9190614760565b60405180910390f35b61010160048036038101906100fc91906147b4565b6105ee565b60405161010e91906147f9565b60405180910390f35b61011f610c7f565b005b610129610c92565b6040516101369190614851565b60405180910390f35b610159600480360381019061015491906147b4565b610cb9565b60405161016691906147f9565b60405180910390f35b61018960048036038101906101849190614894565b610f17565b60405161019691906147f9565b60405180910390f35b6101b960048036038101906101b491906147b4565b6112eb565b6040516101c69190614760565b60405180910390f35b6101e960048036038101906101e491906147b4565b61130c565b6040516101f69190614760565b60405180910390f35b610219600480360381019061021491906148d2565b61132d565b005b61023560048036038101906102309190614894565b6113af565b6040516102429190614acb565b60405180910390f35b5f80610364733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161029d9190614851565b602060405180830381865afa1580156102b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102dc9190614af9565b733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610339573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035d9190614b5a565b6012611416565b90505f600190505b60328160ff1610156105d8575f60018260ff16603281106103905761038f614b85565b5b600a020190505f73ffffffffffffffffffffffffffffffffffffffff16815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c3576103f4614416565b735757371414417b8c6caad45baef941abc7d3ab3281602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff81602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061054381611519565b90505f6007811115610558576105576148fd565b5b815f0151600781111561056e5761056d6148fd565b5b1480156105a557505f6007811115610589576105886148fd565b5b8160e001515f015160078111156105a3576105a26148fd565b5b145b156105c1578060e0015160200151846105be9190614bdf565b93505b505b506001816105d19190614c12565b905061036c565b508091505090565b5f6105e9611d6a565b905090565b5f806105f98361130c565b90505f810361063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490614cc6565b60405180910390fd5b6106473384611dfd565b5f61066b61065c8361065761024b565b611e89565b68056bc75e2d63100000611ea5565b90505f600190505b6032811015610a98575f6001826032811061069157610690614b85565b5b600a0201905061069f6144a5565b815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050816001015481604001818152505061071181611ec1565b90505f6008811115610726576107256148fd565b5b815f0151600881111561073c5761073b6148fd565b5b03610a82575f61076261075c8360a0015168056bc75e2d63100000611e89565b86611ea5565b905061076c61451d565b8260200151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816060018181525050674563918244f400008160800181815250505f8061081b836126d4565b915091505f6006811115610832576108316148fd565b5b816006811115610845576108446148fd565b5b14801561085257505f8214155b1561097c575f733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d99190614b5a565b9050733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361091886601286611416565b6040518363ffffffff1660e01b8152600401610935929190614ce4565b6020604051808303815f875af1158015610951573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109759190614d35565b5050610a7d565b5f856020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109ee9190614b5a565b9050856020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610a1d88601286611416565b6040518363ffffffff1660e01b8152600401610a3a929190614ce4565b6020604051808303815f875af1158015610a56573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7a9190614d35565b50505b505050505b5050600181610a919190614bdf565b9050610673565b505f733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1b9190614b5a565b90505f733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6b9190614851565b602060405180830381865afa158015610b86573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610baa9190614af9565b90505f610bd4610bce610bbf84866012611416565b68056bc75e2d63100000611e89565b85611ea5565b9050733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610c1384601288611416565b6040518363ffffffff1660e01b8152600401610c30929190614ce4565b6020604051808303815f875af1158015610c4c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c709190614d35565b50600195505050505050919050565b610c87612cd2565b610c905f612d50565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80610cc4836112eb565b90505f8103610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90614cc6565b60405180910390fd5b5f733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d8a9190614b5a565b905083610e24733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ddd9190614851565b602060405180830381865afa158015610df8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e1c9190614af9565b836012611416565b1015610e65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5c90614daa565b60405180910390fd5b733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330610ea388601287611416565b6040518463ffffffff1660e01b8152600401610ec193929190614dc8565b6020604051808303815f875af1158015610edd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f019190614d35565b50610f0c3383612e11565b600192505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7d90614e47565b60405180910390fd5b5f80610f9185612e9d565b9150915080610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc90614eaf565b60405180910390fd5b5f60018360ff1660328110610fed57610fec614b85565b5b600a02019050610ffb6144a5565b815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508581604001818152505061106981611ec1565b90505f600881111561107e5761107d6148fd565b5b815f01516008811115611094576110936148fd565b5b146110d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cb90614f17565b60405180910390fd5b5f8160c001511161111a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111190614f7f565b60405180910390fd5b61112261451d565b735757371414417b8c6caad45baef941abc7d3ab32815f01515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff815f01516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508160200151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508160c001518160600181815250506802b5e3af16b18800008160800181815250505f80611273836126d4565b915091506005600681111561128b5761128a6148fd565b5b81600681111561129e5761129d6148fd565b5b036112de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d590614fe7565b60405180910390fd5b5050505050505092915050565b5f611305826112f861024b565b6113006105e0565b612f51565b9050919050565b5f6113268261131961024b565b6113216105e0565b612fcc565b9050919050565b611335612cd2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139a90615075565b60405180910390fd5b6113ac81612d50565b50565b6113b76144a5565b6113bf6144a5565b83816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505061140a81611ec1565b90508091505092915050565b5f600260ff168360ff161080156114335750600260ff168260ff16105b15611473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146a90615103565b60405180910390fd5b601260ff168360ff1611801561148f5750601260ff168260ff16115b156114cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c690615191565b60405180910390fd5b5f8414806114e257508160ff168360ff16145b61150e576115098483600a6114f791906152de565b85600a61150491906152de565b613035565b611510565b835b90509392505050565b611521614416565b5f73ffffffffffffffffffffffffffffffffffffffff16826040015173ffffffffffffffffffffffffffffffffffffffff16148061158e57505f73ffffffffffffffffffffffffffffffffffffffff16826060015173ffffffffffffffffffffffffffffffffffffffff16145b806115cb57505f73ffffffffffffffffffffffffffffffffffffffff1682602001515f015173ffffffffffffffffffffffffffffffffffffffff16145b8061160957505f73ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff16145b15611646576004825f01906007811115611626576116256148fd565b5b9081600781111561163a576116396148fd565b5b81525050819050611d65565b61164e61457a565b82602001515f015181602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082602001516020015181602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508260400151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508260600151816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611843816040015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161178c9190614851565b602060405180830381865afa1580156117a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117cb9190614af9565b826040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611818573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061183c9190614b5a565b6012611416565b8160c00181815250506118558161313f565b90505f600681111561186a576118696148fd565b5b815f015160068111156118805761187f6148fd565b5b14611a075760016006811115611899576118986148fd565b5b815f015160068111156118af576118ae6148fd565b5b146119cd57600260068111156118c8576118c76148fd565b5b815f015160068111156118de576118dd6148fd565b5b146119c557600360068111156118f7576118f66148fd565b5b815f0151600681111561190d5761190c6148fd565b5b146119bd5760046006811115611926576119256148fd565b5b815f0151600681111561193c5761193b6148fd565b5b146119b55760056006811115611955576119546148fd565b5b815f0151600681111561196b5761196a6148fd565b5b146119ad57600680811115611983576119826148fd565b5b815f01516006811115611999576119986148fd565b5b146119a55760076119a8565b60065b6119b0565b60055b6119b8565b60045b6119c0565b60035b6119c8565b60025b6119d0565b60015b835f019060078111156119e6576119e56148fd565b5b908160078111156119fa576119f96148fd565b5b8152505082915050611d65565b5f835f01906007811115611a1e57611a1d6148fd565b5b90816007811115611a3257611a316148fd565b5b81525050611b2d816040015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a769190614851565b602060405180830381865afa158015611a91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ab59190614af9565b826040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b02573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b269190614b5a565b6012611416565b8360800181815250505f6006811115611b4957611b486148fd565b5b8161014001515f01516006811115611b6457611b636148fd565b5b14611cd75760016006811115611b7d57611b7c6148fd565b5b8161014001515f01516006811115611b9857611b976148fd565b5b14611ccf5760026006811115611bb157611bb06148fd565b5b8161014001515f01516006811115611bcc57611bcb6148fd565b5b14611cc75760036006811115611be557611be46148fd565b5b8161014001515f01516006811115611c0057611bff6148fd565b5b14611cbf5760046006811115611c1957611c186148fd565b5b8161014001515f01516006811115611c3457611c336148fd565b5b14611cb75760056006811115611c4d57611c4c6148fd565b5b8161014001515f01516006811115611c6857611c676148fd565b5b14611caf57600680811115611c8057611c7f6148fd565b5b8161014001515f01516006811115611c9b57611c9a6148fd565b5b14611ca7576007611caa565b60065b611cb2565b60055b611cba565b60045b611cc2565b60035b611cca565b60025b611cd2565b60015b611cd9565b5f5b8360e001515f01906007811115611cf357611cf26148fd565b5b90816007811115611d0757611d066148fd565b5b815250505f836080015114611d255780610140015160200151611d27565b5f5b8360e00151602001818152505080608001518360a0019060ff16908160ff16815250508060a001518360c0019060ff16908160ff1681525050829150505b919050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dd4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611df89190614af9565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401611e58929190614ce4565b5f604051808303815f87803b158015611e6f575f80fd5b505af1158015611e81573d5f803e3d5ffd5b505050505050565b5f611e9d83670de0b6b3a764000084613035565b905092915050565b5f611eb98383670de0b6b3a7640000613035565b905092915050565b611ec96144a5565b5f73ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1603611f38576005825f01906008811115611f1857611f176148fd565b5b90816008811115611f2c57611f2b6148fd565b5b815250508190506126cf565b5f611f4161024b565b03611f7e576001825f01906008811115611f5e57611f5d6148fd565b5b90816008811115611f7257611f716148fd565b5b815250508190506126cf565b733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff160361225c575f825f01906008811115611fe057611fdf6148fd565b5b90816008811115611ff457611ff36148fd565b5b8152505061210f733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016120489190614851565b602060405180830381865afa158015612063573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120879190614af9565b733c499c542cef5e3811e1192ce70d8cc03d5c335973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120e4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121089190614b5a565b6012611416565b8260a00181815250505f8261012001515f01906007811115612134576121336148fd565b5b90816007811115612148576121476148fd565b5b815250508160a00151826101200151602001818152505061218b61217c8361012001516020015161217761024b565b611e89565b68056bc75e2d63100000611ea5565b8260600181815250506121bb6121b16121a261024b565b68056bc75e2d63100000611e89565b8360400151611ea5565b826101000181815250506121ec6121e26121d36105e0565b68056bc75e2d63100000611e89565b8360400151611ea5565b82608001818152505081608001518260a001511115612228576122178260a001518360800151613ee6565b8260c00181815250508190506126cf565b81608001518260a00151101561225b5761224a82608001518360a00151613ee6565b8260e00181815250508190506126cf565b5b612264614416565b735757371414417b8c6caad45baef941abc7d3ab3281602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff81602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508260200151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061239481611519565b90505f835f019060088111156123ad576123ac6148fd565b5b908160088111156123c1576123c06148fd565b5b8152505080608001518360a00181815250505f60078111156123e6576123e56148fd565b5b8160e001515f01516007811115612400576123ff6148fd565b5b14612449578060e001515f01518361012001515f01906007811115612428576124276148fd565b5b9081600781111561243c5761243b6148fd565b5b81525050829150506126cf565b8060e0015160200151836101200151602001818152505061248c61247d8461012001516020015161247861024b565b611e89565b68056bc75e2d63100000611ea5565b8360600181815250506124bc6124b26124a361024b565b68056bc75e2d63100000611e89565b8460400151611ea5565b836101000181815250506124ce61457a565b735757371414417b8c6caad45baef941abc7d3ab3281602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073a5e0829caced8ffdd4de3c43696c57f7d7a678ff81602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360200151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050733c499c542cef5e3811e1192ce70d8cc03d5c3359816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508361010001518160e001818152505061260d8161313f565b90505f6006811115612622576126216148fd565b5b8161016001515f0151600681111561263d5761263c6148fd565b5b1461264c5783925050506126cf565b8061016001516020015184608001818152505083608001518460a001511115612694576126818460a001518560800151613ee6565b8460c001818152505083925050506126cf565b83608001518460a0015110156126c9576126b684608001518560a00151613ee6565b8460e001818152505083925050506126cf565b83925050505b919050565b5f806126de61457a565b835f01515f015181602001515f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050835f01516020015181602001516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360200151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360400151816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083606001518160c00181815250506127f18161313f565b90505f6006811115612806576128056148fd565b5b815f0151600681111561281c5761281b6148fd565b5b14612830575f815f01519250925050612ccd565b8360800151816101c00151602001511115612852575f60059250925050612ccd565b5f6128de826040015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016128939190614851565b602060405180830381865afa1580156128ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128d29190614af9565b83608001516012611416565b9050808260c0015111156128fa575f6006935093505050612ccd565b816040015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38360200151602001515f6040518363ffffffff1660e01b815260040161294192919061536a565b6020604051808303815f875af115801561295d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129819190614d35565b50816040015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38360200151602001516129bf8560c0015160128760800151611416565b6040518363ffffffff1660e01b81526004016129dc929190614ce4565b6020604051808303815f875af11580156129f8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a1c9190614d35565b505f600267ffffffffffffffff811115612a3957612a38615391565b5b604051908082528060200260200182016040528015612a675781602001602082028036833780820191505090505b5090508260400151815f81518110612a8257612a81614b85565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050826060015181600181518110612ad557612ad4614b85565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f83602001516020015173ffffffffffffffffffffffffffffffffffffffff166338ed1739612b488660c0015160128860800151611416565b5f8530426040518663ffffffff1660e01b8152600401612b6c959493929190615466565b5f604051808303815f875af1158015612b87573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190612baf91906155e1565b90505f8160018351612bc19190615628565b81518110612bd257612bd1614b85565b5b602002602001015190505f612bed8287608001516012611416565b9050856040015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38760200151602001515f6040518363ffffffff1660e01b8152600401612c3692919061536a565b6020604051808303815f875af1158015612c52573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c769190614d35565b507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe23589602001518a604001518b6060015184604051612cb8949392919061565b565b60405180910390a1805f975097505050505050505b915091565b612cda613f42565b73ffffffffffffffffffffffffffffffffffffffff16612cf8610c92565b73ffffffffffffffffffffffffffffffffffffffff1614612d4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d45906156e8565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401612e6c929190614ce4565b5f604051808303815f87803b158015612e83575f80fd5b505af1158015612e95573d5f803e3d5ffd5b505050505050565b5f805f5b60328160ff161015612f44575f60018260ff1660328110612ec557612ec4614b85565b5b600a020190508473ffffffffffffffffffffffffffffffffffffffff16815f0160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612f2f57816001935093505050612f4c565b50600181612f3d9190614c12565b9050612ea1565b505f80915091505b915091565b5f8083148015612f6057505f82145b15612f7657683635c9adc5dea000009050612fc5565b5f8314158015612f8557505f82145b15612f9b57683635c9adc5dea000009050612fc5565b5f83148015612faa57505f8214155b15612fb7575f9050612fc5565b612fc2848385613035565b90505b9392505050565b5f8083148015612fdb57505f82145b15612fe8575f905061302e565b5f8314158015612ff757505f82145b15613004575f905061302e565b5f8314801561301357505f8214155b15613020575f905061302e565b61302b848385613035565b90505b9392505050565b5f805f80198587098587029250828110838203039150505f810361306d5783828161306357613062615706565b5b0492505050613138565b8084116130af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130a69061577d565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b61314761457a565b5f8260c001511461315c578160c00151613166565b670de0b6b3a76400005b8260c00181815250505f8260e0015114613184578160e0015161318e565b670de0b6b3a76400005b8260e00181815250505f73ffffffffffffffffffffffffffffffffffffffff16826040015173ffffffffffffffffffffffffffffffffffffffff16148061320457505f73ffffffffffffffffffffffffffffffffffffffff16826060015173ffffffffffffffffffffffffffffffffffffffff16145b8061324157505f73ffffffffffffffffffffffffffffffffffffffff1682602001515f015173ffffffffffffffffffffffffffffffffffffffff16145b8061327f57505f73ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff16145b15613406576004825f0190600681111561329c5761329b6148fd565b5b908160068111156132b0576132af6148fd565b5b81525050815f01518261014001515f019060068111156132d3576132d26148fd565b5b908160068111156132e7576132e66148fd565b5b81525050815f01518261016001515f0190600681111561330a576133096148fd565b5b9081600681111561331e5761331d6148fd565b5b81525050815f01518261018001515f01906006811115613341576133406148fd565b5b90816006811115613355576133546148fd565b5b81525050815f0151826101a001515f01906006811115613378576133776148fd565b5b9081600681111561338c5761338b6148fd565b5b81525050815f0151826101c001515f019060068111156133af576133ae6148fd565b5b908160068111156133c3576133c26148fd565b5b81525050815f0151826101e001515f019060068111156133e6576133e56148fd565b5b908160068111156133fa576133f96148fd565b5b81525050819050613ee1565b5f826040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613454573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134789190614b5a565b90505f836060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134ec9190614b5a565b90505f84602001515f015173ffffffffffffffffffffffffffffffffffffffff1663e6a43905866040015187606001516040518363ffffffff1660e01b815260040161353992919061579b565b602060405180830381865afa158015613554573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061357891906157d6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613836576003855f019060068111156135c5576135c46148fd565b5b908160068111156135d9576135d86148fd565b5b81525050846040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561362a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061364e9190614b5a565b856080019060ff16908160ff1681525050846060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156136ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136d09190614b5a565b8560a0019060ff16908160ff1681525050845f01518561014001515f01906006811115613700576136ff6148fd565b5b90816006811115613714576137136148fd565b5b81525050845f01518561016001515f01906006811115613737576137366148fd565b5b9081600681111561374b5761374a6148fd565b5b81525050845f01518561018001515f0190600681111561376e5761376d6148fd565b5b90816006811115613782576137816148fd565b5b81525050845f0151856101a001515f019060068111156137a5576137a46148fd565b5b908160068111156137b9576137b86148fd565b5b81525050845f0151856101c001515f019060068111156137dc576137db6148fd565b5b908160068111156137f0576137ef6148fd565b5b81525050845f0151856101e001515f01906006811115613813576138126148fd565b5b90816006811115613827576138266148fd565b5b81525050849350505050613ee1565b5f808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613881573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138a5919061587d565b50915091505f8373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061391891906157d6565b90505f8473ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015613964573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061398891906157d6565b90508173ffffffffffffffffffffffffffffffffffffffff16896040015173ffffffffffffffffffffffffffffffffffffffff161480156139f857508073ffffffffffffffffffffffffffffffffffffffff16896060015173ffffffffffffffffffffffffffffffffffffffff16145b15613c71575f895f01906006811115613a1457613a136148fd565b5b90816006811115613a2857613a276148fd565b5b81525050886040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613a9d9190614b5a565b896080019060ff16908160ff1681525050886060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613afb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b1f9190614b5a565b8960a0019060ff16908160ff1681525050613b4c846dffffffffffffffffffffffffffff16886012611416565b89610100018181525050613b72836dffffffffffffffffffffffffffff16876012611416565b89610120018181525050613b9e8960c001518a61010001518b61012001518c6020015160200151613f49565b896101400181905250613bc98960e001518a61012001518b61010001518c6020015160200151613f49565b896101600181905250613bf48960c001518a61010001518b61012001518c60200151602001516140a5565b896101800181905250613c1f8960e001518a61012001518b61010001518c60200151602001516140a5565b896101a00181905250613c3c8961018001518a6101400151614215565b896101c00181905250613c59896101a001518a6101600151614215565b896101e0018190525088975050505050505050613ee1565b5f895f01906006811115613c8857613c876148fd565b5b90816006811115613c9c57613c9b6148fd565b5b81525050886040015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ced573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d119190614b5a565b896080019060ff16908160ff1681525050886060015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d6f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d939190614b5a565b8960a0019060ff16908160ff1681525050613dc0836dffffffffffffffffffffffffffff16886012611416565b89610100018181525050613de6846dffffffffffffffffffffffffffff16876012611416565b89610120018181525050613e128960c001518a61010001518b61012001518c6020015160200151613f49565b896101400181905250613e3d8960e001518a61012001518b61010001518c6020015160200151613f49565b896101600181905250613e688960c001518a61010001518b61012001518c60200151602001516140a5565b896101800181905250613e938960e001518a61012001518b61010001518c60200151602001516140a5565b896101a00181905250613eb08961018001518a6101400151614215565b896101c00181905250613ecd896101a001518a6101600151614215565b896101e00181905250889750505050505050505b919050565b5f805f613ef3858561436b565b9150915081613f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613f2e9061593d565b60405180910390fd5b809250505092915050565b5f33905090565b613f5161465c565b613f5961465c565b5f8603613f99576002815f01906006811115613f7857613f776148fd565b5b90816006811115613f8c57613f8b6148fd565b5b815250508091505061409d565b5f851480613fa657505f84145b15613fe4576001815f01906006811115613fc357613fc26148fd565b5b90816006811115613fd757613fd66148fd565b5b815250508091505061409d565b5f815f01906006811115613ffb57613ffa6148fd565b5b9081600681111561400f5761400e6148fd565b5b815250508273ffffffffffffffffffffffffffffffffffffffff1663ad615dec8787876040518463ffffffff1660e01b81526004016140509392919061595b565b602060405180830381865afa15801561406b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061408f9190614af9565b816020018181525050809150505b949350505050565b6140ad614686565b6140b5614686565b5f86036140ff576002815f019060068111156140d4576140d36148fd565b5b908160068111156140e8576140e76148fd565b5b815250505f8160200181815250508091505061420d565b5f85148061410c57505f84145b15614154576001815f01906006811115614129576141286148fd565b5b9081600681111561413d5761413c6148fd565b5b815250505f8160200181815250508091505061420d565b5f815f0190600681111561416b5761416a6148fd565b5b9081600681111561417f5761417e6148fd565b5b815250508273ffffffffffffffffffffffffffffffffffffffff1663054d50d48787876040518463ffffffff1660e01b81526004016141c09392919061595b565b602060405180830381865afa1580156141db573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141ff9190614af9565b816020018181525050809150505b949350505050565b61421d6146b0565b6142256146b0565b5f6006811115614238576142376148fd565b5b835f0151600681111561424e5761424d6148fd565b5b1461428e57825f0151815f0190600681111561426d5761426c6148fd565b5b90816006811115614281576142806148fd565b5b8152505080915050614365565b5f60068111156142a1576142a06148fd565b5b845f015160068111156142b7576142b66148fd565b5b146142f757835f0151815f019060068111156142d6576142d56148fd565b5b908160068111156142ea576142e96148fd565b5b8152505080915050614365565b8260200151846020015111156143165782602001518460200181815250505b5f815f0190600681111561432d5761432c6148fd565b5b90816006811115614341576143406148fd565b5b8152505061435784602001518460200151614391565b816020018181525050809150505b92915050565b5f8083831115614380575f809150915061438a565b6001838503915091505b9250929050565b5f6143ae68056bc75e2d631000006143a985856143b6565b613ee6565b905092915050565b5f8083036143c6575f90506143eb565b818310156143dd576143d883836143f1565b6143e8565b68056bc75e2d631000005b90505b92915050565b5f61440e6143ff8484611e89565b68056bc75e2d63100000611ea5565b905092915050565b6040518061010001604052805f6007811115614435576144346148fd565b5b81526020016144426146da565b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f60ff1681526020015f60ff16815260200161449f61471e565b81525090565b6040518061014001604052805f60088111156144c4576144c36148fd565b5b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f815260200161451761471e565b81525090565b6040518060a001604052806145306146da565b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81525090565b6040518061020001604052805f6006811115614599576145986148fd565b5b81526020016145a66146da565b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f60ff1681526020015f60ff1681526020015f81526020015f81526020015f81526020015f815260200161461561465c565b815260200161462261465c565b815260200161462f614686565b815260200161463c614686565b81526020016146496146b0565b81526020016146566146b0565b81525090565b60405180604001604052805f600681111561467a576146796148fd565b5b81526020015f81525090565b60405180604001604052805f60068111156146a4576146a36148fd565b5b81526020015f81525090565b60405180604001604052805f60068111156146ce576146cd6148fd565b5b81526020015f81525090565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090565b60405180604001604052805f600781111561473c5761473b6148fd565b5b81526020015f81525090565b5f819050919050565b61475a81614748565b82525050565b5f6020820190506147735f830184614751565b92915050565b5f604051905090565b5f80fd5b5f80fd5b61479381614748565b811461479d575f80fd5b50565b5f813590506147ae8161478a565b92915050565b5f602082840312156147c9576147c8614782565b5b5f6147d6848285016147a0565b91505092915050565b5f8115159050919050565b6147f3816147df565b82525050565b5f60208201905061480c5f8301846147ea565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61483b82614812565b9050919050565b61484b81614831565b82525050565b5f6020820190506148645f830184614842565b92915050565b61487381614831565b811461487d575f80fd5b50565b5f8135905061488e8161486a565b92915050565b5f80604083850312156148aa576148a9614782565b5b5f6148b785828601614880565b92505060206148c8858286016147a0565b9150509250929050565b5f602082840312156148e7576148e6614782565b5b5f6148f484828501614880565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6009811061493b5761493a6148fd565b5b50565b5f81905061494b8261492a565b919050565b5f61495a8261493e565b9050919050565b61496a81614950565b82525050565b61497981614831565b82525050565b61498881614748565b82525050565b6008811061499f5761499e6148fd565b5b50565b5f8190506149af8261498e565b919050565b5f6149be826149a2565b9050919050565b6149ce816149b4565b82525050565b604082015f8201516149e85f8501826149c5565b5060208201516149fb602085018261497f565b50505050565b61016082015f820151614a165f850182614961565b506020820151614a296020850182614970565b506040820151614a3c604085018261497f565b506060820151614a4f606085018261497f565b506080820151614a62608085018261497f565b5060a0820151614a7560a085018261497f565b5060c0820151614a8860c085018261497f565b5060e0820151614a9b60e085018261497f565b50610100820151614ab061010085018261497f565b50610120820151614ac56101208501826149d4565b50505050565b5f61016082019050614adf5f830184614a01565b92915050565b5f81519050614af38161478a565b92915050565b5f60208284031215614b0e57614b0d614782565b5b5f614b1b84828501614ae5565b91505092915050565b5f60ff82169050919050565b614b3981614b24565b8114614b43575f80fd5b50565b5f81519050614b5481614b30565b92915050565b5f60208284031215614b6f57614b6e614782565b5b5f614b7c84828501614b46565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f614be982614748565b9150614bf483614748565b9250828201905080821115614c0c57614c0b614bb2565b5b92915050565b5f614c1c82614b24565b9150614c2783614b24565b9250828201905060ff811115614c4057614c3f614bb2565b5b92915050565b5f82825260208201905092915050565b7f5661756c743a20796f7520776f756c642072656365697665206e6f7468696e675f8201527f20696e2072657475726e00000000000000000000000000000000000000000000602082015250565b5f614cb0602a83614c46565b9150614cbb82614c56565b604082019050919050565b5f6020820190508181035f830152614cdd81614ca4565b9050919050565b5f604082019050614cf75f830185614842565b614d046020830184614751565b9392505050565b614d14816147df565b8114614d1e575f80fd5b50565b5f81519050614d2f81614d0b565b92915050565b5f60208284031215614d4a57614d49614782565b5b5f614d5784828501614d21565b91505092915050565b7f5661756c743a20696e73756666696369656e742062616c616e636500000000005f82015250565b5f614d94601b83614c46565b9150614d9f82614d60565b602082019050919050565b5f6020820190508181035f830152614dc181614d88565b9050919050565b5f606082019050614ddb5f830186614842565b614de86020830185614842565b614df56040830184614751565b949350505050565b7f746f6b656e206973207a65726f206164647265737300000000000000000000005f82015250565b5f614e31601583614c46565b9150614e3c82614dfd565b602082019050919050565b5f6020820190508181035f830152614e5e81614e25565b9050919050565b7f756e61626c6520746f2066696e6420746f6b656e0000000000000000000000005f82015250565b5f614e99601483614c46565b9150614ea482614e65565b602082019050919050565b5f6020820190508181035f830152614ec681614e8d565b9050919050565b7f756e61626c6520746f20666574636820736c6f742064617461000000000000005f82015250565b5f614f01601983614c46565b9150614f0c82614ecd565b602082019050919050565b5f6020820190508181035f830152614f2e81614ef5565b9050919050565b7f746f6b656e20646f6573206e6f742068617665206120737572706c75730000005f82015250565b5f614f69601d83614c46565b9150614f7482614f35565b602082019050919050565b5f6020820190508181035f830152614f9681614f5d565b9050919050565b7f6d697373696e67207265717569726564206461746100000000000000000000005f82015250565b5f614fd1601583614c46565b9150614fdc82614f9d565b602082019050919050565b5f6020820190508181035f830152614ffe81614fc5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61505f602683614c46565b915061506a82615005565b604082019050919050565b5f6020820190508181035f83015261508c81615053565b9050919050565b7f4669786564506f696e74456e67696e653a2060646563696d616c7360203c20605f8201527f5f4d494e5f444543494d414c5360000000000000000000000000000000000000602082015250565b5f6150ed602e83614c46565b91506150f882615093565b604082019050919050565b5f6020820190508181035f83015261511a816150e1565b9050919050565b7f4669786564506f696e74456e67696e653a2060646563696d616c7360203e20605f8201527f5f4d41585f444543494d414c5360000000000000000000000000000000000000602082015250565b5f61517b602e83614c46565b915061518682615121565b604082019050919050565b5f6020820190508181035f8301526151a88161516f565b9050919050565b5f8160011c9050919050565b5f808291508390505b6001851115615204578086048111156151e0576151df614bb2565b5b60018516156151ef5780820291505b80810290506151fd856151af565b94506151c4565b94509492505050565b5f8261521c57600190506152d7565b81615229575f90506152d7565b816001811461523f576002811461524957615278565b60019150506152d7565b60ff84111561525b5761525a614bb2565b5b8360020a91508482111561527257615271614bb2565b5b506152d7565b5060208310610133831016604e8410600b84101617156152ad5782820a9050838111156152a8576152a7614bb2565b5b6152d7565b6152ba84848460016151bb565b925090508184048111156152d1576152d0614bb2565b5b81810290505b9392505050565b5f6152e882614748565b91506152f383614b24565b92506153207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461520d565b905092915050565b5f819050919050565b5f819050919050565b5f61535461534f61534a84615328565b615331565b614748565b9050919050565b6153648161533a565b82525050565b5f60408201905061537d5f830185614842565b61538a602083018461535b565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f6153f28383614970565b60208301905092915050565b5f602082019050919050565b5f615414826153be565b61541e81856153c8565b9350615429836153d8565b805f5b8381101561545957815161544088826153e7565b975061544b836153fe565b92505060018101905061542c565b5085935050505092915050565b5f60a0820190506154795f830188614751565b615486602083018761535b565b8181036040830152615498818661540a565b90506154a76060830185614842565b6154b46080830184614751565b9695505050505050565b5f80fd5b5f601f19601f8301169050919050565b6154db826154c2565b810181811067ffffffffffffffff821117156154fa576154f9615391565b5b80604052505050565b5f61550c614779565b905061551882826154d2565b919050565b5f67ffffffffffffffff82111561553757615536615391565b5b602082029050602081019050919050565b5f80fd5b5f61555e6155598461551d565b615503565b9050808382526020820190506020840283018581111561558157615580615548565b5b835b818110156155aa57806155968882614ae5565b845260208401935050602081019050615583565b5050509392505050565b5f82601f8301126155c8576155c76154be565b5b81516155d884826020860161554c565b91505092915050565b5f602082840312156155f6576155f5614782565b5b5f82015167ffffffffffffffff81111561561357615612614786565b5b61561f848285016155b4565b91505092915050565b5f61563282614748565b915061563d83614748565b925082820390508181111561565557615654614bb2565b5b92915050565b5f60808201905061566e5f830187614842565b61567b6020830186614842565b6156886040830185614751565b6156956060830184614751565b95945050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6156d2602083614c46565b91506156dd8261569e565b602082019050919050565b5f6020820190508181035f8301526156ff816156c6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4d6174683a206d756c446976206f766572666c6f7700000000000000000000005f82015250565b5f615767601583614c46565b915061577282615733565b602082019050919050565b5f6020820190508181035f8301526157948161575b565b9050919050565b5f6040820190506157ae5f830185614842565b6157bb6020830184614842565b9392505050565b5f815190506157d08161486a565b92915050565b5f602082840312156157eb576157ea614782565b5b5f6157f8848285016157c2565b91505092915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61582381615801565b811461582d575f80fd5b50565b5f8151905061583e8161581a565b92915050565b5f63ffffffff82169050919050565b61585c81615844565b8114615866575f80fd5b50565b5f8151905061587781615853565b92915050565b5f805f6060848603121561589457615893614782565b5b5f6158a186828701615830565b93505060206158b286828701615830565b92505060406158c386828701615869565b9150509250925092565b7f4669786564506f696e74456e67696e653a2061726974686d6574696320756e645f8201527f6572666c6f770000000000000000000000000000000000000000000000000000602082015250565b5f615927602683614c46565b9150615932826158cd565b604082019050919050565b5f6020820190508181035f8301526159548161591b565b9050919050565b5f60608201905061596e5f830186614751565b61597b6020830185614751565b6159886040830184614751565b94935050505056fea264697066735822122094009ef4ac3d0a749ea8cf75f2b9f46d50ee7ff9b0404d58a642cf4a95c194d864736f6c63430008190033",
            [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "ownableToken",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "OwnershipTransferred",
                    "type": "event"
                },
                {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": false,
                            "internalType": "address",
                            "name": "tokenIn",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "address",
                            "name": "tokenOut",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "amountIn",
                            "type": "uint256"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "amountOut",
                            "type": "uint256"
                        }
                    ],
                    "name": "Swap",
                    "type": "event"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "supplyIn",
                            "type": "uint256"
                        }
                    ],
                    "name": "burn",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "targetAllocation",
                            "type": "uint256"
                        }
                    ],
                    "name": "debug_fetchSlotData",
                    "outputs": [
                        {
                            "components": [
                                {
                                    "internalType": "enum Vault.SlotResult",
                                    "name": "result",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "address",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "targetAllocation",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "actualAllocation",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "targetBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "actualBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "surplusBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "deficitBalance",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "targetValue",
                                    "type": "uint256"
                                },
                                {
                                    "components": [
                                        {
                                            "internalType": "enum RebalanceEngine.RebalanceEngineResult",
                                            "name": "result",
                                            "type": "uint8"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        }
                                    ],
                                    "internalType": "struct RebalanceEngine.TotalValue",
                                    "name": "totalValue",
                                    "type": "tuple"
                                }
                            ],
                            "internalType": "struct Vault.Slot",
                            "name": "",
                            "type": "tuple"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "assetsIn",
                            "type": "uint256"
                        }
                    ],
                    "name": "mint",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "supplyIn",
                            "type": "uint256"
                        }
                    ],
                    "name": "previewBurn",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "assetsIn",
                            "type": "uint256"
                        }
                    ],
                    "name": "previewMint",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256[50]",
                            "name": "allocations",
                            "type": "uint256[50]"
                        }
                    ],
                    "name": "rebalance",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "renounceOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "totalAssets",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [],
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "name": "transferOwnership",
                    "outputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function"
                }
            ],
            ownableToken
        )).unwrap()!;

        (await machine.invoke({
            "to": ownableToken,
            "methodSignature": "function transferOwnership(address) external",
            "methodName": "transferOwnership",
            "methodArgs": [
                vault
            ]
        })).unwrap();

        await transfer(weth, 0.0001);

        await mint(0);
        
        log(await totalAssets());
        log(await totalSupply());
        
        log("BeforeRebalance");

        log(await totalAssets());
        log(await totalSupply());  

        log("usdc", await debug(usdc, 50));

        log("weth", await debug(weth, 25));

        log("wbtc", await debug(wbtc, 15));

        log("link", await debug(link, 5));

        log("wmatic", await debug(wmatic, 5));

        (await machine.invoke({
            to: vault,
            methodSignature: "function sellSurplus(address,uint256) external",
            methodName: "sellSurplus",
            methodArgs: [
                weth,
                BigInt(25 * 10**18)
            ]
        })).unwrap();

        log("AfterRebalance");

        log(await totalAssets());
        log(await totalSupply());  

  
        log("usdc", await debug(usdc, 50));

        log("weth", await debug(weth, 25));

        log("wbtc", await debug(wbtc, 15));

        log("link", await debug(link, 5));

        log("wmatic", await debug(wmatic, 5));

        //await mint(5000);
        //log("Rebalance test.")
        //await rebalance([50, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);

        //log(await totalAssets());
        //log(await totalSupply());

        async function debug(token: string, allocation: number) {
            let result = (await machine.query({
                to: vault,
                methodSignature: `function debug__fetchSlotData(address,uint256) external view returns (uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,(uint8,uint256))`,
                methodName: "debug__fetchSlotData",
                methodArgs: [
                    token,
                    BigInt(allocation * 10**18)
                ]
            })).unwrap() as any[];
            return {
                targetAllocation: format(result[2]),
                actualAllocation: format(result[3]),
                targetBalance: format(result[4]),
                actualBalance: format(result[5]),
                surplusBalance: format(result[6]),
                deficitBalance: format(result[7]),
                targetValue: format(result[8]),
                totalValue: format(result[9][1])
            };

            function format(bigint: any) {
                return Number(bigint) / 10**18;
            }
        }

        async function rebalance(allocations: number[]) {
            let args: bigint[] = [];
            allocations.forEach(allocation => {
                args.push(BigInt(allocation * 10**18));
            });
            (await machine.invoke({
                to: vault,
                methodSignature: "function rebalance(uint256[50]) external",
                methodName: "rebalance",
                methodArgs: [
                    args
                ]
            })).unwrap();
        }

        async function burn(amount: number) {
            (await machine.invoke({
                to: vault,
                methodSignature: "function burn(uint256) external returns (bool)",
                methodName: "burn",
                methodArgs: [
                    BigInt(amount * 10**18)
                ]
            })).unwrap();
        }

        async function mint(value: number) {
            let decimals = (await machine.query({
                to: usdc,
                methodSignature: "function decimals() external view returns (uint8)",
                methodName: "decimals"
            })).unwrap() as bigint;
            (await machine.invoke({
                to: usdc,
                methodSignature: "function approve(address,uint256) external",
                methodName: "approve",
                methodArgs: [
                    vault,
                    BigInt(value * 10**Number(decimals))
                ]
            })).unwrap();
            (await machine.invoke({
                to: vault,
                methodSignature: "function mint(uint256) external returns (bool)",
                methodName: "mint",
                methodArgs: [
                    BigInt(value * 10**18)
                ]
            })).unwrap();
        }

        async function totalSupply() {
            return Number((await machine.query({
                to: vault,
                methodSignature: "function totalSupply() external view returns (uint256)",
                methodName: "totalSupply"
            })).unwrap() as any) / 10**18 + " tokens";
        }

        async function totalAssets() {
            return "$" + Number((await machine.query({
                to: vault,
                methodSignature: "function totalAssets() external view returns (uint256)",
                methodName: "totalAssets"
            })).unwrap() as any) / 10**18;
        }

        async function transfer(token: string, value: number) {
            let decimals = (await machine.query({
                to: token,
                methodSignature: "function decimals() external view returns (uint8)",
                methodName: "decimals"
            })).unwrap() as bigint;
            (await machine.invoke({
                to: token,
                methodSignature: "function transfer(address,uint256) external",
                methodName: "transfer",
                methodArgs: [
                    vault,
                    BigInt(value * 10**Number(decimals))
                ]
            })).unwrap();
        }

        async function myBalance(token: string) {
            let decimals = (await machine.query({
                to: token,
                methodSignature: "function decimals() external view returns (uint8)",
                methodName: "decimals"
            })).unwrap() as bigint;
            return ((Number((await machine.query({
                to: token,
                methodSignature: "function balanceOf(address) external view returns (uint256)",
                methodName: "balanceOf",
                methodArgs: [
                    await signer.getAddress()
                ]
            })).unwrap() as any)) / 10**Number(decimals));
        }

        async function format(bigint: bigint) {
            return Number(bigint) / 10**18;
        }
    })();

    async function deploySolFile(path: string, ...args: unknown[]): Promise<TsResult.Option<string>> {
        let file = File(Path(path));
        let contractName = file.name().unwrapOr("UnknownContract");
        let sol = SolFile(Path(path));
        if (sol.err) {
            err(contractName + ": unable to build sol file");
            err(contractName + ": " + sol.toString());
            return TsResult.None;
        }
        let errors = sol.unwrap().errors();
        if (errors.err) {
            err(contractName + ": unable to generate errors");
            err(contractName + ": " + errors.toString());
            return TsResult.None;
        }
        if (errors.unwrap().length != 0) {
            err(contractName + ": has source code errors");
            errors.unwrap().forEach(error => err(contractName + ": " + error));
            return TsResult.None;
        }
        let bytecode = sol.unwrap().bytecode();
        if (bytecode.err) {
            err(contractName + ": unable to generate bytecode");
            err(contractName + ": " + bytecode.toString());
            return TsResult.None;
        }
        let abi = sol.unwrap().abi();
        if (abi.err) {
            err(contractName + ": unable to generate abi");
            err(contractName + ": " + abi.toString());
            return TsResult.None;
        }
        return await deploy(contractName, bytecode.unwrap(), abi.unwrap(), args);
    }

    async function deploy(contractName: string, bytecode: string, abi?: object[] | string[], ...args: unknown[]): Promise<TsResult.Option<string>> {
        let deployment = await machine.deploy({ bytecode, abi, args });
        if (deployment.err) {
            err(contractName + ": unable to deploy");
            err(contractName + ": " + deployment.toString());
            return TsResult.None;
        }
        let address = deployment.unwrap()?.contractAddress;
        if (!address) {
            err(contractName + ": may have been deployed but did not return an address");
            return TsResult.None;
        }
        return TsResult.Some(address);
    }

    function log(...any: any[]) {
        return console.log(...any);
    }
    
    function err(...any: any[]) {
        return console.error(...any);
    }
})();

