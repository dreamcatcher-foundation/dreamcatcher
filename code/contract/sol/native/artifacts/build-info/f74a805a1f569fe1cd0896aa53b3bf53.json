{
	"id": "f74a805a1f569fe1cd0896aa53b3bf53",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"code/contract/sol/native/.sol": {
				"content": "\r\n\r\n\r\n\r\ncontract Test {\r\n    function test() internal {\r\n        uint256 sum_ = 0;\r\n        for (uint256 i_; i_ < 10; i_++) sum_ += 1;\r\n\r\n        sum_ *= 2;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"code/contract/sol/native/.sol": {
				"Test": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code/contract/sol/native/.sol\":8:166  contract Test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code/contract/sol/native/.sol\":8:166  contract Test {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201b99bf06a672f7c733b6cc030ec5fc4bc7c96c188ae1740f75b7aa7293ddd1ff64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212201b99bf06a672f7c733b6cc030ec5fc4bc7c96c188ae1740f75b7aa7293ddd1ff64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP10 0xBF MOD 0xA6 PUSH19 0xF7C733B6CC030EC5FC4BC7C96C188AE1740F75 0xB7 0xAA PUSH19 0x93DDD1FF64736F6C6343000818003300000000 ",
							"sourceMap": "8:158:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212201b99bf06a672f7c733b6cc030ec5fc4bc7c96c188ae1740f75b7aa7293ddd1ff64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP10 0xBF MOD 0xA6 PUSH19 0xF7C733B6CC030EC5FC4BC7C96C188AE1740F75 0xB7 0xAA PUSH19 0x93DDD1FF64736F6C6343000818003300000000 ",
							"sourceMap": "8:158:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"test()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 166,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b99bf06a672f7c733b6cc030ec5fc4bc7c96c188ae1740f75b7aa7293ddd1ff64736f6c63430008180033",
									".code": [
										{
											"begin": 8,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8,
											"end": 166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8,
											"end": 166,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"code/contract/sol/native/.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/native/.sol\":\"Test\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/native/.sol\":{\"keccak256\":\"0x27b64e7bd6bb24162186cc64a2a882006241e86c580fb6998429d01966711cef\",\"urls\":[\"bzz-raw://d89e6f5b206bd6339f416674ccbc96676e9fc60e4cd0600bf359101388902ff3\",\"dweb:/ipfs/QmQFQMPSepDsab3DT46jJA7c9fU4nf1pUXyrkTMZAD3CHH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> code/contract/sol/native/.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "code/contract/sol/native/.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.24;\"\n--> code/contract/sol/native/.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.24;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "code/contract/sol/native/.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> code/contract/sol/native/.sol:6:5:\n  |\n6 |     function test() internal {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 163,
					"file": "code/contract/sol/native/.sol",
					"start": 29
				},
				"type": "Warning"
			}
		],
		"sources": {
			"code/contract/sol/native/.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/native/.sol",
					"exportedSymbols": {
						"Test": [
							27
						]
					},
					"id": 28,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 27,
							"linearizedBaseContracts": [
								27
							],
							"name": "Test",
							"nameLocation": "17:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "54:109:0",
										"statements": [
											{
												"assignments": [
													4
												],
												"declarations": [
													{
														"constant": false,
														"id": 4,
														"mutability": "mutable",
														"name": "sum_",
														"nameLocation": "73:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 25,
														"src": "65:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "65:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 6,
												"initialValue": {
													"hexValue": "30",
													"id": 5,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "65:16:0"
											},
											{
												"body": {
													"expression": {
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 16,
															"name": "sum_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "124:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "124:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 19,
													"nodeType": "ExpressionStatement",
													"src": "124:9:0"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "i_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "109:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "114:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"initializationExpression": {
													"assignments": [
														8
													],
													"declarations": [
														{
															"constant": false,
															"id": 8,
															"mutability": "mutable",
															"name": "i_",
															"nameLocation": "105:2:0",
															"nodeType": "VariableDeclaration",
															"scope": 20,
															"src": "97:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 7,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "97:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 9,
													"nodeType": "VariableDeclarationStatement",
													"src": "97:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "118:4:0",
														"subExpression": {
															"id": 13,
															"name": "i_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "118:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"nodeType": "ExpressionStatement",
													"src": "118:4:0"
												},
												"nodeType": "ForStatement",
												"src": "92:41:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "sum_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "146:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "154:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "146:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "146:9:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "38:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42:2:0"
									},
									"returnParameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54:0:0"
									},
									"scope": 27,
									"src": "29:134:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 28,
							"src": "8:158:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "8:158:0"
				},
				"id": 0
			}
		}
	}
}