{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "DiamondWritable__InvalidInitializationParameters",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__RemoveTargetNotZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__ReplaceTargetIsIdentical",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorAlreadyAdded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorIsImmutable",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorNotFound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorNotSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__TargetHasNoCode",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable__NotOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable__NotTransitiveOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Proxy__ImplementationIsNotContract",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SafeOwnable__NotNomineeOwner",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
								"name": "action",
								"type": "uint8"
							},
							{
								"internalType": "bytes4[]",
								"name": "selectors",
								"type": "bytes4[]"
							}
						],
						"indexed": false,
						"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
						"name": "facetCuts",
						"type": "tuple[]"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "DiamondCut",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					},
					{
						"internalType": "bytes4[]",
						"name": "selectors",
						"type": "bytes4[]"
					}
				],
				"name": "addSelectors",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
								"name": "action",
								"type": "uint8"
							},
							{
								"internalType": "bytes4[]",
								"name": "selectors",
								"type": "bytes4[]"
							}
						],
						"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
						"name": "facetCuts",
						"type": "tuple[]"
					},
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "diamondCut",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "selector",
						"type": "bytes4"
					}
				],
				"name": "facetAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "facet",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facetAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "addresses",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "facet",
						"type": "address"
					}
				],
				"name": "facetFunctionSelectors",
				"outputs": [
					{
						"internalType": "bytes4[]",
						"name": "selectors",
						"type": "bytes4[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "bytes4[]",
								"name": "selectors",
								"type": "bytes4[]"
							}
						],
						"internalType": "struct IERC2535DiamondLoupeInternal.Facet[]",
						"name": "diamondFacets",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFallbackAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "fallbackAddress",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "facet",
						"type": "address"
					}
				],
				"name": "install",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nomineeOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					},
					{
						"internalType": "bytes4[]",
						"name": "selectors",
						"type": "bytes4[]"
					}
				],
				"name": "removeSelectors",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fallbackAddress",
						"type": "address"
					}
				],
				"name": "setFallbackAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "facet",
						"type": "address"
					}
				],
				"name": "uninstall",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
					"params": {
						"data": "optional initialization function call data",
						"facetCuts": "array of structured Diamond facet update data",
						"target": "optional target of initialization delegatecall"
					}
				},
				"facetAddress(bytes4)": {
					"params": {
						"selector": "function selector to query"
					},
					"returns": {
						"facet": "facet address (zero address if not found)"
					}
				},
				"facetAddresses()": {
					"returns": {
						"addresses": "array of facet addresses"
					}
				},
				"facetFunctionSelectors(address)": {
					"params": {
						"facet": "address of facet to query"
					},
					"returns": {
						"selectors": "array of function selectors"
					}
				},
				"facets()": {
					"returns": {
						"diamondFacets": "array of structured facet data"
					}
				},
				"getFallbackAddress()": {
					"returns": {
						"fallbackAddress": "address of fallback implementation"
					}
				},
				"owner()": {
					"returns": {
						"_0": "contract owner"
					}
				},
				"setFallbackAddress(address)": {
					"params": {
						"fallbackAddress": "address of fallback implementation"
					}
				},
				"supportsInterface(bytes4)": {
					"params": {
						"interfaceId": "interface id"
					},
					"returns": {
						"_0": "bool whether interface is supported"
					}
				},
				"transferOwnership(address)": {
					"params": {
						"account": "address of new owner"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"acceptOwnership()": {
					"notice": "accept transfer of contract ownership"
				},
				"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
					"notice": "update diamond facets and optionally execute arbitrary initialization function"
				},
				"facetAddress(bytes4)": {
					"notice": "get the address of the facet associated with given selector"
				},
				"facetAddresses()": {
					"notice": "get addresses of all facets used by diamond"
				},
				"facetFunctionSelectors(address)": {
					"notice": "get all selectors for given facet address"
				},
				"facets()": {
					"notice": "get all facets and their selectors"
				},
				"getFallbackAddress()": {
					"notice": "query the address of the fallback implementation"
				},
				"nomineeOwner()": {
					"notice": "get the nominated owner who has permission to call acceptOwnership"
				},
				"owner()": {
					"notice": "get the ERC173 contract owner"
				},
				"setFallbackAddress(address)": {
					"notice": "set the address of the fallback implementation"
				},
				"supportsInterface(bytes4)": {
					"notice": "query whether contract has registered support for given interface"
				},
				"transferOwnership(address)": {
					"notice": "transfer contract ownership to new account"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"code/contract/sol/native/interface/IDiamond.sol": "IDiamond"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"code/contract/sol/native/interface/IDiamond.sol": {
			"keccak256": "0x476630f7270efc20246c5cc54b18aaa2ee4a0aedcb35265f0435dbed3be214cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://742c2654fce6e0267c53268eca627dab7c72eb128e5d0bce68e30aa77e9cc96c",
				"dweb:/ipfs/QmYyfTsgTfUVnpMuB82n6dWq3i3boaXy57mZzEGyxBF8CB"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/access/ownable/IOwnable.sol": {
			"keccak256": "0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7",
			"license": "MIT",
			"urls": [
				"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033",
				"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/access/ownable/IOwnableInternal.sol": {
			"keccak256": "0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90",
			"license": "MIT",
			"urls": [
				"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff",
				"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/access/ownable/ISafeOwnable.sol": {
			"keccak256": "0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263",
			"license": "MIT",
			"urls": [
				"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c",
				"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/access/ownable/ISafeOwnableInternal.sol": {
			"keccak256": "0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6",
			"license": "MIT",
			"urls": [
				"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39",
				"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC165.sol": {
			"keccak256": "0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e",
			"license": "MIT",
			"urls": [
				"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c",
				"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC165Internal.sol": {
			"keccak256": "0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce",
			"license": "MIT",
			"urls": [
				"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43",
				"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC173.sol": {
			"keccak256": "0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750",
				"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC173Internal.sol": {
			"keccak256": "0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1",
			"license": "MIT",
			"urls": [
				"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec",
				"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC2535DiamondCut.sol": {
			"keccak256": "0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619",
				"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC2535DiamondCutInternal.sol": {
			"keccak256": "0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee",
			"license": "MIT",
			"urls": [
				"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c",
				"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC2535DiamondLoupe.sol": {
			"keccak256": "0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3",
			"license": "MIT",
			"urls": [
				"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac",
				"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/interfaces/IERC2535DiamondLoupeInternal.sol": {
			"keccak256": "0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54",
			"license": "MIT",
			"urls": [
				"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851",
				"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/IProxy.sol": {
			"keccak256": "0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954",
				"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/ISolidStateDiamond.sol": {
			"keccak256": "0xac7569f320832aa6ee5b9e5f6de17fea33009ba8dcdd56aad687487b8ae6fc92",
			"license": "MIT",
			"urls": [
				"bzz-raw://cfdebf2293222ceec328d09a317bd9bc76ba65f563055fba58a37369e4ce7979",
				"dweb:/ipfs/QmRK745EuARnBFEdMVk3LkZoXG2xSGd7LuNQZWUex9xhgK"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/base/IDiamondBase.sol": {
			"keccak256": "0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78",
			"license": "MIT",
			"urls": [
				"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76",
				"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/fallback/IDiamondFallback.sol": {
			"keccak256": "0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c",
			"license": "MIT",
			"urls": [
				"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f",
				"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/readable/IDiamondReadable.sol": {
			"keccak256": "0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8",
				"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/readable/IDiamondReadableInternal.sol": {
			"keccak256": "0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790",
			"license": "MIT",
			"urls": [
				"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff",
				"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/writable/IDiamondWritable.sol": {
			"keccak256": "0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572",
			"license": "MIT",
			"urls": [
				"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d",
				"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn"
			]
		},
		"code/contract/sol/non-native/solidstate-v0.8.24/proxy/diamond/writable/IDiamondWritableInternal.sol": {
			"keccak256": "0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159",
			"license": "MIT",
			"urls": [
				"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4",
				"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B"
			]
		}
	},
	"version": 1
}