{
	"id": "b71843d331289f53cbc6ae3f53d17676",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.19;\nimport { IERC20 } from \"../../../non-native/openzeppelin/token/ERC20/IERC20.sol\";\nimport { IERC20Metadata } from \"../../../non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\";\nimport { IUniswapV2Factory } from \"../../../non-native/uniswap/interfaces/IUniswapV2Factory.sol\";\nimport { IUniswapV2Router02 } from \"../../../non-native/uniswap/interfaces/IUniswapV2Router02.sol\";\nimport { IUniswapV2Pair } from \"../../../non-native/uniswap/interfaces/IUniswapV2Pair.sol\";\nimport { FixedPointValue } from \"../../shared/FixedPointValue.sol\";\nimport { IFixedPointMath } from \"../math/FixedPointMath.sol\";\n\ncontract UniswapV2Adaptor {\n    IFixedPointMath private fixedPointMath_;\n    IUniswapV2Factory private factory_;\n    IUniswapV2Router02 private router_;\n\n    constructor(address fixedPointMath, address factory, address router) {\n        fixedPointMath_ = IFixedPointMath(fixedPointMath);\n        factory_ = IUniswapV2Factory(factory);\n        router_ = IUniswapV2Router02(router);\n    }\n\n    function fixedPointMath() public view returns (IFixedPointMath) {\n        return fixedPointMath_;\n    }\n\n    function factory() public view returns (IUniswapV2Factory) {\n        return factory_;\n    }\n\n    function router() public view returns (IUniswapV2Router02) {\n        return router_;\n    }\n\n    function pairAddress(address token0, address token1) public view returns (address) {\n        return factory_.getPair(token0, token1);\n    }\n\n    function pairInterface(address token0, address token1) public view returns (IUniswapV2Pair) {\n        return IUniswapV2Pair(pairAddress(token0, token1));\n    }\n\n    function pairReserves(address token0, address token1) public view returns (uint256[] memory) {\n        uint256[] memory reserves;\n        reserves = new uint256[](2);\n        (\n            reserves[0],\n            reserves[1],\n        ) = pairInterface(token0, token1).getReserves();\n        return reserves;\n    }\n\n    function pairIsZeroAddress(address token0, address token1) public view returns (bool) {\n        return pairAddress(token0, token1) == address(0);\n    }\n\n    function pairIsSameLayoutAsGivenTokens(address token0, address token1) public view returns (bool) {\n        return token0 == pairInterface(token0, token1).token0();\n    }\n\n    function price(address token0, address token1) public view returns (FixedPointValue memory) {\n        uint8 decimals0;\n        uint8 decimals1;\n        uint256 result;\n        FixedPointValue memory quote;\n        decimals0 = IERC20Metadata(token0).decimals();\n        decimals1 = IERC20Metadata(token1).decimals();\n        if (pairIsZeroAddress(token0, token1)) return FixedPointValue({value: 0, decimals: 18});\n        if (pairIsSameLayoutAsGivenTokens(token0, token1)) {\n            result = router_.quote(\n                10**decimals0,\n                pairReserves(token0, token1)[0],\n                pairReserves(token0, token1)[1]\n            );\n            quote = FixedPointValue({value: result, decimals: decimals1});\n            quote = fixedPointMath_.asEther(quote);\n            return quote;\n        }\n        result = router_.quote(\n            10**decimals1,\n            pairReserves(token0, token1)[1],\n            pairReserves(token0, token1)[0]\n        );\n        quote = FixedPointValue({value: result, decimals: decimals1});\n        quote = fixedPointMath_.asEther(quote);\n        return quote;\n    }\n\n    function amountOut(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory) {\n        address token0;\n        address token1;\n        uint8 decimals0;\n        uint8 decimals1;\n        uint256[] memory amounts;\n        uint256 amount;\n        FixedPointValue memory amountOut;\n        token0 = path[0];\n        token1 = path[path.length - 1];\n        decimals0 = IERC20Metadata(token0).decimals();\n        decimals1 = IERC20Metadata(token1).decimals();\n        amountIn = fixedPointMath_.asNewDecimals(amountIn, decimals0);\n        amounts = router_.getAmountsOut(amountIn.value, path);\n        amount = amounts[amounts.length - 1];\n        amountOut = FixedPointValue({value: amount, decimals: decimals1});\n        amountOut = fixedPointMath_.asEther(amountOut);\n        return amountOut;\n    }\n\n    function yield(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory basisPoints) {\n        address token0;\n        address token1;\n        FixedPointValue memory bestAmountOut;\n        FixedPointValue memory realAmountOut;\n        FixedPointValue memory scale;\n        token0 = path[0];\n        token1 = path[path.length - 1];\n        amountIn = fixedPointMath_.asEther(amountIn);\n        bestAmountOut = fixedPointMath_.mul(amountIn, price(token0, token1));\n        realAmountOut = amountOut(path, amountIn);\n        if (bestAmountOut.value == 0 || realAmountOut.value == 0) return FixedPointValue({value: 0, decimals: 18});\n        if (realAmountOut.value >= bestAmountOut.value) return fixedPointMath_.asEther(FixedPointValue({value: 10_000, decimals: 0}));\n        scale = fixedPointMath_.scale(realAmountOut, bestAmountOut);\n        return scale;\n    }\n}"
			},
			"code/contract/sol/native/utils/math/FixedPointMath.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.19;\nimport { Math } from \"../../../non-native/openzeppelin/utils/math/Math.sol\";\nimport { FixedPointValue } from \"../../shared/FixedPointValue.sol\";\n\ninterface IFixedPointMath {\n    function scale(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory basisPoints);\n    function slice(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function add(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function sub(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function mul(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function div(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function asNewDecimals(FixedPointValue memory num, uint8 decimals) external pure returns (FixedPointValue memory);\n    function asEther(FixedPointValue memory num) external pure returns (FixedPointValue memory);\n}\n\ncontract FixedPointMath {\n    using Math for uint256;\n\n    error IncompatibleDecimals(uint8 decimals0, uint8 decimals1);\n\n    modifier onlyMatchingFixedPointValueType(FixedPointValue memory num0, FixedPointValue memory num1) {\n        uint8 decimals0;\n        uint8 decimals1;\n        decimals0 = num0.decimals;\n        decimals1 = num1.decimals;\n        if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1);\n        _;\n    }\n\n    function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {\n        uint8 decimals;\n        uint256 representation;\n        FixedPointValue memory result;\n        FixedPointValue memory scale;\n        decimals = num0.decimals;\n        representation = 10**decimals;\n        scale = FixedPointValue({value: 10_000 * representation, decimals: decimals});\n        result = div(num0, num1);\n        result = mul(result, scale);\n        return result;\n    }\n\n    function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 representation;\n        FixedPointValue memory result;\n        FixedPointValue memory scale;\n        decimals = num.decimals;\n        representation = 10**decimals;\n        scale = FixedPointValue({value: 10_000 * representation, decimals: decimals});\n        result = div(num, scale);\n        result = mul(result, sliceBasisPoints);\n        return result;\n    }\n\n    function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        result = value0 + value1;\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        result = value0 - value1;\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        uint256 representation;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        representation = 10**decimals;\n        if (decimals == 0) {\n            result = value0 * value1;\n            return FixedPointValue({value: result, decimals: decimals});\n        }\n        result = value0.mulDiv(value1, representation);\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        uint256 representation;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        representation = 10**decimals;\n        result = value0.mulDiv(representation, value1);\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {\n        uint8 currentDecimals;\n        uint256 value;\n        uint256 result;\n        currentDecimals = num.decimals;\n        value = num.value;\n        if (currentDecimals != 18) {\n            FixedPointValue memory numAsEther;\n            numAsEther = asEther(num);\n            value = numAsEther.value;\n        }\n        result = ((value * (10**18) / (10**18)) * (10**decimals)) / (10**18);\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {\n        uint8 currentDecimals;\n        uint256 value;\n        uint256 result;\n        currentDecimals = num.decimals;\n        value = num.value;\n        result = ((value * (10**18) / (10**currentDecimals)) * (10**18)) / (10**18);\n        return FixedPointValue({value: result, decimals: 18});\n    }\n}"
			},
			"code/contract/sol/native/shared/FixedPointValue.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.19;\n\nstruct FixedPointValue {\n    uint256 value;\n    uint8 decimals;\n}"
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IUniswapV2Pair {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(\n        address indexed sender,\n        uint256 amount0,\n        uint256 amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (\n            uint112 reserve0,\n            uint112 reserve1,\n            uint32 blockTimestampLast\n        );\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function burn(address to)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./IUniswapV2Router01.sol\";\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountETH);\n\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline,\n        bool approveMax,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable;\n\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n}"
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint256\n    );\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB)\n        external\n        view\n        returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(address tokenA, address tokenB)\n        external\n        returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n}"
			},
			"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        returns (\n            uint256 amountA,\n            uint256 amountB,\n            uint256 liquidity\n        );\n\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        payable\n        returns (\n            uint256 amountToken,\n            uint256 amountETH,\n            uint256 liquidity\n        );\n\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB);\n\n    function removeLiquidityETH(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountToken, uint256 amountETH);\n\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline,\n        bool approveMax,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountA, uint256 amountB);\n\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline,\n        bool approveMax,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountToken, uint256 amountETH);\n\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapTokensForExactTokens(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapTokensForExactETH(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapETHForExactTokens(\n        uint256 amountOut,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function quote(\n        uint256 amountA,\n        uint256 reserveA,\n        uint256 reserveB\n    ) external pure returns (uint256 amountB);\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountOut);\n\n    function getAmountIn(\n        uint256 amountOut,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountIn);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}"
			},
			"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol": {
				"UniswapV2Adaptor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fixedPointMath",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "amountIn",
									"type": "tuple"
								}
							],
							"name": "amountOut",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fixedPointMath",
							"outputs": [
								{
									"internalType": "contract IFixedPointMath",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "pairAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "pairInterface",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Pair",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "pairIsSameLayoutAsGivenTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "pairIsZeroAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "pairReserves",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "price",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "amountIn",
									"type": "tuple"
								}
							],
							"name": "yield",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "basisPoints",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":677:5211  contract UniswapV2Adaptor {... */\n  mstore(0x40, 0x80)\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":835:1063  constructor(address fixedPointMath, address factory, address router) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":948:962  fixedPointMath */\n  dup3\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":914:929  fixedPointMath_ */\n  0x00\n  dup1\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":914:963  fixedPointMath_ = IFixedPointMath(fixedPointMath) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1002:1009  factory */\n  dup2\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":973:981  factory_ */\n  0x01\n  0x00\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":973:1010  factory_ = IUniswapV2Factory(factory) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1049:1055  router */\n  dup1\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1020:1027  router_ */\n  0x02\n  0x00\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1020:1056  router_ = IUniswapV2Router02(router) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":835:1063  constructor(address fixedPointMath, address factory, address router) {... */\n  pop\n  pop\n  pop\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":677:5211  contract UniswapV2Adaptor {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":966:1085   */\ntag_27:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_30\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_31\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":677:5211  contract UniswapV2Adaptor {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":677:5211  contract UniswapV2Adaptor {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb09cd0c3\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xb09cd0c3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbe83cb79\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xceca05ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf6162317\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x0d186819\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14c758d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b00490d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x41b29895\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7dd92787\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4305:5209  function yield(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory basisPoints) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1069:1172  function fixedPointMath() public view returns (IFixedPointMath) {... */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2334:3455  function price(address token0, address token1) public view returns (FixedPointValue memory) {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2158:2328  function pairIsSameLayoutAsGivenTokens(address token0, address token1) public view returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1681:1995  function pairReserves(address token0, address token1) public view returns (uint256[] memory) {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2001:2152  function pairIsZeroAddress(address token0, address token1) public view returns (bool) {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1516:1675  function pairInterface(address token0, address token1) public view returns (IUniswapV2Pair) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1178:1269  function factory() public view returns (IUniswapV2Factory) {... */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1371:1510  function pairAddress(address token0, address token1) public view returns (address) {... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3461:4299  function amountOut(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory) {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1275:1365  function router() public view returns (IUniswapV2Router02) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4305:5209  function yield(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory basisPoints) {... */\n    tag_18:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4397:4431  FixedPointValue memory basisPoints */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4443:4457  address token0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4467:4481  address token1 */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4491:4527  FixedPointValue memory bestAmountOut */\n      tag_69\n      tag_67\n      jump\t// in\n    tag_69:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4537:4573  FixedPointValue memory realAmountOut */\n      tag_70\n      tag_67\n      jump\t// in\n    tag_70:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4583:4611  FixedPointValue memory scale */\n      tag_71\n      tag_67\n      jump\t// in\n    tag_71:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4630:4634  path */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4635:4636  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4630:4637  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_72\n      jumpi\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n    tag_72:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4621:4637  token0 = path[0] */\n      swap5\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4656:4660  path */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4675:4676  1 */\n      0x01\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4661:4665  path */\n      dup10\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4661:4672  path.length */\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4661:4676  path.length - 1 */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4656:4677  path[path.length - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_77\n      jumpi\n      tag_78\n      tag_74\n      jump\t// in\n    tag_78:\n    tag_77:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4647:4677  token1 = path[path.length - 1] */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4698:4713  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4698:4721  fixedPointMath_.asEther */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e60d8e0\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4722:4730  amountIn */\n      dup9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4698:4731  fixedPointMath_.asEther(amountIn) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_79:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4687:4731  amountIn = fixedPointMath_.asEther(amountIn) */\n      swap7\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4757:4772  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4757:4776  fixedPointMath_.mul */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa7e7c9f9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4777:4785  amountIn */\n      dup9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4787:4808  price(token0, token1) */\n      tag_84\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4793:4799  token0 */\n      dup9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4801:4807  token1 */\n      dup9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4787:4792  price */\n      tag_28\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4787:4808  price(token0, token1) */\n      jump\t// in\n    tag_84:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4757:4809  fixedPointMath_.mul(amountIn, price(token0, token1)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_89:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4741:4809  bestAmountOut = fixedPointMath_.mul(amountIn, price(token0, token1)) */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4835:4860  amountOut(path, amountIn) */\n      tag_90\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4845:4849  path */\n      dup9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4851:4859  amountIn */\n      dup9\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4835:4844  amountOut */\n      tag_60\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4835:4860  amountOut(path, amountIn) */\n      jump\t// in\n    tag_90:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4819:4860  realAmountOut = amountOut(path, amountIn) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4897:4898  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4874:4887  bestAmountOut */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4874:4893  bestAmountOut.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4874:4898  bestAmountOut.value == 0 */\n      eq\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4874:4926  bestAmountOut.value == 0 || realAmountOut.value == 0 */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4925:4926  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4902:4915  realAmountOut */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4902:4921  realAmountOut.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4902:4926  realAmountOut.value == 0 */\n      eq\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4874:4926  bestAmountOut.value == 0 || realAmountOut.value == 0 */\n    tag_91:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4870:4976  if (bestAmountOut.value == 0 || realAmountOut.value == 0) return FixedPointValue({value: 0, decimals: 18}) */\n      iszero\n      tag_92\n      jumpi\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4935:4976  FixedPointValue({value: 0, decimals: 18}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4959:4960  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4935:4976  FixedPointValue({value: 0, decimals: 18}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4972:4974  18 */\n      0x12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4935:4976  FixedPointValue({value: 0, decimals: 18}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4928:4976  return FixedPointValue({value: 0, decimals: 18}) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_68)\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4870:4976  if (bestAmountOut.value == 0 || realAmountOut.value == 0) return FixedPointValue({value: 0, decimals: 18}) */\n    tag_92:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5013:5026  bestAmountOut */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5013:5032  bestAmountOut.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4990:5003  realAmountOut */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4990:5009  realAmountOut.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4990:5032  realAmountOut.value >= bestAmountOut.value */\n      lt\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4986:5111  if (realAmountOut.value >= bestAmountOut.value) return fixedPointMath_.asEther(FixedPointValue({value: 10_000, decimals: 0})) */\n      tag_93\n      jumpi\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5041:5056  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5041:5064  fixedPointMath_.asEther */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e60d8e0\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5065:5110  FixedPointValue({value: 10_000, decimals: 0}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5089:5095  10_000 */\n      0x2710\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5065:5110  FixedPointValue({value: 10_000, decimals: 0}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5107:5108  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5065:5110  FixedPointValue({value: 10_000, decimals: 0}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5041:5111  fixedPointMath_.asEther(FixedPointValue({value: 10_000, decimals: 0})) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_94:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_97:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5034:5111  return fixedPointMath_.asEther(FixedPointValue({value: 10_000, decimals: 0})) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_68)\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4986:5111  if (realAmountOut.value >= bestAmountOut.value) return fixedPointMath_.asEther(FixedPointValue({value: 10_000, decimals: 0})) */\n    tag_93:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5129:5144  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5129:5150  fixedPointMath_.scale */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe51356e8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5151:5164  realAmountOut */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5166:5179  bestAmountOut */\n      dup6\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5129:5180  fixedPointMath_.scale(realAmountOut, bestAmountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_98:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_101:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5121:5180  scale = fixedPointMath_.scale(realAmountOut, bestAmountOut) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5197:5202  scale */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":5190:5202  return scale */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4305:5209  function yield(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory basisPoints) {... */\n    tag_68:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1069:1172  function fixedPointMath() public view returns (IFixedPointMath) {... */\n    tag_22:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1116:1131  IFixedPointMath */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1150:1165  fixedPointMath_ */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1143:1165  return fixedPointMath_ */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1069:1172  function fixedPointMath() public view returns (IFixedPointMath) {... */\n      swap1\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2334:3455  function price(address token0, address token1) public view returns (FixedPointValue memory) {... */\n    tag_28:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2402:2424  FixedPointValue memory */\n      tag_103\n      tag_67\n      jump\t// in\n    tag_103:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2436:2451  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2461:2476  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2486:2500  uint256 result */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2510:2538  FixedPointValue memory quote */\n      tag_105\n      tag_67\n      jump\t// in\n    tag_105:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2575:2581  token0 */\n      dup7\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2560:2591  IERC20Metadata(token0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2560:2593  IERC20Metadata(token0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2548:2593  decimals0 = IERC20Metadata(token0).decimals() */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2630:2636  token1 */\n      dup6\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2615:2646  IERC20Metadata(token1).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2615:2648  IERC20Metadata(token1).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_112:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2603:2648  decimals1 = IERC20Metadata(token1).decimals() */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2662:2695  pairIsZeroAddress(token0, token1) */\n      tag_113\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2680:2686  token0 */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2688:2694  token1 */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2662:2679  pairIsZeroAddress */\n      tag_42\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2662:2695  pairIsZeroAddress(token0, token1) */\n      jump\t// in\n    tag_113:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2658:2745  if (pairIsZeroAddress(token0, token1)) return FixedPointValue({value: 0, decimals: 18}) */\n      iszero\n      tag_114\n      jumpi\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2704:2745  FixedPointValue({value: 0, decimals: 18}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2728:2729  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2704:2745  FixedPointValue({value: 0, decimals: 18}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2741:2743  18 */\n      0x12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2704:2745  FixedPointValue({value: 0, decimals: 18}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2697:2745  return FixedPointValue({value: 0, decimals: 18}) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_104)\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2658:2745  if (pairIsZeroAddress(token0, token1)) return FixedPointValue({value: 0, decimals: 18}) */\n    tag_114:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2759:2804  pairIsSameLayoutAsGivenTokens(token0, token1) */\n      tag_115\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2789:2795  token0 */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2797:2803  token1 */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2759:2788  pairIsSameLayoutAsGivenTokens */\n      tag_32\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2759:2804  pairIsSameLayoutAsGivenTokens(token0, token1) */\n      jump\t// in\n    tag_115:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2755:3149  if (pairIsSameLayoutAsGivenTokens(token0, token1)) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2829:2836  router_ */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2829:2842  router_.quote */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad615dec\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2864:2873  decimals0 */\n      dup6\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2860:2862  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2860:2873  10**decimals0 */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2891:2919  pairReserves(token0, token1) */\n      tag_119\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2904:2910  token0 */\n      dup11\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2912:2918  token1 */\n      dup11\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2891:2903  pairReserves */\n      tag_37\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2891:2919  pairReserves(token0, token1) */\n      jump\t// in\n    tag_119:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2920:2921  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2891:2922  pairReserves(token0, token1)[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_121\n      tag_74\n      jump\t// in\n    tag_121:\n    tag_120:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2940:2968  pairReserves(token0, token1) */\n      tag_122\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2953:2959  token0 */\n      dup12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2961:2967  token1 */\n      dup12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2940:2952  pairReserves */\n      tag_37\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2940:2968  pairReserves(token0, token1) */\n      jump\t// in\n    tag_122:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2969:2970  1 */\n      0x01\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2940:2971  pairReserves(token0, token1)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_74\n      jump\t// in\n    tag_124:\n    tag_123:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2829:2985  router_.quote(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2820:2985  result = router_.quote(... */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3007:3060  FixedPointValue({value: result, decimals: decimals1}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3031:3037  result */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3007:3060  FixedPointValue({value: result, decimals: decimals1}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3049:3058  decimals1 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3007:3060  FixedPointValue({value: result, decimals: decimals1}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2999:3060  quote = FixedPointValue({value: result, decimals: decimals1}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3082:3097  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3082:3105  fixedPointMath_.asEther */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e60d8e0\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3106:3111  quote */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3082:3112  fixedPointMath_.asEther(quote) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_131:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_134:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3074:3112  quote = fixedPointMath_.asEther(quote) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3133:3138  quote */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3126:3138  return quote */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_104)\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2755:3149  if (pairIsSameLayoutAsGivenTokens(token0, token1)) {... */\n    tag_116:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3167:3174  router_ */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3167:3180  router_.quote */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad615dec\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3198:3207  decimals1 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3194:3196  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3194:3207  10**decimals1 */\n      tag_135\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_135:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3221:3249  pairReserves(token0, token1) */\n      tag_136\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3234:3240  token0 */\n      dup11\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3242:3248  token1 */\n      dup11\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3221:3233  pairReserves */\n      tag_37\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3221:3249  pairReserves(token0, token1) */\n      jump\t// in\n    tag_136:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3250:3251  1 */\n      0x01\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3221:3252  pairReserves(token0, token1)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_138\n      tag_74\n      jump\t// in\n    tag_138:\n    tag_137:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3266:3294  pairReserves(token0, token1) */\n      tag_139\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3279:3285  token0 */\n      dup12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3287:3293  token1 */\n      dup12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3266:3278  pairReserves */\n      tag_37\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3266:3294  pairReserves(token0, token1) */\n      jump\t// in\n    tag_139:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3295:3296  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3266:3297  pairReserves(token0, token1)[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_141\n      tag_74\n      jump\t// in\n    tag_141:\n    tag_140:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3167:3307  router_.quote(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_145:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3158:3307  result = router_.quote(... */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3325:3378  FixedPointValue({value: result, decimals: decimals1}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3349:3355  result */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3325:3378  FixedPointValue({value: result, decimals: decimals1}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3367:3376  decimals1 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3325:3378  FixedPointValue({value: result, decimals: decimals1}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3317:3378  quote = FixedPointValue({value: result, decimals: decimals1}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3396:3411  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3396:3419  fixedPointMath_.asEther */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e60d8e0\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3420:3425  quote */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3396:3426  fixedPointMath_.asEther(quote) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_146:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_149:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3388:3426  quote = fixedPointMath_.asEther(quote) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3443:3448  quote */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3436:3448  return quote */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2334:3455  function price(address token0, address token1) public view returns (FixedPointValue memory) {... */\n    tag_104:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2158:2328  function pairIsSameLayoutAsGivenTokens(address token0, address token1) public view returns (bool) {... */\n    tag_32:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2250:2254  bool */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2283:2312  pairInterface(token0, token1) */\n      tag_151\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2297:2303  token0 */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2305:2311  token1 */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2283:2296  pairInterface */\n      tag_46\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2283:2312  pairInterface(token0, token1) */\n      jump\t// in\n    tag_151:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2283:2319  pairInterface(token0, token1).token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2283:2321  pairInterface(token0, token1).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2273:2321  token0 == pairInterface(token0, token1).token0() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2273:2279  token0 */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2273:2321  token0 == pairInterface(token0, token1).token0() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2266:2321  return token0 == pairInterface(token0, token1).token0() */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2158:2328  function pairIsSameLayoutAsGivenTokens(address token0, address token1) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1681:1995  function pairReserves(address token0, address token1) public view returns (uint256[] memory) {... */\n    tag_37:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1756:1772  uint256[] memory */\n      0x60\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1784:1809  uint256[] memory reserves */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1844:1845  2 */\n      0x02\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1830:1846  new uint256[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_157\n      jumpi\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n    tag_157:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_160:\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1819:1846  reserves = new uint256[](2) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1920:1949  pairInterface(token0, token1) */\n      tag_161\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1934:1940  token0 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1942:1948  token1 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1920:1933  pairInterface */\n      tag_46\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1920:1949  pairInterface(token0, token1) */\n      jump\t// in\n    tag_161:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1920:1961  pairInterface(token0, token1).getReserves */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0902f1ac\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1920:1963  pairInterface(token0, token1).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1856:1963  (... */\n      dup3\n      0xffffffffffffffffffffffffffff\n      and\n      swap3\n      pop\n      dup2\n      0xffffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1870:1878  reserves */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1879:1880  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1870:1881  reserves[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_167\n      tag_74\n      jump\t// in\n    tag_167:\n    tag_166:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1895:1903  reserves */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1904:1905  1 */\n      0x01\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1895:1906  reserves[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_169\n      tag_74\n      jump\t// in\n    tag_169:\n    tag_168:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1856:1963  (... */\n      dup3\n      dup2\n      mstore\n      pop\n      dup3\n      dup2\n      mstore\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1980:1988  reserves */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1973:1988  return reserves */\n      swap2\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1681:1995  function pairReserves(address token0, address token1) public view returns (uint256[] memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2001:2152  function pairIsZeroAddress(address token0, address token1) public view returns (bool) {... */\n    tag_42:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2081:2085  bool */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2143:2144  0 */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2104:2145  pairAddress(token0, token1) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2104:2131  pairAddress(token0, token1) */\n      tag_171\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2116:2122  token0 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2124:2130  token1 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2104:2115  pairAddress */\n      tag_55\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2104:2131  pairAddress(token0, token1) */\n      jump\t// in\n    tag_171:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2104:2145  pairAddress(token0, token1) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2097:2145  return pairAddress(token0, token1) == address(0) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":2001:2152  function pairIsZeroAddress(address token0, address token1) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1516:1675  function pairInterface(address token0, address token1) public view returns (IUniswapV2Pair) {... */\n    tag_46:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1592:1606  IUniswapV2Pair */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1640:1667  pairAddress(token0, token1) */\n      tag_173\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1652:1658  token0 */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1660:1666  token1 */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1640:1651  pairAddress */\n      tag_55\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1640:1667  pairAddress(token0, token1) */\n      jump\t// in\n    tag_173:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1618:1668  return IUniswapV2Pair(pairAddress(token0, token1)) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1516:1675  function pairInterface(address token0, address token1) public view returns (IUniswapV2Pair) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1178:1269  function factory() public view returns (IUniswapV2Factory) {... */\n    tag_50:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1218:1235  IUniswapV2Factory */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1254:1262  factory_ */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1247:1262  return factory_ */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1178:1269  function factory() public view returns (IUniswapV2Factory) {... */\n      swap1\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1371:1510  function pairAddress(address token0, address token1) public view returns (address) {... */\n    tag_55:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1445:1452  address */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1471:1479  factory_ */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1471:1487  factory_.getPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe6a43905\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1488:1494  token0 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1496:1502  token1 */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1471:1503  factory_.getPair(token0, token1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_180:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1464:1503  return factory_.getPair(token0, token1) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1371:1510  function pairAddress(address token0, address token1) public view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3461:4299  function amountOut(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory) {... */\n    tag_60:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3557:3579  FixedPointValue memory */\n      tag_181\n      tag_67\n      jump\t// in\n    tag_181:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3591:3605  address token0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3615:3629  address token1 */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3639:3654  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3664:3679  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3689:3713  uint256[] memory amounts */\n      0x60\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3723:3737  uint256 amount */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3747:3779  FixedPointValue memory amountOut */\n      tag_183\n      tag_67\n      jump\t// in\n    tag_183:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3798:3802  path */\n      dup10\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3803:3804  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3798:3805  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_74\n      jump\t// in\n    tag_185:\n    tag_184:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3789:3805  token0 = path[0] */\n      swap7\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3824:3828  path */\n      dup10\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3843:3844  1 */\n      0x01\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3829:3833  path */\n      dup12\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3829:3840  path.length */\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3829:3844  path.length - 1 */\n      tag_186\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_186:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3824:3845  path[path.length - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_188\n      tag_74\n      jump\t// in\n    tag_188:\n    tag_187:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3815:3845  token1 = path[path.length - 1] */\n      swap6\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3882:3888  token0 */\n      dup7\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3867:3898  IERC20Metadata(token0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3867:3900  IERC20Metadata(token0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_191:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3855:3900  decimals0 = IERC20Metadata(token0).decimals() */\n      swap5\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3937:3943  token1 */\n      dup6\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3922:3953  IERC20Metadata(token1).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3922:3955  IERC20Metadata(token1).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_194:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3910:3955  decimals1 = IERC20Metadata(token1).decimals() */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3976:3991  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3976:4005  fixedPointMath_.asNewDecimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7d02ebf4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4006:4014  amountIn */\n      dup11\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4016:4025  decimals0 */\n      dup8\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3976:4026  fixedPointMath_.asNewDecimals(amountIn, decimals0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_199:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3965:4026  amountIn = fixedPointMath_.asNewDecimals(amountIn, decimals0) */\n      swap9\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4046:4053  router_ */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4046:4067  router_.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4068:4076  amountIn */\n      dup11\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4068:4082  amountIn.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4084:4088  path */\n      dup13\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4046:4089  router_.getAmountsOut(amountIn.value, path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4036:4089  amounts = router_.getAmountsOut(amountIn.value, path) */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4108:4115  amounts */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4133:4134  1 */\n      0x01\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4116:4123  amounts */\n      dup5\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4116:4130  amounts.length */\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4116:4134  amounts.length - 1 */\n      tag_206\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_206:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4108:4135  amounts[amounts.length - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_207\n      jumpi\n      tag_208\n      tag_74\n      jump\t// in\n    tag_208:\n    tag_207:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4099:4135  amount = amounts[amounts.length - 1] */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4157:4210  FixedPointValue({value: amount, decimals: decimals1}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4181:4187  amount */\n      dup4\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4157:4210  FixedPointValue({value: amount, decimals: decimals1}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4199:4208  decimals1 */\n      dup6\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4157:4210  FixedPointValue({value: amount, decimals: decimals1}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4145:4210  amountOut = FixedPointValue({value: amount, decimals: decimals1}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4232:4247  fixedPointMath_ */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4232:4255  fixedPointMath_.asEther */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e60d8e0\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4256:4265  amountOut */\n      dup3\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4232:4266  fixedPointMath_.asEther(amountOut) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_209:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_212:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4220:4266  amountOut = fixedPointMath_.asEther(amountOut) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4283:4292  amountOut */\n      dup1\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":4276:4292  return amountOut */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":3461:4299  function amountOut(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1275:1365  function router() public view returns (IUniswapV2Router02) {... */\n    tag_63:\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1314:1332  IUniswapV2Router02 */\n      0x00\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1351:1358  router_ */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1344:1358  return router_ */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":1275:1365  function router() public view returns (IUniswapV2Router02) {... */\n      swap1\n      jump\t// out\n    tag_67:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_214:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_215:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_216:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_217:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_218:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_159:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_219:\n        /* \"#utility.yul\":834:861   */\n      tag_295\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_218\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_297\n      tag_159\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":907:995   */\n    tag_296:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_220:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_299\n      tag_214\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_300\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_219\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1484   */\n    tag_221:\n        /* \"#utility.yul\":1250:1254   */\n      0x00\n        /* \"#utility.yul\":1340:1358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1332:1338   */\n      dup3\n        /* \"#utility.yul\":1329:1359   */\n      gt\n        /* \"#utility.yul\":1326:1382   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1362:1380   */\n      tag_303\n      tag_159\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1326:1382   */\n    tag_302:\n        /* \"#utility.yul\":1412:1416   */\n      0x20\n        /* \"#utility.yul\":1404:1410   */\n      dup3\n        /* \"#utility.yul\":1400:1417   */\n      mul\n        /* \"#utility.yul\":1392:1417   */\n      swap1\n      pop\n        /* \"#utility.yul\":1472:1476   */\n      0x20\n        /* \"#utility.yul\":1466:1470   */\n      dup2\n        /* \"#utility.yul\":1462:1477   */\n      add\n        /* \"#utility.yul\":1454:1477   */\n      swap1\n      pop\n        /* \"#utility.yul\":1173:1484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1490:1607   */\n    tag_222:\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1596:1597   */\n      dup1\n        /* \"#utility.yul\":1589:1601   */\n      revert\n        /* \"#utility.yul\":1613:1739   */\n    tag_223:\n        /* \"#utility.yul\":1650:1657   */\n      0x00\n        /* \"#utility.yul\":1690:1732   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1683:1688   */\n      dup3\n        /* \"#utility.yul\":1679:1733   */\n      and\n        /* \"#utility.yul\":1668:1733   */\n      swap1\n      pop\n        /* \"#utility.yul\":1613:1739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1745:1841   */\n    tag_224:\n        /* \"#utility.yul\":1782:1789   */\n      0x00\n        /* \"#utility.yul\":1811:1835   */\n      tag_307\n        /* \"#utility.yul\":1829:1834   */\n      dup3\n        /* \"#utility.yul\":1811:1835   */\n      tag_223\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1800:1835   */\n      swap1\n      pop\n        /* \"#utility.yul\":1745:1841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1847:1969   */\n    tag_225:\n        /* \"#utility.yul\":1920:1944   */\n      tag_309\n        /* \"#utility.yul\":1938:1943   */\n      dup2\n        /* \"#utility.yul\":1920:1944   */\n      tag_224\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1913:1918   */\n      dup2\n        /* \"#utility.yul\":1910:1945   */\n      eq\n        /* \"#utility.yul\":1900:1963   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1959:1960   */\n      0x00\n        /* \"#utility.yul\":1956:1957   */\n      dup1\n        /* \"#utility.yul\":1949:1961   */\n      revert\n        /* \"#utility.yul\":1900:1963   */\n    tag_310:\n        /* \"#utility.yul\":1847:1969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1975:2114   */\n    tag_226:\n        /* \"#utility.yul\":2021:2026   */\n      0x00\n        /* \"#utility.yul\":2059:2065   */\n      dup2\n        /* \"#utility.yul\":2046:2066   */\n      calldataload\n        /* \"#utility.yul\":2037:2066   */\n      swap1\n      pop\n        /* \"#utility.yul\":2075:2108   */\n      tag_312\n        /* \"#utility.yul\":2102:2107   */\n      dup2\n        /* \"#utility.yul\":2075:2108   */\n      tag_225\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1975:2114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2847   */\n    tag_227:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2258:2339   */\n      tag_314\n        /* \"#utility.yul\":2274:2338   */\n      tag_315\n        /* \"#utility.yul\":2331:2337   */\n      dup5\n        /* \"#utility.yul\":2274:2338   */\n      tag_221\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2258:2339   */\n      tag_220\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2249:2339   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2364   */\n      dup1\n        /* \"#utility.yul\":2388:2394   */\n      dup4\n        /* \"#utility.yul\":2381:2386   */\n      dup3\n        /* \"#utility.yul\":2374:2395   */\n      mstore\n        /* \"#utility.yul\":2422:2426   */\n      0x20\n        /* \"#utility.yul\":2415:2420   */\n      dup3\n        /* \"#utility.yul\":2411:2427   */\n      add\n        /* \"#utility.yul\":2404:2427   */\n      swap1\n      pop\n        /* \"#utility.yul\":2475:2479   */\n      0x20\n        /* \"#utility.yul\":2467:2473   */\n      dup5\n        /* \"#utility.yul\":2463:2480   */\n      mul\n        /* \"#utility.yul\":2455:2461   */\n      dup4\n        /* \"#utility.yul\":2451:2481   */\n      add\n        /* \"#utility.yul\":2504:2507   */\n      dup6\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2493:2508   */\n      gt\n        /* \"#utility.yul\":2490:2612   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":2523:2602   */\n      tag_317\n      tag_222\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2490:2612   */\n    tag_316:\n        /* \"#utility.yul\":2638:2644   */\n      dup4\n        /* \"#utility.yul\":2621:2841   */\n    tag_318:\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2650:2653   */\n      dup2\n        /* \"#utility.yul\":2647:2662   */\n      lt\n        /* \"#utility.yul\":2621:2841   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2730:2733   */\n      dup1\n        /* \"#utility.yul\":2759:2796   */\n      tag_321\n        /* \"#utility.yul\":2792:2795   */\n      dup9\n        /* \"#utility.yul\":2780:2790   */\n      dup3\n        /* \"#utility.yul\":2759:2796   */\n      tag_226\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2754:2757   */\n      dup5\n        /* \"#utility.yul\":2747:2797   */\n      mstore\n        /* \"#utility.yul\":2826:2830   */\n      0x20\n        /* \"#utility.yul\":2821:2824   */\n      dup5\n        /* \"#utility.yul\":2817:2831   */\n      add\n        /* \"#utility.yul\":2810:2831   */\n      swap4\n      pop\n        /* \"#utility.yul\":2697:2841   */\n      pop\n        /* \"#utility.yul\":2681:2685   */\n      0x20\n        /* \"#utility.yul\":2676:2679   */\n      dup2\n        /* \"#utility.yul\":2672:2686   */\n      add\n        /* \"#utility.yul\":2665:2686   */\n      swap1\n      pop\n        /* \"#utility.yul\":2621:2841   */\n      jump(tag_318)\n    tag_320:\n        /* \"#utility.yul\":2625:2646   */\n      pop\n        /* \"#utility.yul\":2239:2847   */\n      pop\n      pop\n        /* \"#utility.yul\":2137:2847   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:3240   */\n    tag_228:\n        /* \"#utility.yul\":2941:2946   */\n      0x00\n        /* \"#utility.yul\":2990:2993   */\n      dup3\n        /* \"#utility.yul\":2983:2987   */\n      0x1f\n        /* \"#utility.yul\":2975:2981   */\n      dup4\n        /* \"#utility.yul\":2971:2988   */\n      add\n        /* \"#utility.yul\":2967:2994   */\n      slt\n        /* \"#utility.yul\":2957:3079   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2998:3077   */\n      tag_324\n      tag_217\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2957:3079   */\n    tag_323:\n        /* \"#utility.yul\":3115:3121   */\n      dup2\n        /* \"#utility.yul\":3102:3122   */\n      calldataload\n        /* \"#utility.yul\":3140:3234   */\n      tag_325\n        /* \"#utility.yul\":3230:3233   */\n      dup5\n        /* \"#utility.yul\":3222:3228   */\n      dup3\n        /* \"#utility.yul\":3215:3219   */\n      0x20\n        /* \"#utility.yul\":3207:3213   */\n      dup7\n        /* \"#utility.yul\":3203:3220   */\n      add\n        /* \"#utility.yul\":3140:3234   */\n      tag_227\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3131:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2947:3240   */\n      pop\n        /* \"#utility.yul\":2870:3240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3246:3363   */\n    tag_229:\n        /* \"#utility.yul\":3355:3356   */\n      0x00\n        /* \"#utility.yul\":3352:3353   */\n      dup1\n        /* \"#utility.yul\":3345:3357   */\n      revert\n        /* \"#utility.yul\":3492:3569   */\n    tag_231:\n        /* \"#utility.yul\":3529:3536   */\n      0x00\n        /* \"#utility.yul\":3558:3563   */\n      dup2\n        /* \"#utility.yul\":3547:3563   */\n      swap1\n      pop\n        /* \"#utility.yul\":3492:3569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3575:3697   */\n    tag_232:\n        /* \"#utility.yul\":3648:3672   */\n      tag_330\n        /* \"#utility.yul\":3666:3671   */\n      dup2\n        /* \"#utility.yul\":3648:3672   */\n      tag_231\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3641:3646   */\n      dup2\n        /* \"#utility.yul\":3638:3673   */\n      eq\n        /* \"#utility.yul\":3628:3691   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3687:3688   */\n      0x00\n        /* \"#utility.yul\":3684:3685   */\n      dup1\n        /* \"#utility.yul\":3677:3689   */\n      revert\n        /* \"#utility.yul\":3628:3691   */\n    tag_331:\n        /* \"#utility.yul\":3575:3697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3842   */\n    tag_233:\n        /* \"#utility.yul\":3749:3754   */\n      0x00\n        /* \"#utility.yul\":3787:3793   */\n      dup2\n        /* \"#utility.yul\":3774:3794   */\n      calldataload\n        /* \"#utility.yul\":3765:3794   */\n      swap1\n      pop\n        /* \"#utility.yul\":3803:3836   */\n      tag_333\n        /* \"#utility.yul\":3830:3835   */\n      dup2\n        /* \"#utility.yul\":3803:3836   */\n      tag_232\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3703:3842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3848:3934   */\n    tag_234:\n        /* \"#utility.yul\":3883:3890   */\n      0x00\n        /* \"#utility.yul\":3923:3927   */\n      0xff\n        /* \"#utility.yul\":3916:3921   */\n      dup3\n        /* \"#utility.yul\":3912:3928   */\n      and\n        /* \"#utility.yul\":3901:3928   */\n      swap1\n      pop\n        /* \"#utility.yul\":3848:3934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3940:4058   */\n    tag_235:\n        /* \"#utility.yul\":4011:4033   */\n      tag_336\n        /* \"#utility.yul\":4027:4032   */\n      dup2\n        /* \"#utility.yul\":4011:4033   */\n      tag_234\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4004:4009   */\n      dup2\n        /* \"#utility.yul\":4001:4034   */\n      eq\n        /* \"#utility.yul\":3991:4052   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":4048:4049   */\n      0x00\n        /* \"#utility.yul\":4045:4046   */\n      dup1\n        /* \"#utility.yul\":4038:4050   */\n      revert\n        /* \"#utility.yul\":3991:4052   */\n    tag_337:\n        /* \"#utility.yul\":3940:4058   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4064:4199   */\n    tag_236:\n        /* \"#utility.yul\":4108:4113   */\n      0x00\n        /* \"#utility.yul\":4146:4152   */\n      dup2\n        /* \"#utility.yul\":4133:4153   */\n      calldataload\n        /* \"#utility.yul\":4124:4153   */\n      swap1\n      pop\n        /* \"#utility.yul\":4162:4193   */\n      tag_339\n        /* \"#utility.yul\":4187:4192   */\n      dup2\n        /* \"#utility.yul\":4162:4193   */\n      tag_235\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4064:4199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4235:4817   */\n    tag_237:\n        /* \"#utility.yul\":4314:4319   */\n      0x00\n        /* \"#utility.yul\":4358:4362   */\n      0x40\n        /* \"#utility.yul\":4346:4355   */\n      dup3\n        /* \"#utility.yul\":4341:4344   */\n      dup5\n        /* \"#utility.yul\":4337:4356   */\n      sub\n        /* \"#utility.yul\":4333:4363   */\n      slt\n        /* \"#utility.yul\":4330:4447   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":4366:4445   */\n      tag_342\n      tag_229\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4330:4447   */\n    tag_341:\n        /* \"#utility.yul\":4465:4486   */\n      tag_343\n        /* \"#utility.yul\":4481:4485   */\n      0x40\n        /* \"#utility.yul\":4465:4486   */\n      tag_220\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4456:4486   */\n      swap1\n      pop\n        /* \"#utility.yul\":4546:4547   */\n      0x00\n        /* \"#utility.yul\":4586:4635   */\n      tag_344\n        /* \"#utility.yul\":4631:4634   */\n      dup5\n        /* \"#utility.yul\":4622:4628   */\n      dup3\n        /* \"#utility.yul\":4611:4620   */\n      dup6\n        /* \"#utility.yul\":4607:4629   */\n      add\n        /* \"#utility.yul\":4586:4635   */\n      tag_233\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4579:4583   */\n      0x00\n        /* \"#utility.yul\":4572:4577   */\n      dup4\n        /* \"#utility.yul\":4568:4584   */\n      add\n        /* \"#utility.yul\":4561:4636   */\n      mstore\n        /* \"#utility.yul\":4496:4647   */\n      pop\n        /* \"#utility.yul\":4710:4712   */\n      0x20\n        /* \"#utility.yul\":4751:4798   */\n      tag_345\n        /* \"#utility.yul\":4794:4797   */\n      dup5\n        /* \"#utility.yul\":4785:4791   */\n      dup3\n        /* \"#utility.yul\":4774:4783   */\n      dup6\n        /* \"#utility.yul\":4770:4792   */\n      add\n        /* \"#utility.yul\":4751:4798   */\n      tag_236\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4744:4748   */\n      0x20\n        /* \"#utility.yul\":4737:4742   */\n      dup4\n        /* \"#utility.yul\":4733:4749   */\n      add\n        /* \"#utility.yul\":4726:4799   */\n      mstore\n        /* \"#utility.yul\":4657:4810   */\n      pop\n        /* \"#utility.yul\":4235:4817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4823:5567   */\n    tag_17:\n        /* \"#utility.yul\":4946:4952   */\n      0x00\n        /* \"#utility.yul\":4954:4960   */\n      dup1\n        /* \"#utility.yul\":5003:5005   */\n      0x60\n        /* \"#utility.yul\":4991:5000   */\n      dup4\n        /* \"#utility.yul\":4982:4989   */\n      dup6\n        /* \"#utility.yul\":4978:5001   */\n      sub\n        /* \"#utility.yul\":4974:5006   */\n      slt\n        /* \"#utility.yul\":4971:5090   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5009:5088   */\n      tag_348\n      tag_215\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4971:5090   */\n    tag_347:\n        /* \"#utility.yul\":5157:5158   */\n      0x00\n        /* \"#utility.yul\":5146:5155   */\n      dup4\n        /* \"#utility.yul\":5142:5159   */\n      add\n        /* \"#utility.yul\":5129:5160   */\n      calldataload\n        /* \"#utility.yul\":5187:5205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5179:5185   */\n      dup2\n        /* \"#utility.yul\":5176:5206   */\n      gt\n        /* \"#utility.yul\":5173:5290   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5209:5288   */\n      tag_350\n      tag_216\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5173:5290   */\n    tag_349:\n        /* \"#utility.yul\":5314:5392   */\n      tag_351\n        /* \"#utility.yul\":5384:5391   */\n      dup6\n        /* \"#utility.yul\":5375:5381   */\n      dup3\n        /* \"#utility.yul\":5364:5373   */\n      dup7\n        /* \"#utility.yul\":5360:5382   */\n      add\n        /* \"#utility.yul\":5314:5392   */\n      tag_228\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5304:5392   */\n      swap3\n      pop\n        /* \"#utility.yul\":5100:5402   */\n      pop\n        /* \"#utility.yul\":5441:5443   */\n      0x20\n        /* \"#utility.yul\":5467:5550   */\n      tag_352\n        /* \"#utility.yul\":5542:5549   */\n      dup6\n        /* \"#utility.yul\":5533:5539   */\n      dup3\n        /* \"#utility.yul\":5522:5531   */\n      dup7\n        /* \"#utility.yul\":5518:5540   */\n      add\n        /* \"#utility.yul\":5467:5550   */\n      tag_237\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5457:5550   */\n      swap2\n      pop\n        /* \"#utility.yul\":5412:5560   */\n      pop\n        /* \"#utility.yul\":4823:5567   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5573:5681   */\n    tag_238:\n        /* \"#utility.yul\":5650:5674   */\n      tag_354\n        /* \"#utility.yul\":5668:5673   */\n      dup2\n        /* \"#utility.yul\":5650:5674   */\n      tag_231\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5645:5648   */\n      dup3\n        /* \"#utility.yul\":5638:5675   */\n      mstore\n        /* \"#utility.yul\":5573:5681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5687:5789   */\n    tag_239:\n        /* \"#utility.yul\":5760:5782   */\n      tag_356\n        /* \"#utility.yul\":5776:5781   */\n      dup2\n        /* \"#utility.yul\":5760:5782   */\n      tag_234\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5755:5758   */\n      dup3\n        /* \"#utility.yul\":5748:5783   */\n      mstore\n        /* \"#utility.yul\":5687:5789   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5851:6369   */\n    tag_240:\n        /* \"#utility.yul\":6008:6012   */\n      0x40\n        /* \"#utility.yul\":6003:6006   */\n      dup3\n        /* \"#utility.yul\":5999:6013   */\n      add\n        /* \"#utility.yul\":6096:6100   */\n      0x00\n        /* \"#utility.yul\":6089:6094   */\n      dup3\n        /* \"#utility.yul\":6085:6101   */\n      add\n        /* \"#utility.yul\":6079:6102   */\n      mload\n        /* \"#utility.yul\":6115:6178   */\n      tag_358\n        /* \"#utility.yul\":6172:6176   */\n      0x00\n        /* \"#utility.yul\":6167:6170   */\n      dup6\n        /* \"#utility.yul\":6163:6177   */\n      add\n        /* \"#utility.yul\":6149:6161   */\n      dup3\n        /* \"#utility.yul\":6115:6178   */\n      tag_238\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6023:6188   */\n      pop\n        /* \"#utility.yul\":6274:6278   */\n      0x20\n        /* \"#utility.yul\":6267:6272   */\n      dup3\n        /* \"#utility.yul\":6263:6279   */\n      add\n        /* \"#utility.yul\":6257:6280   */\n      mload\n        /* \"#utility.yul\":6293:6352   */\n      tag_359\n        /* \"#utility.yul\":6346:6350   */\n      0x20\n        /* \"#utility.yul\":6341:6344   */\n      dup6\n        /* \"#utility.yul\":6337:6351   */\n      add\n        /* \"#utility.yul\":6323:6335   */\n      dup3\n        /* \"#utility.yul\":6293:6352   */\n      tag_239\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6198:6362   */\n      pop\n        /* \"#utility.yul\":5977:6369   */\n      pop\n        /* \"#utility.yul\":5851:6369   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6375:6717   */\n    tag_20:\n        /* \"#utility.yul\":6528:6532   */\n      0x00\n        /* \"#utility.yul\":6566:6568   */\n      0x40\n        /* \"#utility.yul\":6555:6564   */\n      dup3\n        /* \"#utility.yul\":6551:6569   */\n      add\n        /* \"#utility.yul\":6543:6569   */\n      swap1\n      pop\n        /* \"#utility.yul\":6579:6710   */\n      tag_361\n        /* \"#utility.yul\":6707:6708   */\n      0x00\n        /* \"#utility.yul\":6696:6705   */\n      dup4\n        /* \"#utility.yul\":6692:6709   */\n      add\n        /* \"#utility.yul\":6683:6689   */\n      dup5\n        /* \"#utility.yul\":6579:6710   */\n      tag_240\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6375:6717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6723:6783   */\n    tag_241:\n        /* \"#utility.yul\":6751:6754   */\n      0x00\n        /* \"#utility.yul\":6772:6777   */\n      dup2\n        /* \"#utility.yul\":6765:6777   */\n      swap1\n      pop\n        /* \"#utility.yul\":6723:6783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6789:6931   */\n    tag_242:\n        /* \"#utility.yul\":6839:6848   */\n      0x00\n        /* \"#utility.yul\":6872:6925   */\n      tag_364\n        /* \"#utility.yul\":6890:6924   */\n      tag_365\n        /* \"#utility.yul\":6899:6923   */\n      tag_366\n        /* \"#utility.yul\":6917:6922   */\n      dup5\n        /* \"#utility.yul\":6899:6923   */\n      tag_223\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6890:6924   */\n      tag_241\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6872:6925   */\n      tag_223\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6859:6925   */\n      swap1\n      pop\n        /* \"#utility.yul\":6789:6931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7063   */\n    tag_243:\n        /* \"#utility.yul\":6987:6996   */\n      0x00\n        /* \"#utility.yul\":7020:7057   */\n      tag_368\n        /* \"#utility.yul\":7051:7056   */\n      dup3\n        /* \"#utility.yul\":7020:7057   */\n      tag_242\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7007:7057   */\n      swap1\n      pop\n        /* \"#utility.yul\":6937:7063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7218   */\n    tag_244:\n        /* \"#utility.yul\":7142:7151   */\n      0x00\n        /* \"#utility.yul\":7175:7212   */\n      tag_370\n        /* \"#utility.yul\":7206:7211   */\n      dup3\n        /* \"#utility.yul\":7175:7212   */\n      tag_243\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7162:7212   */\n      swap1\n      pop\n        /* \"#utility.yul\":7069:7218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7224:7401   */\n    tag_245:\n        /* \"#utility.yul\":7334:7394   */\n      tag_372\n        /* \"#utility.yul\":7388:7393   */\n      dup2\n        /* \"#utility.yul\":7334:7394   */\n      tag_244\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7329:7332   */\n      dup3\n        /* \"#utility.yul\":7322:7395   */\n      mstore\n        /* \"#utility.yul\":7224:7401   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7407:7675   */\n    tag_24:\n        /* \"#utility.yul\":7523:7527   */\n      0x00\n        /* \"#utility.yul\":7561:7563   */\n      0x20\n        /* \"#utility.yul\":7550:7559   */\n      dup3\n        /* \"#utility.yul\":7546:7564   */\n      add\n        /* \"#utility.yul\":7538:7564   */\n      swap1\n      pop\n        /* \"#utility.yul\":7574:7668   */\n      tag_374\n        /* \"#utility.yul\":7665:7666   */\n      0x00\n        /* \"#utility.yul\":7654:7663   */\n      dup4\n        /* \"#utility.yul\":7650:7667   */\n      add\n        /* \"#utility.yul\":7641:7647   */\n      dup5\n        /* \"#utility.yul\":7574:7668   */\n      tag_245\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7407:7675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7681:8155   */\n    tag_27:\n        /* \"#utility.yul\":7749:7755   */\n      0x00\n        /* \"#utility.yul\":7757:7763   */\n      dup1\n        /* \"#utility.yul\":7806:7808   */\n      0x40\n        /* \"#utility.yul\":7794:7803   */\n      dup4\n        /* \"#utility.yul\":7785:7792   */\n      dup6\n        /* \"#utility.yul\":7781:7804   */\n      sub\n        /* \"#utility.yul\":7777:7809   */\n      slt\n        /* \"#utility.yul\":7774:7893   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":7812:7891   */\n      tag_377\n      tag_215\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7774:7893   */\n    tag_376:\n        /* \"#utility.yul\":7932:7933   */\n      0x00\n        /* \"#utility.yul\":7957:8010   */\n      tag_378\n        /* \"#utility.yul\":8002:8009   */\n      dup6\n        /* \"#utility.yul\":7993:7999   */\n      dup3\n        /* \"#utility.yul\":7982:7991   */\n      dup7\n        /* \"#utility.yul\":7978:8000   */\n      add\n        /* \"#utility.yul\":7957:8010   */\n      tag_226\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7947:8010   */\n      swap3\n      pop\n        /* \"#utility.yul\":7903:8020   */\n      pop\n        /* \"#utility.yul\":8059:8061   */\n      0x20\n        /* \"#utility.yul\":8085:8138   */\n      tag_379\n        /* \"#utility.yul\":8130:8137   */\n      dup6\n        /* \"#utility.yul\":8121:8127   */\n      dup3\n        /* \"#utility.yul\":8110:8119   */\n      dup7\n        /* \"#utility.yul\":8106:8128   */\n      add\n        /* \"#utility.yul\":8085:8138   */\n      tag_226\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8075:8138   */\n      swap2\n      pop\n        /* \"#utility.yul\":8030:8148   */\n      pop\n        /* \"#utility.yul\":7681:8155   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8161:8251   */\n    tag_246:\n        /* \"#utility.yul\":8195:8202   */\n      0x00\n        /* \"#utility.yul\":8238:8243   */\n      dup2\n        /* \"#utility.yul\":8231:8244   */\n      iszero\n        /* \"#utility.yul\":8224:8245   */\n      iszero\n        /* \"#utility.yul\":8213:8245   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8257:8366   */\n    tag_247:\n        /* \"#utility.yul\":8338:8359   */\n      tag_382\n        /* \"#utility.yul\":8353:8358   */\n      dup2\n        /* \"#utility.yul\":8338:8359   */\n      tag_246\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8333:8336   */\n      dup3\n        /* \"#utility.yul\":8326:8360   */\n      mstore\n        /* \"#utility.yul\":8257:8366   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8372:8582   */\n    tag_34:\n        /* \"#utility.yul\":8459:8463   */\n      0x00\n        /* \"#utility.yul\":8497:8499   */\n      0x20\n        /* \"#utility.yul\":8486:8495   */\n      dup3\n        /* \"#utility.yul\":8482:8500   */\n      add\n        /* \"#utility.yul\":8474:8500   */\n      swap1\n      pop\n        /* \"#utility.yul\":8510:8575   */\n      tag_384\n        /* \"#utility.yul\":8572:8573   */\n      0x00\n        /* \"#utility.yul\":8561:8570   */\n      dup4\n        /* \"#utility.yul\":8557:8574   */\n      add\n        /* \"#utility.yul\":8548:8554   */\n      dup5\n        /* \"#utility.yul\":8510:8575   */\n      tag_247\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8372:8582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8588:8702   */\n    tag_248:\n        /* \"#utility.yul\":8655:8661   */\n      0x00\n        /* \"#utility.yul\":8689:8694   */\n      dup2\n        /* \"#utility.yul\":8683:8695   */\n      mload\n        /* \"#utility.yul\":8673:8695   */\n      swap1\n      pop\n        /* \"#utility.yul\":8588:8702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8708:8892   */\n    tag_249:\n        /* \"#utility.yul\":8807:8818   */\n      0x00\n        /* \"#utility.yul\":8841:8847   */\n      dup3\n        /* \"#utility.yul\":8836:8839   */\n      dup3\n        /* \"#utility.yul\":8829:8848   */\n      mstore\n        /* \"#utility.yul\":8881:8885   */\n      0x20\n        /* \"#utility.yul\":8876:8879   */\n      dup3\n        /* \"#utility.yul\":8872:8886   */\n      add\n        /* \"#utility.yul\":8857:8886   */\n      swap1\n      pop\n        /* \"#utility.yul\":8708:8892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8898:9030   */\n    tag_250:\n        /* \"#utility.yul\":8965:8969   */\n      0x00\n        /* \"#utility.yul\":8988:8991   */\n      dup2\n        /* \"#utility.yul\":8980:8991   */\n      swap1\n      pop\n        /* \"#utility.yul\":9018:9022   */\n      0x20\n        /* \"#utility.yul\":9013:9016   */\n      dup3\n        /* \"#utility.yul\":9009:9023   */\n      add\n        /* \"#utility.yul\":9001:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":8898:9030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9036:9215   */\n    tag_251:\n        /* \"#utility.yul\":9105:9115   */\n      0x00\n        /* \"#utility.yul\":9126:9172   */\n      tag_389\n        /* \"#utility.yul\":9168:9171   */\n      dup4\n        /* \"#utility.yul\":9160:9166   */\n      dup4\n        /* \"#utility.yul\":9126:9172   */\n      tag_238\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9204:9208   */\n      0x20\n        /* \"#utility.yul\":9199:9202   */\n      dup4\n        /* \"#utility.yul\":9195:9209   */\n      add\n        /* \"#utility.yul\":9181:9209   */\n      swap1\n      pop\n        /* \"#utility.yul\":9036:9215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9221:9334   */\n    tag_252:\n        /* \"#utility.yul\":9291:9295   */\n      0x00\n        /* \"#utility.yul\":9323:9327   */\n      0x20\n        /* \"#utility.yul\":9318:9321   */\n      dup3\n        /* \"#utility.yul\":9314:9328   */\n      add\n        /* \"#utility.yul\":9306:9328   */\n      swap1\n      pop\n        /* \"#utility.yul\":9221:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9370:10102   */\n    tag_253:\n        /* \"#utility.yul\":9489:9492   */\n      0x00\n        /* \"#utility.yul\":9518:9572   */\n      tag_392\n        /* \"#utility.yul\":9566:9571   */\n      dup3\n        /* \"#utility.yul\":9518:9572   */\n      tag_248\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9588:9674   */\n      tag_393\n        /* \"#utility.yul\":9667:9673   */\n      dup2\n        /* \"#utility.yul\":9662:9665   */\n      dup6\n        /* \"#utility.yul\":9588:9674   */\n      tag_249\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9581:9674   */\n      swap4\n      pop\n        /* \"#utility.yul\":9698:9754   */\n      tag_394\n        /* \"#utility.yul\":9748:9753   */\n      dup4\n        /* \"#utility.yul\":9698:9754   */\n      tag_250\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9777:9784   */\n      dup1\n        /* \"#utility.yul\":9808:9809   */\n      0x00\n        /* \"#utility.yul\":9793:10077   */\n    tag_395:\n        /* \"#utility.yul\":9818:9824   */\n      dup4\n        /* \"#utility.yul\":9815:9816   */\n      dup2\n        /* \"#utility.yul\":9812:9825   */\n      lt\n        /* \"#utility.yul\":9793:10077   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":9894:9900   */\n      dup2\n        /* \"#utility.yul\":9888:9901   */\n      mload\n        /* \"#utility.yul\":9921:9984   */\n      tag_398\n        /* \"#utility.yul\":9980:9983   */\n      dup9\n        /* \"#utility.yul\":9965:9978   */\n      dup3\n        /* \"#utility.yul\":9921:9984   */\n      tag_251\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9914:9984   */\n      swap8\n      pop\n        /* \"#utility.yul\":10007:10067   */\n      tag_399\n        /* \"#utility.yul\":10060:10066   */\n      dup4\n        /* \"#utility.yul\":10007:10067   */\n      tag_252\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9997:10067   */\n      swap3\n      pop\n        /* \"#utility.yul\":9853:10077   */\n      pop\n        /* \"#utility.yul\":9840:9841   */\n      0x01\n        /* \"#utility.yul\":9837:9838   */\n      dup2\n        /* \"#utility.yul\":9833:9842   */\n      add\n        /* \"#utility.yul\":9828:9842   */\n      swap1\n      pop\n        /* \"#utility.yul\":9793:10077   */\n      jump(tag_395)\n    tag_397:\n        /* \"#utility.yul\":9797:9811   */\n      pop\n        /* \"#utility.yul\":10093:10096   */\n      dup6\n        /* \"#utility.yul\":10086:10096   */\n      swap4\n      pop\n        /* \"#utility.yul\":9494:10102   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9370:10102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10108:10481   */\n    tag_39:\n        /* \"#utility.yul\":10251:10255   */\n      0x00\n        /* \"#utility.yul\":10289:10291   */\n      0x20\n        /* \"#utility.yul\":10278:10287   */\n      dup3\n        /* \"#utility.yul\":10274:10292   */\n      add\n        /* \"#utility.yul\":10266:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":10338:10347   */\n      dup2\n        /* \"#utility.yul\":10332:10336   */\n      dup2\n        /* \"#utility.yul\":10328:10348   */\n      sub\n        /* \"#utility.yul\":10324:10325   */\n      0x00\n        /* \"#utility.yul\":10313:10322   */\n      dup4\n        /* \"#utility.yul\":10309:10326   */\n      add\n        /* \"#utility.yul\":10302:10349   */\n      mstore\n        /* \"#utility.yul\":10366:10474   */\n      tag_401\n        /* \"#utility.yul\":10469:10473   */\n      dup2\n        /* \"#utility.yul\":10460:10466   */\n      dup5\n        /* \"#utility.yul\":10366:10474   */\n      tag_253\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10358:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10108:10481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10487:10636   */\n    tag_254:\n        /* \"#utility.yul\":10560:10569   */\n      0x00\n        /* \"#utility.yul\":10593:10630   */\n      tag_403\n        /* \"#utility.yul\":10624:10629   */\n      dup3\n        /* \"#utility.yul\":10593:10630   */\n      tag_243\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10580:10630   */\n      swap1\n      pop\n        /* \"#utility.yul\":10487:10636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10642:10819   */\n    tag_255:\n        /* \"#utility.yul\":10752:10812   */\n      tag_405\n        /* \"#utility.yul\":10806:10811   */\n      dup2\n        /* \"#utility.yul\":10752:10812   */\n      tag_254\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10747:10750   */\n      dup3\n        /* \"#utility.yul\":10740:10813   */\n      mstore\n        /* \"#utility.yul\":10642:10819   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10825:11093   */\n    tag_48:\n        /* \"#utility.yul\":10941:10945   */\n      0x00\n        /* \"#utility.yul\":10979:10981   */\n      0x20\n        /* \"#utility.yul\":10968:10977   */\n      dup3\n        /* \"#utility.yul\":10964:10982   */\n      add\n        /* \"#utility.yul\":10956:10982   */\n      swap1\n      pop\n        /* \"#utility.yul\":10992:11086   */\n      tag_407\n        /* \"#utility.yul\":11083:11084   */\n      0x00\n        /* \"#utility.yul\":11072:11081   */\n      dup4\n        /* \"#utility.yul\":11068:11085   */\n      add\n        /* \"#utility.yul\":11059:11065   */\n      dup5\n        /* \"#utility.yul\":10992:11086   */\n      tag_255\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10825:11093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11099:11251   */\n    tag_256:\n        /* \"#utility.yul\":11175:11184   */\n      0x00\n        /* \"#utility.yul\":11208:11245   */\n      tag_409\n        /* \"#utility.yul\":11239:11244   */\n      dup3\n        /* \"#utility.yul\":11208:11245   */\n      tag_243\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11195:11245   */\n      swap1\n      pop\n        /* \"#utility.yul\":11099:11251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11257:11440   */\n    tag_257:\n        /* \"#utility.yul\":11370:11433   */\n      tag_411\n        /* \"#utility.yul\":11427:11432   */\n      dup2\n        /* \"#utility.yul\":11370:11433   */\n      tag_256\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11365:11368   */\n      dup3\n        /* \"#utility.yul\":11358:11434   */\n      mstore\n        /* \"#utility.yul\":11257:11440   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11446:11720   */\n    tag_52:\n        /* \"#utility.yul\":11565:11569   */\n      0x00\n        /* \"#utility.yul\":11603:11605   */\n      0x20\n        /* \"#utility.yul\":11592:11601   */\n      dup3\n        /* \"#utility.yul\":11588:11606   */\n      add\n        /* \"#utility.yul\":11580:11606   */\n      swap1\n      pop\n        /* \"#utility.yul\":11616:11713   */\n      tag_413\n        /* \"#utility.yul\":11710:11711   */\n      0x00\n        /* \"#utility.yul\":11699:11708   */\n      dup4\n        /* \"#utility.yul\":11695:11712   */\n      add\n        /* \"#utility.yul\":11686:11692   */\n      dup5\n        /* \"#utility.yul\":11616:11713   */\n      tag_257\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11446:11720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11726:11844   */\n    tag_258:\n        /* \"#utility.yul\":11813:11837   */\n      tag_415\n        /* \"#utility.yul\":11831:11836   */\n      dup2\n        /* \"#utility.yul\":11813:11837   */\n      tag_224\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11808:11811   */\n      dup3\n        /* \"#utility.yul\":11801:11838   */\n      mstore\n        /* \"#utility.yul\":11726:11844   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11850:12072   */\n    tag_57:\n        /* \"#utility.yul\":11943:11947   */\n      0x00\n        /* \"#utility.yul\":11981:11983   */\n      0x20\n        /* \"#utility.yul\":11970:11979   */\n      dup3\n        /* \"#utility.yul\":11966:11984   */\n      add\n        /* \"#utility.yul\":11958:11984   */\n      swap1\n      pop\n        /* \"#utility.yul\":11994:12065   */\n      tag_417\n        /* \"#utility.yul\":12062:12063   */\n      0x00\n        /* \"#utility.yul\":12051:12060   */\n      dup4\n        /* \"#utility.yul\":12047:12064   */\n      add\n        /* \"#utility.yul\":12038:12044   */\n      dup5\n        /* \"#utility.yul\":11994:12065   */\n      tag_258\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11850:12072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12231   */\n    tag_259:\n        /* \"#utility.yul\":12155:12164   */\n      0x00\n        /* \"#utility.yul\":12188:12225   */\n      tag_419\n        /* \"#utility.yul\":12219:12224   */\n      dup3\n        /* \"#utility.yul\":12188:12225   */\n      tag_243\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12175:12225   */\n      swap1\n      pop\n        /* \"#utility.yul\":12078:12231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12237:12422   */\n    tag_260:\n        /* \"#utility.yul\":12351:12415   */\n      tag_421\n        /* \"#utility.yul\":12409:12414   */\n      dup2\n        /* \"#utility.yul\":12351:12415   */\n      tag_259\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12346:12349   */\n      dup3\n        /* \"#utility.yul\":12339:12416   */\n      mstore\n        /* \"#utility.yul\":12237:12422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12428:12704   */\n    tag_65:\n        /* \"#utility.yul\":12548:12552   */\n      0x00\n        /* \"#utility.yul\":12586:12588   */\n      0x20\n        /* \"#utility.yul\":12575:12584   */\n      dup3\n        /* \"#utility.yul\":12571:12589   */\n      add\n        /* \"#utility.yul\":12563:12589   */\n      swap1\n      pop\n        /* \"#utility.yul\":12599:12697   */\n      tag_423\n        /* \"#utility.yul\":12694:12695   */\n      0x00\n        /* \"#utility.yul\":12683:12692   */\n      dup4\n        /* \"#utility.yul\":12679:12696   */\n      add\n        /* \"#utility.yul\":12670:12676   */\n      dup5\n        /* \"#utility.yul\":12599:12697   */\n      tag_260\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12428:12704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12710:12890   */\n    tag_74:\n        /* \"#utility.yul\":12758:12835   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12755:12756   */\n      0x00\n        /* \"#utility.yul\":12748:12836   */\n      mstore\n        /* \"#utility.yul\":12855:12859   */\n      0x32\n        /* \"#utility.yul\":12852:12853   */\n      0x04\n        /* \"#utility.yul\":12845:12860   */\n      mstore\n        /* \"#utility.yul\":12879:12883   */\n      0x24\n        /* \"#utility.yul\":12876:12877   */\n      0x00\n        /* \"#utility.yul\":12869:12884   */\n      revert\n        /* \"#utility.yul\":12896:13076   */\n    tag_261:\n        /* \"#utility.yul\":12944:13021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12941:12942   */\n      0x00\n        /* \"#utility.yul\":12934:13022   */\n      mstore\n        /* \"#utility.yul\":13041:13045   */\n      0x11\n        /* \"#utility.yul\":13038:13039   */\n      0x04\n        /* \"#utility.yul\":13031:13046   */\n      mstore\n        /* \"#utility.yul\":13065:13069   */\n      0x24\n        /* \"#utility.yul\":13062:13063   */\n      0x00\n        /* \"#utility.yul\":13055:13070   */\n      revert\n        /* \"#utility.yul\":13082:13276   */\n    tag_76:\n        /* \"#utility.yul\":13122:13126   */\n      0x00\n        /* \"#utility.yul\":13142:13162   */\n      tag_427\n        /* \"#utility.yul\":13160:13161   */\n      dup3\n        /* \"#utility.yul\":13142:13162   */\n      tag_231\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13137:13162   */\n      swap2\n      pop\n        /* \"#utility.yul\":13176:13196   */\n      tag_428\n        /* \"#utility.yul\":13194:13195   */\n      dup4\n        /* \"#utility.yul\":13176:13196   */\n      tag_231\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13171:13196   */\n      swap3\n      pop\n        /* \"#utility.yul\":13220:13221   */\n      dup3\n        /* \"#utility.yul\":13217:13218   */\n      dup3\n        /* \"#utility.yul\":13213:13222   */\n      sub\n        /* \"#utility.yul\":13205:13222   */\n      swap1\n      pop\n        /* \"#utility.yul\":13244:13245   */\n      dup2\n        /* \"#utility.yul\":13238:13242   */\n      dup2\n        /* \"#utility.yul\":13235:13246   */\n      gt\n        /* \"#utility.yul\":13232:13269   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13249:13267   */\n      tag_430\n      tag_261\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13232:13269   */\n    tag_429:\n        /* \"#utility.yul\":13082:13276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13282:13425   */\n    tag_262:\n        /* \"#utility.yul\":13339:13344   */\n      0x00\n        /* \"#utility.yul\":13370:13376   */\n      dup2\n        /* \"#utility.yul\":13364:13377   */\n      mload\n        /* \"#utility.yul\":13355:13377   */\n      swap1\n      pop\n        /* \"#utility.yul\":13386:13419   */\n      tag_432\n        /* \"#utility.yul\":13413:13418   */\n      dup2\n        /* \"#utility.yul\":13386:13419   */\n      tag_232\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13282:13425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13431:13570   */\n    tag_263:\n        /* \"#utility.yul\":13486:13491   */\n      0x00\n        /* \"#utility.yul\":13517:13523   */\n      dup2\n        /* \"#utility.yul\":13511:13524   */\n      mload\n        /* \"#utility.yul\":13502:13524   */\n      swap1\n      pop\n        /* \"#utility.yul\":13533:13564   */\n      tag_434\n        /* \"#utility.yul\":13558:13563   */\n      dup2\n        /* \"#utility.yul\":13533:13564   */\n      tag_235\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13431:13570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13606:14221   */\n    tag_264:\n        /* \"#utility.yul\":13696:13701   */\n      0x00\n        /* \"#utility.yul\":13740:13744   */\n      0x40\n        /* \"#utility.yul\":13728:13737   */\n      dup3\n        /* \"#utility.yul\":13723:13726   */\n      dup5\n        /* \"#utility.yul\":13719:13738   */\n      sub\n        /* \"#utility.yul\":13715:13745   */\n      slt\n        /* \"#utility.yul\":13712:13829   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":13748:13827   */\n      tag_437\n      tag_229\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13712:13829   */\n    tag_436:\n        /* \"#utility.yul\":13847:13868   */\n      tag_438\n        /* \"#utility.yul\":13863:13867   */\n      0x40\n        /* \"#utility.yul\":13847:13868   */\n      tag_220\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13838:13868   */\n      swap1\n      pop\n        /* \"#utility.yul\":13928:13929   */\n      0x00\n        /* \"#utility.yul\":13968:14028   */\n      tag_439\n        /* \"#utility.yul\":14024:14027   */\n      dup5\n        /* \"#utility.yul\":14015:14021   */\n      dup3\n        /* \"#utility.yul\":14004:14013   */\n      dup6\n        /* \"#utility.yul\":14000:14022   */\n      add\n        /* \"#utility.yul\":13968:14028   */\n      tag_262\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13961:13965   */\n      0x00\n        /* \"#utility.yul\":13954:13959   */\n      dup4\n        /* \"#utility.yul\":13950:13966   */\n      add\n        /* \"#utility.yul\":13943:14029   */\n      mstore\n        /* \"#utility.yul\":13878:14040   */\n      pop\n        /* \"#utility.yul\":14103:14105   */\n      0x20\n        /* \"#utility.yul\":14144:14202   */\n      tag_440\n        /* \"#utility.yul\":14198:14201   */\n      dup5\n        /* \"#utility.yul\":14189:14195   */\n      dup3\n        /* \"#utility.yul\":14178:14187   */\n      dup6\n        /* \"#utility.yul\":14174:14196   */\n      add\n        /* \"#utility.yul\":14144:14202   */\n      tag_263\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14137:14141   */\n      0x20\n        /* \"#utility.yul\":14130:14135   */\n      dup4\n        /* \"#utility.yul\":14126:14142   */\n      add\n        /* \"#utility.yul\":14119:14203   */\n      mstore\n        /* \"#utility.yul\":14050:14214   */\n      pop\n        /* \"#utility.yul\":13606:14221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14227:14638   */\n    tag_83:\n        /* \"#utility.yul\":14327:14333   */\n      0x00\n        /* \"#utility.yul\":14376:14378   */\n      0x40\n        /* \"#utility.yul\":14364:14373   */\n      dup3\n        /* \"#utility.yul\":14355:14362   */\n      dup5\n        /* \"#utility.yul\":14351:14374   */\n      sub\n        /* \"#utility.yul\":14347:14379   */\n      slt\n        /* \"#utility.yul\":14344:14463   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":14382:14461   */\n      tag_443\n      tag_215\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":14344:14463   */\n    tag_442:\n        /* \"#utility.yul\":14502:14503   */\n      0x00\n        /* \"#utility.yul\":14527:14621   */\n      tag_444\n        /* \"#utility.yul\":14613:14620   */\n      dup5\n        /* \"#utility.yul\":14604:14610   */\n      dup3\n        /* \"#utility.yul\":14593:14602   */\n      dup6\n        /* \"#utility.yul\":14589:14611   */\n      add\n        /* \"#utility.yul\":14527:14621   */\n      tag_264\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14517:14621   */\n      swap2\n      pop\n        /* \"#utility.yul\":14473:14631   */\n      pop\n        /* \"#utility.yul\":14227:14638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:15217   */\n    tag_86:\n        /* \"#utility.yul\":14885:14889   */\n      0x00\n        /* \"#utility.yul\":14923:14926   */\n      0x80\n        /* \"#utility.yul\":14912:14921   */\n      dup3\n        /* \"#utility.yul\":14908:14927   */\n      add\n        /* \"#utility.yul\":14900:14927   */\n      swap1\n      pop\n        /* \"#utility.yul\":14937:15068   */\n      tag_446\n        /* \"#utility.yul\":15065:15066   */\n      0x00\n        /* \"#utility.yul\":15054:15063   */\n      dup4\n        /* \"#utility.yul\":15050:15067   */\n      add\n        /* \"#utility.yul\":15041:15047   */\n      dup6\n        /* \"#utility.yul\":14937:15068   */\n      tag_240\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15078:15210   */\n      tag_447\n        /* \"#utility.yul\":15206:15208   */\n      0x40\n        /* \"#utility.yul\":15195:15204   */\n      dup4\n        /* \"#utility.yul\":15191:15209   */\n      add\n        /* \"#utility.yul\":15182:15188   */\n      dup5\n        /* \"#utility.yul\":15078:15210   */\n      tag_240\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14644:15217   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15223:15570   */\n    tag_109:\n        /* \"#utility.yul\":15291:15297   */\n      0x00\n        /* \"#utility.yul\":15340:15342   */\n      0x20\n        /* \"#utility.yul\":15328:15337   */\n      dup3\n        /* \"#utility.yul\":15319:15326   */\n      dup5\n        /* \"#utility.yul\":15315:15338   */\n      sub\n        /* \"#utility.yul\":15311:15343   */\n      slt\n        /* \"#utility.yul\":15308:15427   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":15346:15425   */\n      tag_450\n      tag_215\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15308:15427   */\n    tag_449:\n        /* \"#utility.yul\":15466:15467   */\n      0x00\n        /* \"#utility.yul\":15491:15553   */\n      tag_451\n        /* \"#utility.yul\":15545:15552   */\n      dup5\n        /* \"#utility.yul\":15536:15542   */\n      dup3\n        /* \"#utility.yul\":15525:15534   */\n      dup6\n        /* \"#utility.yul\":15521:15543   */\n      add\n        /* \"#utility.yul\":15491:15553   */\n      tag_263\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15481:15553   */\n      swap2\n      pop\n        /* \"#utility.yul\":15437:15563   */\n      pop\n        /* \"#utility.yul\":15223:15570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15576:15678   */\n    tag_265:\n        /* \"#utility.yul\":15618:15626   */\n      0x00\n        /* \"#utility.yul\":15665:15670   */\n      dup2\n        /* \"#utility.yul\":15662:15663   */\n      0x01\n        /* \"#utility.yul\":15658:15671   */\n      shr\n        /* \"#utility.yul\":15637:15671   */\n      swap1\n      pop\n        /* \"#utility.yul\":15576:15678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15684:16532   */\n    tag_266:\n        /* \"#utility.yul\":15745:15750   */\n      0x00\n        /* \"#utility.yul\":15752:15756   */\n      dup1\n        /* \"#utility.yul\":15776:15782   */\n      dup3\n        /* \"#utility.yul\":15767:15782   */\n      swap2\n      pop\n        /* \"#utility.yul\":15800:15805   */\n      dup4\n        /* \"#utility.yul\":15791:15805   */\n      swap1\n      pop\n        /* \"#utility.yul\":15814:16526   */\n    tag_454:\n        /* \"#utility.yul\":15835:15836   */\n      0x01\n        /* \"#utility.yul\":15825:15833   */\n      dup6\n        /* \"#utility.yul\":15822:15837   */\n      gt\n        /* \"#utility.yul\":15814:16526   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":15930:15934   */\n      dup1\n        /* \"#utility.yul\":15925:15928   */\n      dup7\n        /* \"#utility.yul\":15921:15935   */\n      div\n        /* \"#utility.yul\":15915:15919   */\n      dup2\n        /* \"#utility.yul\":15912:15936   */\n      gt\n        /* \"#utility.yul\":15909:15959   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":15939:15957   */\n      tag_458\n      tag_261\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15909:15959   */\n    tag_457:\n        /* \"#utility.yul\":15989:15990   */\n      0x01\n        /* \"#utility.yul\":15979:15987   */\n      dup6\n        /* \"#utility.yul\":15975:15991   */\n      and\n        /* \"#utility.yul\":15972:16423   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":16404:16408   */\n      dup1\n        /* \"#utility.yul\":16397:16402   */\n      dup3\n        /* \"#utility.yul\":16393:16409   */\n      mul\n        /* \"#utility.yul\":16384:16409   */\n      swap2\n      pop\n        /* \"#utility.yul\":15972:16423   */\n    tag_459:\n        /* \"#utility.yul\":16454:16458   */\n      dup1\n        /* \"#utility.yul\":16448:16452   */\n      dup2\n        /* \"#utility.yul\":16444:16459   */\n      mul\n        /* \"#utility.yul\":16436:16459   */\n      swap1\n      pop\n        /* \"#utility.yul\":16484:16516   */\n      tag_460\n        /* \"#utility.yul\":16507:16515   */\n      dup6\n        /* \"#utility.yul\":16484:16516   */\n      tag_265\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16472:16516   */\n      swap5\n      pop\n        /* \"#utility.yul\":15814:16526   */\n      jump(tag_454)\n    tag_456:\n        /* \"#utility.yul\":15684:16532   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16538:17611   */\n    tag_267:\n        /* \"#utility.yul\":16592:16597   */\n      0x00\n        /* \"#utility.yul\":16783:16791   */\n      dup3\n        /* \"#utility.yul\":16773:16813   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":16804:16805   */\n      0x01\n        /* \"#utility.yul\":16795:16805   */\n      swap1\n      pop\n        /* \"#utility.yul\":16806:16811   */\n      jump(tag_461)\n        /* \"#utility.yul\":16773:16813   */\n    tag_462:\n        /* \"#utility.yul\":16832:16836   */\n      dup2\n        /* \"#utility.yul\":16822:16858   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":16849:16850   */\n      0x00\n        /* \"#utility.yul\":16840:16850   */\n      swap1\n      pop\n        /* \"#utility.yul\":16851:16856   */\n      jump(tag_461)\n        /* \"#utility.yul\":16822:16858   */\n    tag_463:\n        /* \"#utility.yul\":16918:16922   */\n      dup2\n        /* \"#utility.yul\":16966:16967   */\n      0x01\n        /* \"#utility.yul\":16961:16988   */\n      dup2\n      eq\n      tag_465\n      jumpi\n        /* \"#utility.yul\":17002:17003   */\n      0x02\n        /* \"#utility.yul\":16997:17188   */\n      dup2\n      eq\n      tag_466\n      jumpi\n        /* \"#utility.yul\":16911:17188   */\n      jump(tag_464)\n        /* \"#utility.yul\":16961:16988   */\n    tag_465:\n        /* \"#utility.yul\":16979:16980   */\n      0x01\n        /* \"#utility.yul\":16970:16980   */\n      swap2\n      pop\n        /* \"#utility.yul\":16981:16986   */\n      pop\n      jump(tag_461)\n        /* \"#utility.yul\":16997:17188   */\n    tag_466:\n        /* \"#utility.yul\":17042:17045   */\n      0xff\n        /* \"#utility.yul\":17032:17040   */\n      dup5\n        /* \"#utility.yul\":17029:17046   */\n      gt\n        /* \"#utility.yul\":17026:17069   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":17049:17067   */\n      tag_468\n      tag_261\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":17026:17069   */\n    tag_467:\n        /* \"#utility.yul\":17098:17106   */\n      dup4\n        /* \"#utility.yul\":17095:17096   */\n      0x02\n        /* \"#utility.yul\":17091:17107   */\n      exp\n        /* \"#utility.yul\":17082:17107   */\n      swap2\n      pop\n        /* \"#utility.yul\":17133:17136   */\n      dup5\n        /* \"#utility.yul\":17126:17131   */\n      dup3\n        /* \"#utility.yul\":17123:17137   */\n      gt\n        /* \"#utility.yul\":17120:17160   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":17140:17158   */\n      tag_470\n      tag_261\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":17120:17160   */\n    tag_469:\n        /* \"#utility.yul\":17173:17178   */\n      pop\n      jump(tag_461)\n        /* \"#utility.yul\":16911:17188   */\n    tag_464:\n      pop\n        /* \"#utility.yul\":17297:17299   */\n      0x20\n        /* \"#utility.yul\":17287:17295   */\n      dup4\n        /* \"#utility.yul\":17284:17300   */\n      lt\n        /* \"#utility.yul\":17278:17281   */\n      0x0133\n        /* \"#utility.yul\":17272:17276   */\n      dup4\n        /* \"#utility.yul\":17269:17282   */\n      lt\n        /* \"#utility.yul\":17265:17301   */\n      and\n        /* \"#utility.yul\":17247:17249   */\n      0x4e\n        /* \"#utility.yul\":17237:17245   */\n      dup5\n        /* \"#utility.yul\":17234:17250   */\n      lt\n        /* \"#utility.yul\":17229:17231   */\n      0x0b\n        /* \"#utility.yul\":17223:17227   */\n      dup5\n        /* \"#utility.yul\":17220:17232   */\n      lt\n        /* \"#utility.yul\":17216:17251   */\n      and\n        /* \"#utility.yul\":17200:17311   */\n      or\n        /* \"#utility.yul\":17197:17443   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":17353:17361   */\n      dup3\n        /* \"#utility.yul\":17347:17351   */\n      dup3\n        /* \"#utility.yul\":17343:17362   */\n      exp\n        /* \"#utility.yul\":17334:17362   */\n      swap1\n      pop\n        /* \"#utility.yul\":17388:17391   */\n      dup4\n        /* \"#utility.yul\":17381:17386   */\n      dup2\n        /* \"#utility.yul\":17378:17392   */\n      gt\n        /* \"#utility.yul\":17375:17415   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":17395:17413   */\n      tag_473\n      tag_261\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17375:17415   */\n    tag_472:\n        /* \"#utility.yul\":17428:17433   */\n      jump(tag_461)\n        /* \"#utility.yul\":17197:17443   */\n    tag_471:\n        /* \"#utility.yul\":17468:17510   */\n      tag_474\n        /* \"#utility.yul\":17506:17509   */\n      dup5\n        /* \"#utility.yul\":17496:17504   */\n      dup5\n        /* \"#utility.yul\":17490:17494   */\n      dup5\n        /* \"#utility.yul\":17487:17488   */\n      0x01\n        /* \"#utility.yul\":17468:17510   */\n      tag_266\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17453:17510   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":17542:17546   */\n      dup2\n        /* \"#utility.yul\":17537:17540   */\n      dup5\n        /* \"#utility.yul\":17533:17547   */\n      div\n        /* \"#utility.yul\":17526:17531   */\n      dup2\n        /* \"#utility.yul\":17523:17548   */\n      gt\n        /* \"#utility.yul\":17520:17571   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":17551:17569   */\n      tag_476\n      tag_261\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17520:17571   */\n    tag_475:\n        /* \"#utility.yul\":17600:17604   */\n      dup2\n        /* \"#utility.yul\":17593:17598   */\n      dup2\n        /* \"#utility.yul\":17589:17605   */\n      mul\n        /* \"#utility.yul\":17580:17605   */\n      swap1\n      pop\n        /* \"#utility.yul\":16538:17611   */\n    tag_461:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17617:17898   */\n    tag_118:\n        /* \"#utility.yul\":17675:17680   */\n      0x00\n        /* \"#utility.yul\":17699:17722   */\n      tag_478\n        /* \"#utility.yul\":17717:17721   */\n      dup3\n        /* \"#utility.yul\":17699:17722   */\n      tag_231\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17691:17722   */\n      swap2\n      pop\n        /* \"#utility.yul\":17743:17768   */\n      tag_479\n        /* \"#utility.yul\":17759:17767   */\n      dup4\n        /* \"#utility.yul\":17743:17768   */\n      tag_234\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17731:17768   */\n      swap3\n      pop\n        /* \"#utility.yul\":17787:17891   */\n      tag_480\n        /* \"#utility.yul\":17824:17890   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17814:17822   */\n      dup5\n        /* \"#utility.yul\":17808:17812   */\n      dup5\n        /* \"#utility.yul\":17787:17891   */\n      tag_267\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17778:17891   */\n      swap1\n      pop\n        /* \"#utility.yul\":17617:17898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17904:18022   */\n    tag_268:\n        /* \"#utility.yul\":17991:18015   */\n      tag_482\n        /* \"#utility.yul\":18009:18014   */\n      dup2\n        /* \"#utility.yul\":17991:18015   */\n      tag_231\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17986:17989   */\n      dup3\n        /* \"#utility.yul\":17979:18016   */\n      mstore\n        /* \"#utility.yul\":17904:18022   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18028:18470   */\n    tag_126:\n        /* \"#utility.yul\":18177:18181   */\n      0x00\n        /* \"#utility.yul\":18215:18217   */\n      0x60\n        /* \"#utility.yul\":18204:18213   */\n      dup3\n        /* \"#utility.yul\":18200:18218   */\n      add\n        /* \"#utility.yul\":18192:18218   */\n      swap1\n      pop\n        /* \"#utility.yul\":18228:18299   */\n      tag_484\n        /* \"#utility.yul\":18296:18297   */\n      0x00\n        /* \"#utility.yul\":18285:18294   */\n      dup4\n        /* \"#utility.yul\":18281:18298   */\n      add\n        /* \"#utility.yul\":18272:18278   */\n      dup7\n        /* \"#utility.yul\":18228:18299   */\n      tag_268\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":18309:18381   */\n      tag_485\n        /* \"#utility.yul\":18377:18379   */\n      0x20\n        /* \"#utility.yul\":18366:18375   */\n      dup4\n        /* \"#utility.yul\":18362:18380   */\n      add\n        /* \"#utility.yul\":18353:18359   */\n      dup6\n        /* \"#utility.yul\":18309:18381   */\n      tag_268\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18391:18463   */\n      tag_486\n        /* \"#utility.yul\":18459:18461   */\n      0x40\n        /* \"#utility.yul\":18448:18457   */\n      dup4\n        /* \"#utility.yul\":18444:18462   */\n      add\n        /* \"#utility.yul\":18435:18441   */\n      dup5\n        /* \"#utility.yul\":18391:18463   */\n      tag_268\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":18028:18470   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18476:18827   */\n    tag_130:\n        /* \"#utility.yul\":18546:18552   */\n      0x00\n        /* \"#utility.yul\":18595:18597   */\n      0x20\n        /* \"#utility.yul\":18583:18592   */\n      dup3\n        /* \"#utility.yul\":18574:18581   */\n      dup5\n        /* \"#utility.yul\":18570:18593   */\n      sub\n        /* \"#utility.yul\":18566:18598   */\n      slt\n        /* \"#utility.yul\":18563:18682   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":18601:18680   */\n      tag_489\n      tag_215\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18563:18682   */\n    tag_488:\n        /* \"#utility.yul\":18721:18722   */\n      0x00\n        /* \"#utility.yul\":18746:18810   */\n      tag_490\n        /* \"#utility.yul\":18802:18809   */\n      dup5\n        /* \"#utility.yul\":18793:18799   */\n      dup3\n        /* \"#utility.yul\":18782:18791   */\n      dup6\n        /* \"#utility.yul\":18778:18800   */\n      add\n        /* \"#utility.yul\":18746:18810   */\n      tag_262\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18736:18810   */\n      swap2\n      pop\n        /* \"#utility.yul\":18692:18820   */\n      pop\n        /* \"#utility.yul\":18476:18827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18833:18976   */\n    tag_269:\n        /* \"#utility.yul\":18890:18895   */\n      0x00\n        /* \"#utility.yul\":18921:18927   */\n      dup2\n        /* \"#utility.yul\":18915:18928   */\n      mload\n        /* \"#utility.yul\":18906:18928   */\n      swap1\n      pop\n        /* \"#utility.yul\":18937:18970   */\n      tag_492\n        /* \"#utility.yul\":18964:18969   */\n      dup2\n        /* \"#utility.yul\":18937:18970   */\n      tag_225\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18833:18976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18982:19333   */\n    tag_155:\n        /* \"#utility.yul\":19052:19058   */\n      0x00\n        /* \"#utility.yul\":19101:19103   */\n      0x20\n        /* \"#utility.yul\":19089:19098   */\n      dup3\n        /* \"#utility.yul\":19080:19087   */\n      dup5\n        /* \"#utility.yul\":19076:19099   */\n      sub\n        /* \"#utility.yul\":19072:19104   */\n      slt\n        /* \"#utility.yul\":19069:19188   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":19107:19186   */\n      tag_495\n      tag_215\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19069:19188   */\n    tag_494:\n        /* \"#utility.yul\":19227:19228   */\n      0x00\n        /* \"#utility.yul\":19252:19316   */\n      tag_496\n        /* \"#utility.yul\":19308:19315   */\n      dup5\n        /* \"#utility.yul\":19299:19305   */\n      dup3\n        /* \"#utility.yul\":19288:19297   */\n      dup6\n        /* \"#utility.yul\":19284:19306   */\n      add\n        /* \"#utility.yul\":19252:19316   */\n      tag_269\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19242:19316   */\n      swap2\n      pop\n        /* \"#utility.yul\":19198:19326   */\n      pop\n        /* \"#utility.yul\":18982:19333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19339:19453   */\n    tag_270:\n        /* \"#utility.yul\":19376:19383   */\n      0x00\n        /* \"#utility.yul\":19416:19446   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19409:19414   */\n      dup3\n        /* \"#utility.yul\":19405:19447   */\n      and\n        /* \"#utility.yul\":19394:19447   */\n      swap1\n      pop\n        /* \"#utility.yul\":19339:19453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19459:19581   */\n    tag_271:\n        /* \"#utility.yul\":19532:19556   */\n      tag_499\n        /* \"#utility.yul\":19550:19555   */\n      dup2\n        /* \"#utility.yul\":19532:19556   */\n      tag_270\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19525:19530   */\n      dup2\n        /* \"#utility.yul\":19522:19557   */\n      eq\n        /* \"#utility.yul\":19512:19575   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":19571:19572   */\n      0x00\n        /* \"#utility.yul\":19568:19569   */\n      dup1\n        /* \"#utility.yul\":19561:19573   */\n      revert\n        /* \"#utility.yul\":19512:19575   */\n    tag_500:\n        /* \"#utility.yul\":19459:19581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19587:19730   */\n    tag_272:\n        /* \"#utility.yul\":19644:19649   */\n      0x00\n        /* \"#utility.yul\":19675:19681   */\n      dup2\n        /* \"#utility.yul\":19669:19682   */\n      mload\n        /* \"#utility.yul\":19660:19682   */\n      swap1\n      pop\n        /* \"#utility.yul\":19691:19724   */\n      tag_502\n        /* \"#utility.yul\":19718:19723   */\n      dup2\n        /* \"#utility.yul\":19691:19724   */\n      tag_271\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19587:19730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19736:19829   */\n    tag_273:\n        /* \"#utility.yul\":19772:19779   */\n      0x00\n        /* \"#utility.yul\":19812:19822   */\n      0xffffffff\n        /* \"#utility.yul\":19805:19810   */\n      dup3\n        /* \"#utility.yul\":19801:19823   */\n      and\n        /* \"#utility.yul\":19790:19823   */\n      swap1\n      pop\n        /* \"#utility.yul\":19736:19829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19835:19955   */\n    tag_274:\n        /* \"#utility.yul\":19907:19930   */\n      tag_505\n        /* \"#utility.yul\":19924:19929   */\n      dup2\n        /* \"#utility.yul\":19907:19930   */\n      tag_273\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":19900:19905   */\n      dup2\n        /* \"#utility.yul\":19897:19931   */\n      eq\n        /* \"#utility.yul\":19887:19949   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":19945:19946   */\n      0x00\n        /* \"#utility.yul\":19942:19943   */\n      dup1\n        /* \"#utility.yul\":19935:19947   */\n      revert\n        /* \"#utility.yul\":19887:19949   */\n    tag_506:\n        /* \"#utility.yul\":19835:19955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19961:20102   */\n    tag_275:\n        /* \"#utility.yul\":20017:20022   */\n      0x00\n        /* \"#utility.yul\":20048:20054   */\n      dup2\n        /* \"#utility.yul\":20042:20055   */\n      mload\n        /* \"#utility.yul\":20033:20055   */\n      swap1\n      pop\n        /* \"#utility.yul\":20064:20096   */\n      tag_508\n        /* \"#utility.yul\":20090:20095   */\n      dup2\n        /* \"#utility.yul\":20064:20096   */\n      tag_274\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19961:20102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20108:20769   */\n    tag_165:\n        /* \"#utility.yul\":20195:20201   */\n      0x00\n        /* \"#utility.yul\":20203:20209   */\n      dup1\n        /* \"#utility.yul\":20211:20217   */\n      0x00\n        /* \"#utility.yul\":20260:20262   */\n      0x60\n        /* \"#utility.yul\":20248:20257   */\n      dup5\n        /* \"#utility.yul\":20239:20246   */\n      dup7\n        /* \"#utility.yul\":20235:20258   */\n      sub\n        /* \"#utility.yul\":20231:20263   */\n      slt\n        /* \"#utility.yul\":20228:20347   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":20266:20345   */\n      tag_511\n      tag_215\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":20228:20347   */\n    tag_510:\n        /* \"#utility.yul\":20386:20387   */\n      0x00\n        /* \"#utility.yul\":20411:20475   */\n      tag_512\n        /* \"#utility.yul\":20467:20474   */\n      dup7\n        /* \"#utility.yul\":20458:20464   */\n      dup3\n        /* \"#utility.yul\":20447:20456   */\n      dup8\n        /* \"#utility.yul\":20443:20465   */\n      add\n        /* \"#utility.yul\":20411:20475   */\n      tag_272\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":20401:20475   */\n      swap4\n      pop\n        /* \"#utility.yul\":20357:20485   */\n      pop\n        /* \"#utility.yul\":20524:20526   */\n      0x20\n        /* \"#utility.yul\":20550:20614   */\n      tag_513\n        /* \"#utility.yul\":20606:20613   */\n      dup7\n        /* \"#utility.yul\":20597:20603   */\n      dup3\n        /* \"#utility.yul\":20586:20595   */\n      dup8\n        /* \"#utility.yul\":20582:20604   */\n      add\n        /* \"#utility.yul\":20550:20614   */\n      tag_272\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":20540:20614   */\n      swap3\n      pop\n        /* \"#utility.yul\":20495:20624   */\n      pop\n        /* \"#utility.yul\":20663:20665   */\n      0x40\n        /* \"#utility.yul\":20689:20752   */\n      tag_514\n        /* \"#utility.yul\":20744:20751   */\n      dup7\n        /* \"#utility.yul\":20735:20741   */\n      dup3\n        /* \"#utility.yul\":20724:20733   */\n      dup8\n        /* \"#utility.yul\":20720:20742   */\n      add\n        /* \"#utility.yul\":20689:20752   */\n      tag_275\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20679:20752   */\n      swap2\n      pop\n        /* \"#utility.yul\":20634:20762   */\n      pop\n        /* \"#utility.yul\":20108:20769   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":20775:21107   */\n    tag_177:\n        /* \"#utility.yul\":20896:20900   */\n      0x00\n        /* \"#utility.yul\":20934:20936   */\n      0x40\n        /* \"#utility.yul\":20923:20932   */\n      dup3\n        /* \"#utility.yul\":20919:20937   */\n      add\n        /* \"#utility.yul\":20911:20937   */\n      swap1\n      pop\n        /* \"#utility.yul\":20947:21018   */\n      tag_516\n        /* \"#utility.yul\":21015:21016   */\n      0x00\n        /* \"#utility.yul\":21004:21013   */\n      dup4\n        /* \"#utility.yul\":21000:21017   */\n      add\n        /* \"#utility.yul\":20991:20997   */\n      dup6\n        /* \"#utility.yul\":20947:21018   */\n      tag_258\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21028:21100   */\n      tag_517\n        /* \"#utility.yul\":21096:21098   */\n      0x20\n        /* \"#utility.yul\":21085:21094   */\n      dup4\n        /* \"#utility.yul\":21081:21099   */\n      add\n        /* \"#utility.yul\":21072:21078   */\n      dup5\n        /* \"#utility.yul\":21028:21100   */\n      tag_258\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":20775:21107   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21113:21225   */\n    tag_276:\n        /* \"#utility.yul\":21196:21218   */\n      tag_519\n        /* \"#utility.yul\":21212:21217   */\n      dup2\n        /* \"#utility.yul\":21196:21218   */\n      tag_234\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":21191:21194   */\n      dup3\n        /* \"#utility.yul\":21184:21219   */\n      mstore\n        /* \"#utility.yul\":21113:21225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21231:21675   */\n    tag_196:\n        /* \"#utility.yul\":21408:21412   */\n      0x00\n        /* \"#utility.yul\":21446:21448   */\n      0x60\n        /* \"#utility.yul\":21435:21444   */\n      dup3\n        /* \"#utility.yul\":21431:21449   */\n      add\n        /* \"#utility.yul\":21423:21449   */\n      swap1\n      pop\n        /* \"#utility.yul\":21459:21590   */\n      tag_521\n        /* \"#utility.yul\":21587:21588   */\n      0x00\n        /* \"#utility.yul\":21576:21585   */\n      dup4\n        /* \"#utility.yul\":21572:21589   */\n      add\n        /* \"#utility.yul\":21563:21569   */\n      dup6\n        /* \"#utility.yul\":21459:21590   */\n      tag_240\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":21600:21668   */\n      tag_522\n        /* \"#utility.yul\":21664:21666   */\n      0x40\n        /* \"#utility.yul\":21653:21662   */\n      dup4\n        /* \"#utility.yul\":21649:21667   */\n      add\n        /* \"#utility.yul\":21640:21646   */\n      dup5\n        /* \"#utility.yul\":21600:21668   */\n      tag_276\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21231:21675   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21681:21795   */\n    tag_277:\n        /* \"#utility.yul\":21748:21754   */\n      0x00\n        /* \"#utility.yul\":21782:21787   */\n      dup2\n        /* \"#utility.yul\":21776:21788   */\n      mload\n        /* \"#utility.yul\":21766:21788   */\n      swap1\n      pop\n        /* \"#utility.yul\":21681:21795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21801:21985   */\n    tag_278:\n        /* \"#utility.yul\":21900:21911   */\n      0x00\n        /* \"#utility.yul\":21934:21940   */\n      dup3\n        /* \"#utility.yul\":21929:21932   */\n      dup3\n        /* \"#utility.yul\":21922:21941   */\n      mstore\n        /* \"#utility.yul\":21974:21978   */\n      0x20\n        /* \"#utility.yul\":21969:21972   */\n      dup3\n        /* \"#utility.yul\":21965:21979   */\n      add\n        /* \"#utility.yul\":21950:21979   */\n      swap1\n      pop\n        /* \"#utility.yul\":21801:21985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21991:22123   */\n    tag_279:\n        /* \"#utility.yul\":22058:22062   */\n      0x00\n        /* \"#utility.yul\":22081:22084   */\n      dup2\n        /* \"#utility.yul\":22073:22084   */\n      swap1\n      pop\n        /* \"#utility.yul\":22111:22115   */\n      0x20\n        /* \"#utility.yul\":22106:22109   */\n      dup3\n        /* \"#utility.yul\":22102:22116   */\n      add\n        /* \"#utility.yul\":22094:22116   */\n      swap1\n      pop\n        /* \"#utility.yul\":21991:22123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22129:22237   */\n    tag_280:\n        /* \"#utility.yul\":22206:22230   */\n      tag_527\n        /* \"#utility.yul\":22224:22229   */\n      dup2\n        /* \"#utility.yul\":22206:22230   */\n      tag_224\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":22201:22204   */\n      dup3\n        /* \"#utility.yul\":22194:22231   */\n      mstore\n        /* \"#utility.yul\":22129:22237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22243:22422   */\n    tag_281:\n        /* \"#utility.yul\":22312:22322   */\n      0x00\n        /* \"#utility.yul\":22333:22379   */\n      tag_529\n        /* \"#utility.yul\":22375:22378   */\n      dup4\n        /* \"#utility.yul\":22367:22373   */\n      dup4\n        /* \"#utility.yul\":22333:22379   */\n      tag_280\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":22411:22415   */\n      0x20\n        /* \"#utility.yul\":22406:22409   */\n      dup4\n        /* \"#utility.yul\":22402:22416   */\n      add\n        /* \"#utility.yul\":22388:22416   */\n      swap1\n      pop\n        /* \"#utility.yul\":22243:22422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22428:22541   */\n    tag_282:\n        /* \"#utility.yul\":22498:22502   */\n      0x00\n        /* \"#utility.yul\":22530:22534   */\n      0x20\n        /* \"#utility.yul\":22525:22528   */\n      dup3\n        /* \"#utility.yul\":22521:22535   */\n      add\n        /* \"#utility.yul\":22513:22535   */\n      swap1\n      pop\n        /* \"#utility.yul\":22428:22541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22577:23309   */\n    tag_283:\n        /* \"#utility.yul\":22696:22699   */\n      0x00\n        /* \"#utility.yul\":22725:22779   */\n      tag_532\n        /* \"#utility.yul\":22773:22778   */\n      dup3\n        /* \"#utility.yul\":22725:22779   */\n      tag_277\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":22795:22881   */\n      tag_533\n        /* \"#utility.yul\":22874:22880   */\n      dup2\n        /* \"#utility.yul\":22869:22872   */\n      dup6\n        /* \"#utility.yul\":22795:22881   */\n      tag_278\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":22788:22881   */\n      swap4\n      pop\n        /* \"#utility.yul\":22905:22961   */\n      tag_534\n        /* \"#utility.yul\":22955:22960   */\n      dup4\n        /* \"#utility.yul\":22905:22961   */\n      tag_279\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":22984:22991   */\n      dup1\n        /* \"#utility.yul\":23015:23016   */\n      0x00\n        /* \"#utility.yul\":23000:23284   */\n    tag_535:\n        /* \"#utility.yul\":23025:23031   */\n      dup4\n        /* \"#utility.yul\":23022:23023   */\n      dup2\n        /* \"#utility.yul\":23019:23032   */\n      lt\n        /* \"#utility.yul\":23000:23284   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":23101:23107   */\n      dup2\n        /* \"#utility.yul\":23095:23108   */\n      mload\n        /* \"#utility.yul\":23128:23191   */\n      tag_538\n        /* \"#utility.yul\":23187:23190   */\n      dup9\n        /* \"#utility.yul\":23172:23185   */\n      dup3\n        /* \"#utility.yul\":23128:23191   */\n      tag_281\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":23121:23191   */\n      swap8\n      pop\n        /* \"#utility.yul\":23214:23274   */\n      tag_539\n        /* \"#utility.yul\":23267:23273   */\n      dup4\n        /* \"#utility.yul\":23214:23274   */\n      tag_282\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":23204:23274   */\n      swap3\n      pop\n        /* \"#utility.yul\":23060:23284   */\n      pop\n        /* \"#utility.yul\":23047:23048   */\n      0x01\n        /* \"#utility.yul\":23044:23045   */\n      dup2\n        /* \"#utility.yul\":23040:23049   */\n      add\n        /* \"#utility.yul\":23035:23049   */\n      swap1\n      pop\n        /* \"#utility.yul\":23000:23284   */\n      jump(tag_535)\n    tag_537:\n        /* \"#utility.yul\":23004:23018   */\n      pop\n        /* \"#utility.yul\":23300:23303   */\n      dup6\n        /* \"#utility.yul\":23293:23303   */\n      swap4\n      pop\n        /* \"#utility.yul\":22701:23309   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22577:23309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23315:23798   */\n    tag_201:\n        /* \"#utility.yul\":23486:23490   */\n      0x00\n        /* \"#utility.yul\":23524:23526   */\n      0x40\n        /* \"#utility.yul\":23513:23522   */\n      dup3\n        /* \"#utility.yul\":23509:23527   */\n      add\n        /* \"#utility.yul\":23501:23527   */\n      swap1\n      pop\n        /* \"#utility.yul\":23537:23608   */\n      tag_541\n        /* \"#utility.yul\":23605:23606   */\n      0x00\n        /* \"#utility.yul\":23594:23603   */\n      dup4\n        /* \"#utility.yul\":23590:23607   */\n      add\n        /* \"#utility.yul\":23581:23587   */\n      dup6\n        /* \"#utility.yul\":23537:23608   */\n      tag_268\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":23655:23664   */\n      dup2\n        /* \"#utility.yul\":23649:23653   */\n      dup2\n        /* \"#utility.yul\":23645:23665   */\n      sub\n        /* \"#utility.yul\":23640:23642   */\n      0x20\n        /* \"#utility.yul\":23629:23638   */\n      dup4\n        /* \"#utility.yul\":23625:23643   */\n      add\n        /* \"#utility.yul\":23618:23666   */\n      mstore\n        /* \"#utility.yul\":23683:23791   */\n      tag_542\n        /* \"#utility.yul\":23786:23790   */\n      dup2\n        /* \"#utility.yul\":23777:23783   */\n      dup5\n        /* \"#utility.yul\":23683:23791   */\n      tag_283\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":23675:23791   */\n      swap1\n      pop\n        /* \"#utility.yul\":23315:23798   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23804:24115   */\n    tag_284:\n        /* \"#utility.yul\":23881:23885   */\n      0x00\n        /* \"#utility.yul\":23971:23989   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23963:23969   */\n      dup3\n        /* \"#utility.yul\":23960:23990   */\n      gt\n        /* \"#utility.yul\":23957:24013   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":23993:24011   */\n      tag_545\n      tag_159\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":23957:24013   */\n    tag_544:\n        /* \"#utility.yul\":24043:24047   */\n      0x20\n        /* \"#utility.yul\":24035:24041   */\n      dup3\n        /* \"#utility.yul\":24031:24048   */\n      mul\n        /* \"#utility.yul\":24023:24048   */\n      swap1\n      pop\n        /* \"#utility.yul\":24103:24107   */\n      0x20\n        /* \"#utility.yul\":24097:24101   */\n      dup2\n        /* \"#utility.yul\":24093:24108   */\n      add\n        /* \"#utility.yul\":24085:24108   */\n      swap1\n      pop\n        /* \"#utility.yul\":23804:24115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24138:24870   */\n    tag_285:\n        /* \"#utility.yul\":24245:24250   */\n      0x00\n        /* \"#utility.yul\":24270:24351   */\n      tag_547\n        /* \"#utility.yul\":24286:24350   */\n      tag_548\n        /* \"#utility.yul\":24343:24349   */\n      dup5\n        /* \"#utility.yul\":24286:24350   */\n      tag_284\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":24270:24351   */\n      tag_220\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":24261:24351   */\n      swap1\n      pop\n        /* \"#utility.yul\":24371:24376   */\n      dup1\n        /* \"#utility.yul\":24400:24406   */\n      dup4\n        /* \"#utility.yul\":24393:24398   */\n      dup3\n        /* \"#utility.yul\":24386:24407   */\n      mstore\n        /* \"#utility.yul\":24434:24438   */\n      0x20\n        /* \"#utility.yul\":24427:24432   */\n      dup3\n        /* \"#utility.yul\":24423:24439   */\n      add\n        /* \"#utility.yul\":24416:24439   */\n      swap1\n      pop\n        /* \"#utility.yul\":24487:24491   */\n      0x20\n        /* \"#utility.yul\":24479:24485   */\n      dup5\n        /* \"#utility.yul\":24475:24492   */\n      mul\n        /* \"#utility.yul\":24467:24473   */\n      dup4\n        /* \"#utility.yul\":24463:24493   */\n      add\n        /* \"#utility.yul\":24516:24519   */\n      dup6\n        /* \"#utility.yul\":24508:24514   */\n      dup2\n        /* \"#utility.yul\":24505:24520   */\n      gt\n        /* \"#utility.yul\":24502:24624   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":24535:24614   */\n      tag_550\n      tag_222\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":24502:24624   */\n    tag_549:\n        /* \"#utility.yul\":24650:24656   */\n      dup4\n        /* \"#utility.yul\":24633:24864   */\n    tag_551:\n        /* \"#utility.yul\":24667:24673   */\n      dup2\n        /* \"#utility.yul\":24662:24665   */\n      dup2\n        /* \"#utility.yul\":24659:24674   */\n      lt\n        /* \"#utility.yul\":24633:24864   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":24742:24745   */\n      dup1\n        /* \"#utility.yul\":24771:24819   */\n      tag_554\n        /* \"#utility.yul\":24815:24818   */\n      dup9\n        /* \"#utility.yul\":24803:24813   */\n      dup3\n        /* \"#utility.yul\":24771:24819   */\n      tag_262\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":24766:24769   */\n      dup5\n        /* \"#utility.yul\":24759:24820   */\n      mstore\n        /* \"#utility.yul\":24849:24853   */\n      0x20\n        /* \"#utility.yul\":24844:24847   */\n      dup5\n        /* \"#utility.yul\":24840:24854   */\n      add\n        /* \"#utility.yul\":24833:24854   */\n      swap4\n      pop\n        /* \"#utility.yul\":24709:24864   */\n      pop\n        /* \"#utility.yul\":24693:24697   */\n      0x20\n        /* \"#utility.yul\":24688:24691   */\n      dup2\n        /* \"#utility.yul\":24684:24698   */\n      add\n        /* \"#utility.yul\":24677:24698   */\n      swap1\n      pop\n        /* \"#utility.yul\":24633:24864   */\n      jump(tag_551)\n    tag_553:\n        /* \"#utility.yul\":24637:24658   */\n      pop\n        /* \"#utility.yul\":24251:24870   */\n      pop\n      pop\n        /* \"#utility.yul\":24138:24870   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24893:25278   */\n    tag_286:\n        /* \"#utility.yul\":24975:24980   */\n      0x00\n        /* \"#utility.yul\":25024:25027   */\n      dup3\n        /* \"#utility.yul\":25017:25021   */\n      0x1f\n        /* \"#utility.yul\":25009:25015   */\n      dup4\n        /* \"#utility.yul\":25005:25022   */\n      add\n        /* \"#utility.yul\":25001:25028   */\n      slt\n        /* \"#utility.yul\":24991:25113   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":25032:25111   */\n      tag_557\n      tag_217\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":24991:25113   */\n    tag_556:\n        /* \"#utility.yul\":25142:25148   */\n      dup2\n        /* \"#utility.yul\":25136:25149   */\n      mload\n        /* \"#utility.yul\":25167:25272   */\n      tag_558\n        /* \"#utility.yul\":25268:25271   */\n      dup5\n        /* \"#utility.yul\":25260:25266   */\n      dup3\n        /* \"#utility.yul\":25253:25257   */\n      0x20\n        /* \"#utility.yul\":25245:25251   */\n      dup7\n        /* \"#utility.yul\":25241:25258   */\n      add\n        /* \"#utility.yul\":25167:25272   */\n      tag_285\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":25158:25272   */\n      swap2\n      pop\n        /* \"#utility.yul\":24981:25278   */\n      pop\n        /* \"#utility.yul\":24893:25278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25284:25838   */\n    tag_205:\n        /* \"#utility.yul\":25379:25385   */\n      0x00\n        /* \"#utility.yul\":25428:25430   */\n      0x20\n        /* \"#utility.yul\":25416:25425   */\n      dup3\n        /* \"#utility.yul\":25407:25414   */\n      dup5\n        /* \"#utility.yul\":25403:25426   */\n      sub\n        /* \"#utility.yul\":25399:25431   */\n      slt\n        /* \"#utility.yul\":25396:25515   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":25434:25513   */\n      tag_561\n      tag_215\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":25396:25515   */\n    tag_560:\n        /* \"#utility.yul\":25575:25576   */\n      0x00\n        /* \"#utility.yul\":25564:25573   */\n      dup3\n        /* \"#utility.yul\":25560:25577   */\n      add\n        /* \"#utility.yul\":25554:25578   */\n      mload\n        /* \"#utility.yul\":25605:25623   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25597:25603   */\n      dup2\n        /* \"#utility.yul\":25594:25624   */\n      gt\n        /* \"#utility.yul\":25591:25708   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":25627:25706   */\n      tag_563\n      tag_216\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":25591:25708   */\n    tag_562:\n        /* \"#utility.yul\":25732:25821   */\n      tag_564\n        /* \"#utility.yul\":25813:25820   */\n      dup5\n        /* \"#utility.yul\":25804:25810   */\n      dup3\n        /* \"#utility.yul\":25793:25802   */\n      dup6\n        /* \"#utility.yul\":25789:25811   */\n      add\n        /* \"#utility.yul\":25732:25821   */\n      tag_286\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":25722:25821   */\n      swap2\n      pop\n        /* \"#utility.yul\":25525:25831   */\n      pop\n        /* \"#utility.yul\":25284:25838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f72a3fac39326b4525c178d3afdec557073cfb97bf9e58007b65c6f097bbeb2664736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "956:552:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:32:10"
															},
															"nodeType": "YulIf",
															"src": "966:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1139:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1233:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1278:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1417:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "933:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "941:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "949:6:10",
														"type": ""
													}
												],
												"src": "845:663:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620020913803806200209183398181016040528101906200003791906200016c565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001348262000107565b9050919050565b620001468162000127565b81146200015257600080fd5b50565b60008151905062000166816200013b565b92915050565b60008060006060848603121562000188576200018762000102565b5b6000620001988682870162000155565b9350506020620001ab8682870162000155565b9250506040620001be8682870162000155565b9150509250925092565b611eb980620001d86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b09cd0c311610071578063b09cd0c31461018c578063be83cb79146101bc578063c45a0155146101ec578063ceca05ab1461020a578063f61623171461023a578063f887ea401461026a576100a9565b80630d186819146100ae57806314c758d9146100de5780632b00490d146100fc57806341b298951461012c5780637dd927871461015c575b600080fd5b6100c860048036038101906100c3919061142e565b610288565b6040516100d591906114d7565b60405180910390f35b6100e66105fc565b6040516100f39190611551565b60405180910390f35b6101166004803603810190610111919061156c565b610625565b60405161012391906114d7565b60405180910390f35b6101466004803603810190610141919061156c565b610acf565b60405161015391906115c7565b60405180910390f35b6101766004803603810190610171919061156c565b610b7f565b6040516101839190611691565b60405180910390f35b6101a660048036038101906101a1919061156c565b610cb7565b6040516101b391906115c7565b60405180910390f35b6101d660048036038101906101d1919061156c565b610cf9565b6040516101e391906116d4565b60405180910390f35b6101f4610d0d565b6040516102019190611710565b60405180910390f35b610224600480360381019061021f919061156c565b610d37565b604051610231919061173a565b60405180910390f35b610254600480360381019061024f919061142e565b610ddf565b60405161026191906114d7565b60405180910390f35b610272611158565b60405161027f9190611776565b60405180910390f35b610290611182565b60008061029b611182565b6102a3611182565b6102ab611182565b876000815181106102bf576102be611791565b5b6020026020010151945087600189516102d891906117ef565b815181106102e9576102e8611791565b5b6020026020010151935060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0886040518263ffffffff1660e01b815260040161034c91906114d7565b6040805180830381865afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c919061189d565b965060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7e7c9f9886103d58888610625565b6040518363ffffffff1660e01b81526004016103f29291906118ca565b6040805180830381865afa15801561040e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610432919061189d565b925061043e8888610ddf565b9150600083600001511480610457575060008260000151145b1561048257604051806040016040528060008152602001601260ff16815250955050505050506105f6565b82600001518260000151106105505760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e060405180604001604052806127108152602001600060ff168152506040518263ffffffff1660e01b815260040161050491906114d7565b6040805180830381865afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061189d565b955050505050506105f6565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e51356e883856040518363ffffffff1660e01b81526004016105ab9291906118ca565b6040805180830381865afa1580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb919061189d565b905080955050505050505b92915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61062d611182565b600080600061063a611182565b8673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a991906118f3565b93508573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a91906118f3565b92506107268787610cb7565b1561075057604051806040016040528060008152602001601260ff16815250945050505050610ac9565b61075a8787610acf565b1561091657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad615dec85600a6107aa9190611a53565b6107b48a8a610b7f565b6000815181106107c7576107c6611791565b5b60200260200101516107d98b8b610b7f565b6001815181106107ec576107eb611791565b5b60200260200101516040518463ffffffff1660e01b815260040161081293929190611aad565b602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190611ae4565b915060405180604001604052808381526020018460ff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0826040518263ffffffff1660e01b81526004016108c891906114d7565b6040805180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061189d565b905080945050505050610ac9565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad615dec84600a6109619190611a53565b61096b8a8a610b7f565b60018151811061097e5761097d611791565b5b60200260200101516109908b8b610b7f565b6000815181106109a3576109a2611791565b5b60200260200101516040518463ffffffff1660e01b81526004016109c993929190611aad565b602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190611ae4565b915060405180604001604052808381526020018460ff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0826040518263ffffffff1660e01b8152600401610a7f91906114d7565b6040805180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061189d565b9050809450505050505b92915050565b6000610adb8383610cf9565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b499190611b26565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614905092915050565b606080600267ffffffffffffffff811115610b9d57610b9c6111c9565b5b604051908082528060200260200182016040528015610bcb5781602001602082028036833780820191505090505b509050610bd88484610cf9565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c469190611bd5565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff1691505082600081518110610c8157610c80611791565b5b6020026020010183600181518110610c9c57610c9b611791565b5b60200260200101828152508281525050508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16610cda8484610d37565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000610d058383610d37565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401610d96929190611c28565b602060405180830381865afa158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd79190611b26565b905092915050565b610de7611182565b60008060008060606000610df9611182565b89600081518110610e0d57610e0c611791565b5b602002602001015196508960018b51610e2691906117ef565b81518110610e3757610e36611791565b5b602002602001015195508673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb091906118f3565b94508573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2191906118f3565b935060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d02ebf48a876040518363ffffffff1660e01b8152600401610f7e929190611c60565b6040805180830381865afa158015610f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbe919061189d565b9850600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8a600001518c6040518363ffffffff1660e01b8152600401611021929190611d47565b600060405180830381865afa15801561103e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110679190611e3a565b9250826001845161107891906117ef565b8151811061108957611088611791565b5b6020026020010151915060405180604001604052808381526020018560ff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0826040518263ffffffff1660e01b815260040161110691906114d7565b6040805180830381865afa158015611122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611146919061189d565b90508097505050505050505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b604051806040016040528060008152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611201826111b8565b810181811067ffffffffffffffff821117156112205761121f6111c9565b5b80604052505050565b600061123361119f565b905061123f82826111f8565b919050565b600067ffffffffffffffff82111561125f5761125e6111c9565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112a082611275565b9050919050565b6112b081611295565b81146112bb57600080fd5b50565b6000813590506112cd816112a7565b92915050565b60006112e66112e184611244565b611229565b9050808382526020820190506020840283018581111561130957611308611270565b5b835b81811015611332578061131e88826112be565b84526020840193505060208101905061130b565b5050509392505050565b600082601f830112611351576113506111b3565b5b81356113618482602086016112d3565b91505092915050565b600080fd5b6000819050919050565b6113828161136f565b811461138d57600080fd5b50565b60008135905061139f81611379565b92915050565b600060ff82169050919050565b6113bb816113a5565b81146113c657600080fd5b50565b6000813590506113d8816113b2565b92915050565b6000604082840312156113f4576113f361136a565b5b6113fe6040611229565b9050600061140e84828501611390565b6000830152506020611422848285016113c9565b60208301525092915050565b60008060608385031215611445576114446111a9565b5b600083013567ffffffffffffffff811115611463576114626111ae565b5b61146f8582860161133c565b9250506020611480858286016113de565b9150509250929050565b6114938161136f565b82525050565b6114a2816113a5565b82525050565b6040820160008201516114be600085018261148a565b5060208201516114d16020850182611499565b50505050565b60006040820190506114ec60008301846114a8565b92915050565b6000819050919050565b600061151761151261150d84611275565b6114f2565b611275565b9050919050565b6000611529826114fc565b9050919050565b600061153b8261151e565b9050919050565b61154b81611530565b82525050565b60006020820190506115666000830184611542565b92915050565b60008060408385031215611583576115826111a9565b5b6000611591858286016112be565b92505060206115a2858286016112be565b9150509250929050565b60008115159050919050565b6115c1816115ac565b82525050565b60006020820190506115dc60008301846115b8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061161a838361148a565b60208301905092915050565b6000602082019050919050565b600061163e826115e2565b61164881856115ed565b9350611653836115fe565b8060005b8381101561168457815161166b888261160e565b975061167683611626565b925050600181019050611657565b5085935050505092915050565b600060208201905081810360008301526116ab8184611633565b905092915050565b60006116be8261151e565b9050919050565b6116ce816116b3565b82525050565b60006020820190506116e960008301846116c5565b92915050565b60006116fa8261151e565b9050919050565b61170a816116ef565b82525050565b60006020820190506117256000830184611701565b92915050565b61173481611295565b82525050565b600060208201905061174f600083018461172b565b92915050565b60006117608261151e565b9050919050565b61177081611755565b82525050565b600060208201905061178b6000830184611767565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117fa8261136f565b91506118058361136f565b925082820390508181111561181d5761181c6117c0565b5b92915050565b60008151905061183281611379565b92915050565b600081519050611847816113b2565b92915050565b6000604082840312156118635761186261136a565b5b61186d6040611229565b9050600061187d84828501611823565b600083015250602061189184828501611838565b60208301525092915050565b6000604082840312156118b3576118b26111a9565b5b60006118c18482850161184d565b91505092915050565b60006080820190506118df60008301856114a8565b6118ec60408301846114a8565b9392505050565b600060208284031215611909576119086111a9565b5b600061191784828501611838565b91505092915050565b60008160011c9050919050565b6000808291508390505b600185111561197757808604811115611953576119526117c0565b5b60018516156119625780820291505b808102905061197085611920565b9450611937565b94509492505050565b6000826119905760019050611a4c565b8161199e5760009050611a4c565b81600181146119b457600281146119be576119ed565b6001915050611a4c565b60ff8411156119d0576119cf6117c0565b5b8360020a9150848211156119e7576119e66117c0565b5b50611a4c565b5060208310610133831016604e8410600b8410161715611a225782820a905083811115611a1d57611a1c6117c0565b5b611a4c565b611a2f848484600161192d565b92509050818404811115611a4657611a456117c0565b5b81810290505b9392505050565b6000611a5e8261136f565b9150611a69836113a5565b9250611a967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611980565b905092915050565b611aa78161136f565b82525050565b6000606082019050611ac26000830186611a9e565b611acf6020830185611a9e565b611adc6040830184611a9e565b949350505050565b600060208284031215611afa57611af96111a9565b5b6000611b0884828501611823565b91505092915050565b600081519050611b20816112a7565b92915050565b600060208284031215611b3c57611b3b6111a9565b5b6000611b4a84828501611b11565b91505092915050565b60006dffffffffffffffffffffffffffff82169050919050565b611b7681611b53565b8114611b8157600080fd5b50565b600081519050611b9381611b6d565b92915050565b600063ffffffff82169050919050565b611bb281611b99565b8114611bbd57600080fd5b50565b600081519050611bcf81611ba9565b92915050565b600080600060608486031215611bee57611bed6111a9565b5b6000611bfc86828701611b84565b9350506020611c0d86828701611b84565b9250506040611c1e86828701611bc0565b9150509250925092565b6000604082019050611c3d600083018561172b565b611c4a602083018461172b565b9392505050565b611c5a816113a5565b82525050565b6000606082019050611c7560008301856114a8565b611c826040830184611c51565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611cbe81611295565b82525050565b6000611cd08383611cb5565b60208301905092915050565b6000602082019050919050565b6000611cf482611c89565b611cfe8185611c94565b9350611d0983611ca5565b8060005b83811015611d3a578151611d218882611cc4565b9750611d2c83611cdc565b925050600181019050611d0d565b5085935050505092915050565b6000604082019050611d5c6000830185611a9e565b8181036020830152611d6e8184611ce9565b90509392505050565b600067ffffffffffffffff821115611d9257611d916111c9565b5b602082029050602081019050919050565b6000611db6611db184611d77565b611229565b90508083825260208201905060208402830185811115611dd957611dd8611270565b5b835b81811015611e025780611dee8882611823565b845260208401935050602081019050611ddb565b5050509392505050565b600082601f830112611e2157611e206111b3565b5b8151611e31848260208601611da3565b91505092915050565b600060208284031215611e5057611e4f6111a9565b5b600082015167ffffffffffffffff811115611e6e57611e6d6111ae565b5b611e7a84828501611e0c565b9150509291505056fea2646970667358221220f72a3fac39326b4525c178d3afdec557073cfb97bf9e58007b65c6f097bbeb2664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2091 CODESIZE SUB DUP1 PUSH3 0x2091 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x16C JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x1C8 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x134 DUP3 PUSH3 0x107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x146 DUP2 PUSH3 0x127 JUMP JUMPDEST DUP2 EQ PUSH3 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x166 DUP2 PUSH3 0x13B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x188 JUMPI PUSH3 0x187 PUSH3 0x102 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x198 DUP7 DUP3 DUP8 ADD PUSH3 0x155 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1AB DUP7 DUP3 DUP8 ADD PUSH3 0x155 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1BE DUP7 DUP3 DUP8 ADD PUSH3 0x155 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1EB9 DUP1 PUSH3 0x1D8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB09CD0C3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB09CD0C3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE83CB79 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xCECA05AB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF6162317 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x26A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xD186819 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x14C758D9 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2B00490D EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x41B29895 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x7DD92787 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29B PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x1182 JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BF JUMPI PUSH2 0x2BE PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP DUP8 PUSH1 0x1 DUP10 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2E9 JUMPI PUSH2 0x2E8 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA7E7C9F9 DUP9 PUSH2 0x3D5 DUP9 DUP9 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP3 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP PUSH2 0x43E DUP9 DUP9 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD EQ DUP1 PUSH2 0x457 JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP6 POP POP POP POP POP POP PUSH2 0x5F6 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2710 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE51356E8 DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP3 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x62D PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x63A PUSH2 0x1182 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x685 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x726 DUP8 DUP8 PUSH2 0xCB7 JUMP JUMPDEST ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP5 POP POP POP POP POP PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x75A DUP8 DUP8 PUSH2 0xACF JUMP JUMPDEST ISZERO PUSH2 0x916 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD615DEC DUP6 PUSH1 0xA PUSH2 0x7AA SWAP2 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH2 0x7B4 DUP11 DUP11 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7D9 DUP12 DUP12 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7EC JUMPI PUSH2 0x7EB PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD615DEC DUP5 PUSH1 0xA PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH2 0x96B DUP11 DUP11 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x990 DUP12 DUP12 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9A3 JUMPI PUSH2 0x9A2 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADB DUP4 DUP4 PUSH2 0xCF9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB49 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBCB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0xBD8 DUP5 DUP5 PUSH2 0xCF9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC9C JUMPI PUSH2 0xC9B PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDA DUP5 DUP5 PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 DUP4 DUP4 PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD96 SWAP3 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE7 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF9 PUSH2 0x1182 JUMP JUMPDEST DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP7 POP DUP10 PUSH1 0x1 DUP12 MLOAD PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP6 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7D02EBF4 DUP11 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP3 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP9 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP11 PUSH1 0x0 ADD MLOAD DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1021 SWAP3 SWAP2 SWAP1 PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x103E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x1E3A JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x1 DUP5 MLOAD PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1201 DUP3 PUSH2 0x11B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1233 PUSH2 0x119F JUMP JUMPDEST SWAP1 POP PUSH2 0x123F DUP3 DUP3 PUSH2 0x11F8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125E PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A0 DUP3 PUSH2 0x1275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B0 DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP2 EQ PUSH2 0x12BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CD DUP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E6 PUSH2 0x12E1 DUP5 PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1332 JUMPI DUP1 PUSH2 0x131E DUP9 DUP3 PUSH2 0x12BE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x130B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1351 JUMPI PUSH2 0x1350 PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1361 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139F DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BB DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH2 0x13FE PUSH1 0x40 PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x140E DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1422 DUP5 DUP3 DUP6 ADD PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x11AE JUMP JUMPDEST JUMPDEST PUSH2 0x146F DUP6 DUP3 DUP7 ADD PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1480 DUP6 DUP3 DUP7 ADD PUSH2 0x13DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1493 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x14BE PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x148A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14D1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1499 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 PUSH2 0x1512 PUSH2 0x150D DUP5 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x1275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP3 PUSH2 0x14FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153B DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1582 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1591 DUP6 DUP3 DUP7 ADD PUSH2 0x12BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A2 DUP6 DUP3 DUP7 ADD PUSH2 0x12BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C1 DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161A DUP4 DUP4 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163E DUP3 PUSH2 0x15E2 JUMP JUMPDEST PUSH2 0x1648 DUP2 DUP6 PUSH2 0x15ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1653 DUP4 PUSH2 0x15FE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1684 JUMPI DUP2 MLOAD PUSH2 0x166B DUP9 DUP3 PUSH2 0x160E JUMP JUMPDEST SWAP8 POP PUSH2 0x1676 DUP4 PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1657 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16AB DUP2 DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BE DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CE DUP2 PUSH2 0x16B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FA DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170A DUP2 PUSH2 0x16EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1725 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1701 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1734 DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x172B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1760 DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1770 DUP2 PUSH2 0x1755 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17FA DUP3 PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP4 PUSH2 0x136F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1832 DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1847 DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1863 JUMPI PUSH2 0x1862 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH2 0x186D PUSH1 0x40 PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x187D DUP5 DUP3 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH2 0x18B2 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C1 DUP5 DUP3 DUP6 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x18EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1909 JUMPI PUSH2 0x1908 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP5 DUP3 DUP6 ADD PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1977 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1962 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1970 DUP6 PUSH2 0x1920 JUMP JUMPDEST SWAP5 POP PUSH2 0x1937 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1990 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1A4C JUMP JUMPDEST DUP2 PUSH2 0x199E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1A4C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x19B4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x19BE JUMPI PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A4C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x19D0 JUMPI PUSH2 0x19CF PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x19E7 JUMPI PUSH2 0x19E6 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1A4C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1A22 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1A1D JUMPI PUSH2 0x1A1C PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x1A2F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x192D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5E DUP3 PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A69 DUP4 PUSH2 0x13A5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A96 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA7 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AC2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1ADC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A9E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B08 DUP5 DUP3 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B20 DUP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B4A DUP5 DUP3 DUP6 ADD PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B76 DUP2 PUSH2 0x1B53 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B93 DUP2 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1B99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BCF DUP2 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BEE JUMPI PUSH2 0x1BED PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFC DUP7 DUP3 DUP8 ADD PUSH2 0x1B84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C0D DUP7 DUP3 DUP8 ADD PUSH2 0x1B84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C1E DUP7 DUP3 DUP8 ADD PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C3D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1C4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x172B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C5A DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x1C82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 DUP4 DUP4 PUSH2 0x1CB5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF4 DUP3 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x1CFE DUP2 DUP6 PUSH2 0x1C94 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D09 DUP4 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D3A JUMPI DUP2 MLOAD PUSH2 0x1D21 DUP9 DUP3 PUSH2 0x1CC4 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D2C DUP4 PUSH2 0x1CDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D0D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D5C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A9E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D6E DUP2 DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB6 PUSH2 0x1DB1 DUP5 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DD9 JUMPI PUSH2 0x1DD8 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E02 JUMPI DUP1 PUSH2 0x1DEE DUP9 DUP3 PUSH2 0x1823 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DDB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E21 JUMPI PUSH2 0x1E20 PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1E31 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E50 JUMPI PUSH2 0x1E4F PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x11AE JUMP JUMPDEST JUMPDEST PUSH2 0x1E7A DUP5 DUP3 DUP6 ADD PUSH2 0x1E0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0x2A EXTCODEHASH 0xAC CODECOPY ORIGIN PUSH12 0x4525C178D3AFDEC557073CFB SWAP8 0xBF SWAP15 PC STOP PUSH28 0x65C6F097BBEB2664736F6C6343000813003300000000000000000000 ",
							"sourceMap": "677:4534:1:-:0;;;835:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;948:14;914:15;;:49;;;;;;;;;;;;;;;;;;1002:7;973:8;;:37;;;;;;;;;;;;;;;;;;1049:6;1020:7;;:36;;;;;;;;;;;;;;;;;;835:228;;;677:4534;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;677:4534:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@amountOut_442": {
									"entryPoint": 3551,
									"id": 442,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@factory_77": {
									"entryPoint": 3341,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fixedPointMath_68": {
									"entryPoint": 1532,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pairAddress_102": {
									"entryPoint": 3383,
									"id": 102,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@pairInterface_120": {
									"entryPoint": 3321,
									"id": 120,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@pairIsSameLayoutAsGivenTokens_201": {
									"entryPoint": 2767,
									"id": 201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@pairIsZeroAddress_182": {
									"entryPoint": 3255,
									"id": 182,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@pairReserves_162": {
									"entryPoint": 2943,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price_331": {
									"entryPoint": 1573,
									"id": 331,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@router_86": {
									"entryPoint": 4440,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@yield_552": {
									"entryPoint": 648,
									"id": 552,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4819,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint112_fromMemory": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IFixedPointMath_$652_to_t_address_fromStack": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Factory_$2421_to_t_address_fromStack": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Pair_$2663_to_t_address_fromStack": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$3059_to_t_address_fromStack": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IFixedPointMath_$652__to_t_address__fromStack_reversed": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Factory_$2421__to_t_address__fromStack_reversed": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Pair_$2663__to_t_address__fromStack_reversed": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$3059__to_t_address__fromStack_reversed": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_t_uint8__to_t_struct$_FixedPointValue_$6_memory_ptr_t_uint8__fromStack_reversed": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7495,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 6995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IFixedPointMath_$652_to_t_address": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Factory_$2421_to_t_address": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Pair_$2663_to_t_address": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$3059_to_t_address": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint112": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25841:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:10",
														"type": ""
													}
												],
												"src": "457:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:10"
															},
															"nodeType": "YulIf",
															"src": "907:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:10",
														"type": ""
													}
												],
												"src": "751:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:10",
														"type": ""
													}
												],
												"src": "1038:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1255:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:30:10"
															},
															"nodeType": "YulIf",
															"src": "1326:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1392:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1454:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1239:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1250:4:10",
														"type": ""
													}
												],
												"src": "1173:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1640:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1650:7:10",
														"type": ""
													}
												],
												"src": "1613:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1772:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1782:7:10",
														"type": ""
													}
												],
												"src": "1745:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1890:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1947:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:43:10"
															},
															"nodeType": "YulIf",
															"src": "1900:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:10",
														"type": ""
													}
												],
												"src": "1847:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2027:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2037:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2059:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2046:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2102:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2075:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2013:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2021:5:10",
														"type": ""
													}
												],
												"src": "1975:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2239:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2249:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2274:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2274:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2258:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2348:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2359:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2352:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2381:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2388:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2374:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2404:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2415:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2404:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2437:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2455:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2475:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2441:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2509:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2523:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2523:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2523:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2496:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2493:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:15:10"
															},
															"nodeType": "YulIf",
															"src": "2490:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2697:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2712:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "2730:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "2716:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "2780:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2792:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "2759:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2759:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2747:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2747:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2747:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2810:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2826:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2817:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2817:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2810:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2650:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2647:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2663:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2665:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2676:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2672:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2672:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2665:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2625:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2627:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "2631:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2621:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2209:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2217:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2225:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2233:5:10",
														"type": ""
													}
												],
												"src": "2137:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2998:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2998:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2975:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2983:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2971:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2971:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2990:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2967:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:35:10"
															},
															"nodeType": "YulIf",
															"src": "2957:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3088:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3102:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3092:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3131:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3207:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3215:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3222:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3140:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3131:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2925:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2933:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2941:5:10",
														"type": ""
													}
												],
												"src": "2870:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3335:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:12:10"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "3246:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3458:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3475:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3478:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3468:12:10"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "3369:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3547:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3558:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3547:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3519:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3529:7:10",
														"type": ""
													}
												],
												"src": "3492:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3618:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3675:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3684:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3687:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3677:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3677:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3677:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3641:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3666:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3648:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3648:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3638:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3631:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3631:43:10"
															},
															"nodeType": "YulIf",
															"src": "3628:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3611:5:10",
														"type": ""
													}
												],
												"src": "3575:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3765:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3787:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3774:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3765:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3830:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3803:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3803:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3733:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3741:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3749:5:10",
														"type": ""
													}
												],
												"src": "3703:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3891:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3901:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3923:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3912:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3901:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3873:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3883:7:10",
														"type": ""
													}
												],
												"src": "3848:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3981:77:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4036:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4045:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4048:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4038:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4038:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4038:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4004:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4027:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "4011:15:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4011:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4001:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:41:10"
															},
															"nodeType": "YulIf",
															"src": "3991:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3974:5:10",
														"type": ""
													}
												],
												"src": "3940:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4114:85:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4124:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4146:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4133:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4124:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4162:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4092:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4100:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4108:5:10",
														"type": ""
													}
												],
												"src": "4064:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4320:497:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4364:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "4366:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4366:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4366:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4341:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4358:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:30:10"
															},
															"nodeType": "YulIf",
															"src": "4330:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4456:30:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4481:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4465:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4456:5:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4496:151:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4532:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4536:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4572:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4579:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4568:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4568:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4611:9:10"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4622:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4607:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4607:22:10"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4631:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4586:20:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4586:49:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4561:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4561:75:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4561:75:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4657:153:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4696:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4710:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4700:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4737:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4744:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4733:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4733:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4774:9:10"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4785:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4770:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4770:22:10"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4794:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "4751:18:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4751:47:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4726:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4726:73:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4726:73:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4295:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4306:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4314:5:10",
														"type": ""
													}
												],
												"src": "4235:582:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4961:606:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5007:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5009:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5009:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5009:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4982:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4991:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4978:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:32:10"
															},
															"nodeType": "YulIf",
															"src": "4971:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5100:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5115:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5146:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5157:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5142:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5142:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5129:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5129:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5119:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5207:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5209:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5209:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5209:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5179:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5187:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5176:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5176:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "5173:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5304:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5364:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5375:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5360:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5360:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5384:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5314:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5314:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5304:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5412:148:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5427:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5441:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5431:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5457:93:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5522:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5533:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5518:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5518:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5542:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5467:50:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5467:83:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5457:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4923:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4934:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4946:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4954:6:10",
														"type": ""
													}
												],
												"src": "4823:744:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5628:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5645:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5668:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5650:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5650:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5638:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5616:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5623:3:10",
														"type": ""
													}
												],
												"src": "5573:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5738:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5755:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5776:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5760:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5760:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5748:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5748:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5726:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5733:3:10",
														"type": ""
													}
												],
												"src": "5687:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5977:392:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5987:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6003:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6008:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5999:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5991:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6023:165:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6059:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6089:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6096:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6085:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6085:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6079:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6079:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6063:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6149:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6167:3:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6172:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6163:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6163:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6115:33:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:63:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6115:63:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6198:164:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6237:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6267:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6274:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6263:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6263:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6257:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6257:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6241:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6323:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6341:3:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6346:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6337:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6337:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6293:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6293:59:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6293:59:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5964:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5971:3:10",
														"type": ""
													}
												],
												"src": "5851:518:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6533:184:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6543:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6555:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6551:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6543:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6683:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6696:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6707:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6692:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6692:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6579:103:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6579:131:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6579:131:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6517:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6528:4:10",
														"type": ""
													}
												],
												"src": "6375:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6755:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6765:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6772:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6765:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6741:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6751:3:10",
														"type": ""
													}
												],
												"src": "6723:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6849:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6859:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6917:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6899:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6899:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6890:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6890:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6872:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6859:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6829:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6839:9:10",
														"type": ""
													}
												],
												"src": "6789:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6997:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7007:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7051:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7020:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7007:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6977:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6987:9:10",
														"type": ""
													}
												],
												"src": "6937:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7152:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7162:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7206:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7175:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7175:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7162:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IFixedPointMath_$652_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7132:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7142:9:10",
														"type": ""
													}
												],
												"src": "7069:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7312:89:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7329:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7388:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IFixedPointMath_$652_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7334:53:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7334:60:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7322:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7322:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7322:73:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IFixedPointMath_$652_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7300:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7307:3:10",
														"type": ""
													}
												],
												"src": "7224:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7528:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7538:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7550:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7538:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7641:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7654:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7650:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7650:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IFixedPointMath_$652_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7574:66:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7574:94:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7574:94:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFixedPointMath_$652__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7500:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7512:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7523:4:10",
														"type": ""
													}
												],
												"src": "7407:268:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7764:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7810:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7812:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7812:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7812:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7781:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7806:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7777:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7777:32:10"
															},
															"nodeType": "YulIf",
															"src": "7774:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "7903:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7918:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7932:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7922:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7947:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7982:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7993:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7978:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7978:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8002:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7957:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7957:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7947:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8030:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8045:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8049:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8075:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8110:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8121:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8106:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8106:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8130:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8085:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8085:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8075:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7749:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7757:6:10",
														"type": ""
													}
												],
												"src": "7681:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8213:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8238:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8231:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8231:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8224:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8213:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8185:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8195:7:10",
														"type": ""
													}
												],
												"src": "8161:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8316:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8353:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8338:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8326:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8326:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8304:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8311:3:10",
														"type": ""
													}
												],
												"src": "8257:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8464:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8474:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8486:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8497:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8482:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8482:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8474:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8548:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8572:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8557:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8510:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8510:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8510:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8436:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8448:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8459:4:10",
														"type": ""
													}
												],
												"src": "8372:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8662:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8673:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8689:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8683:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8673:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8645:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8655:6:10",
														"type": ""
													}
												],
												"src": "8588:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8819:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8836:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8841:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8829:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8829:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8829:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8857:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8876:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8881:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8872:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8872:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8857:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8791:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8796:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8807:11:10",
														"type": ""
													}
												],
												"src": "8708:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8970:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8980:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8988:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8980:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9001:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9013:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9018:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9009:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9009:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9001:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8957:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8965:4:10",
														"type": ""
													}
												],
												"src": "8898:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9116:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9160:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9168:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9126:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9126:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9126:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9181:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9199:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9204:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9195:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9195:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9181:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9089:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9097:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9105:10:10",
														"type": ""
													}
												],
												"src": "9036:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9296:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9306:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9318:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9323:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9314:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9314:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9306:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9283:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9291:4:10",
														"type": ""
													}
												],
												"src": "9221:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9494:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9504:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9566:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9518:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9508:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9581:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9662:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9667:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9588:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9588:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9581:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9683:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9748:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9698:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "9687:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9763:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9777:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9767:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9853:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9867:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9894:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9888:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9888:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9871:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9914:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9965:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9980:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "9921:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9921:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9914:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9997:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10060:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10007:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10007:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9997:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9815:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9818:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9812:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9826:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9828:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9837:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9840:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9833:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9833:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9828:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9797:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9799:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9808:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9803:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9793:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10086:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10093:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10086:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9473:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9480:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9489:3:10",
														"type": ""
													}
												],
												"src": "9370:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10256:225:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10266:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10278:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10289:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10274:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10274:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10266:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10313:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10324:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10309:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10332:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10338:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10328:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10302:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10302:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10358:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10460:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10469:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10366:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10366:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10358:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10228:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10240:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:10",
														"type": ""
													}
												],
												"src": "10108:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10570:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10580:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10624:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10593:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10593:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10580:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Pair_$2663_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10550:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10560:9:10",
														"type": ""
													}
												],
												"src": "10487:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10730:89:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10747:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10806:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Pair_$2663_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10752:53:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10752:60:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10740:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10740:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10740:73:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Pair_$2663_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10718:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10725:3:10",
														"type": ""
													}
												],
												"src": "10642:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10946:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10956:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10968:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10964:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11059:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11083:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11068:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Pair_$2663_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10992:66:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:94:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10992:94:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Pair_$2663__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10918:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10930:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10941:4:10",
														"type": ""
													}
												],
												"src": "10825:268:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11185:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11195:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11239:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11208:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11208:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11195:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Factory_$2421_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11165:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11175:9:10",
														"type": ""
													}
												],
												"src": "11099:152:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11348:92:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11365:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11427:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Factory_$2421_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11370:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11370:63:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11358:76:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11358:76:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Factory_$2421_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11336:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11343:3:10",
														"type": ""
													}
												],
												"src": "11257:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11570:150:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11580:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11592:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11603:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11588:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11580:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11686:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11699:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11710:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11695:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11695:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Factory_$2421_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11616:69:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11616:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11616:97:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$2421__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11542:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11554:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11565:4:10",
														"type": ""
													}
												],
												"src": "11446:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11791:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11808:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11831:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11813:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11813:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11801:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11801:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11801:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11779:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11786:3:10",
														"type": ""
													}
												],
												"src": "11726:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11948:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11958:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11970:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11981:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11966:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11966:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11958:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12038:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12051:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12062:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12047:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11994:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11994:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11994:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11920:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11932:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11943:4:10",
														"type": ""
													}
												],
												"src": "11850:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12165:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12175:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12219:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12188:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12188:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12175:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$3059_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12145:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12155:9:10",
														"type": ""
													}
												],
												"src": "12078:153:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12329:93:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12346:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12409:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$3059_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12351:57:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12351:64:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12339:77:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12339:77:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$3059_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12317:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12324:3:10",
														"type": ""
													}
												],
												"src": "12237:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12553:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12563:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12575:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12586:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12563:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12670:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12683:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12694:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12679:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12679:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$3059_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12599:70:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12599:98:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12599:98:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$3059__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12525:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12537:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12548:4:10",
														"type": ""
													}
												],
												"src": "12428:276:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12738:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12758:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12748:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12748:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12748:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12852:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12855:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12845:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12845:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12876:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12879:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12869:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12869:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12869:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12710:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12924:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12941:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12944:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12934:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12934:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13038:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13041:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13031:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13031:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13031:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13062:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13065:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13055:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13055:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13055:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12896:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13127:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13137:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13160:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13142:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13142:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13137:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13171:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13194:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13176:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13176:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13171:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13205:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13217:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13220:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13213:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13205:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13247:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13249:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13249:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13249:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13238:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13244:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13235:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13235:11:10"
															},
															"nodeType": "YulIf",
															"src": "13232:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13113:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13116:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13122:4:10",
														"type": ""
													}
												],
												"src": "13082:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13345:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13355:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13370:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13364:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13355:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13413:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13386:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13386:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13386:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13323:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13331:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13339:5:10",
														"type": ""
													}
												],
												"src": "13282:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13492:78:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13502:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13517:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13511:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13502:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13558:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "13533:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13533:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13533:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13470:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13478:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13486:5:10",
														"type": ""
													}
												],
												"src": "13431:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13702:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13746:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "13748:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13748:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13748:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "13723:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13728:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13719:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13719:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13740:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13715:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13715:30:10"
															},
															"nodeType": "YulIf",
															"src": "13712:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13838:30:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13863:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13847:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13838:5:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13878:162:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13914:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13928:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13918:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13954:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13961:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13950:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13950:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "14004:9:10"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "14015:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14000:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14000:22:10"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "14024:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13968:31:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13968:60:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13943:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13943:86:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13943:86:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14050:164:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14089:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14103:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14093:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14130:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14137:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14126:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14126:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "14178:9:10"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "14189:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14174:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14174:22:10"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "14198:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "14144:29:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14144:58:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "14119:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14119:84:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "14119:84:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13677:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13688:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13696:5:10",
														"type": ""
													}
												],
												"src": "13606:615:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14334:304:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14380:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14382:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14382:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14382:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14355:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14364:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14376:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14347:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14347:32:10"
															},
															"nodeType": "YulIf",
															"src": "14344:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "14473:158:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14488:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14502:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14492:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14517:104:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14593:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14604:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14589:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14589:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14613:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14527:61:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14527:94:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14517:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14304:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14315:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14327:6:10",
														"type": ""
													}
												],
												"src": "14227:411:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14890:327:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14900:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14912:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14923:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14908:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14908:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14900:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15041:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15054:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15065:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15050:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15050:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14937:103:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14937:131:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14937:131:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15182:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15195:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15206:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15191:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15078:103:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15078:132:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15078:132:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14854:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14866:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14874:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14885:4:10",
														"type": ""
													}
												],
												"src": "14644:573:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15298:272:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15344:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15346:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15346:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15346:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15319:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15328:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15315:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15315:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15311:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15311:32:10"
															},
															"nodeType": "YulIf",
															"src": "15308:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "15437:126:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15452:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15466:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15456:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15481:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15525:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15536:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15521:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15521:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15545:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15491:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15491:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15481:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15268:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15279:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15291:6:10",
														"type": ""
													}
												],
												"src": "15223:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15627:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15637:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15662:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15665:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "15658:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15658:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "15637:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15608:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "15618:8:10",
														"type": ""
													}
												],
												"src": "15576:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15757:775:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15767:15:10",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "15776:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "15767:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15791:14:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "15800:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "15791:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15849:677:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15937:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "15939:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15939:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15939:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "15915:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "15925:3:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "15930:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "15921:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15921:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "15912:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15912:24:10"
																		},
																		"nodeType": "YulIf",
																		"src": "15909:50:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "16004:419:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "16384:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "16397:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "16404:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "16393:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16393:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "16384:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "15979:8:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15989:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15975:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15975:16:10"
																		},
																		"nodeType": "YulIf",
																		"src": "15972:451:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16436:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16448:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16454:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "16444:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16444:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "16436:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16472:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "16507:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "16484:22:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16484:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "16472:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15825:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15835:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15822:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15822:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15838:2:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15818:3:10",
																"statements": []
															},
															"src": "15814:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "15712:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "15720:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "15727:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "15737:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "15745:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "15752:4:10",
														"type": ""
													}
												],
												"src": "15684:848:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16598:1013:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16793:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16795:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16804:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "16795:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "16806:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "16783:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16776:16:10"
															},
															"nodeType": "YulIf",
															"src": "16773:40:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16838:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16840:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16849:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "16840:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "16851:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "16832:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16825:12:10"
															},
															"nodeType": "YulIf",
															"src": "16822:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16968:20:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "16970:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16979:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "16970:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "16981:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16961:27:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16966:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17012:176:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "17047:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "17049:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17049:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "17049:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "17032:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17042:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "17029:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17029:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "17026:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "17082:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17095:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "17098:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "17091:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17091:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "17082:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "17138:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "17140:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17140:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "17140:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "17126:5:10"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "17133:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "17123:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17123:14:10"
																				},
																				"nodeType": "YulIf",
																				"src": "17120:40:10"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "17173:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16997:191:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17002:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "16918:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "16911:277:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17320:123:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17334:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17347:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17353:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "17343:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17343:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "17334:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17393:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "17395:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17395:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17395:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "17381:5:10"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "17388:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "17378:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17378:14:10"
																		},
																		"nodeType": "YulIf",
																		"src": "17375:40:10"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "17428:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "17223:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17229:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17220:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17220:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "17237:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17247:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17234:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17234:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17216:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "17272:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17278:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17269:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17269:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "17287:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17297:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17284:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17284:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17265:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17200:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17200:111:10"
															},
															"nodeType": "YulIf",
															"src": "17197:246:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17453:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17487:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17490:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17496:8:10"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "17506:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "17468:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17468:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17453:5:10"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17460:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17549:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17551:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17551:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17551:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "17526:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "17537:3:10"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "17542:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "17533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17533:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17523:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17523:25:10"
															},
															"nodeType": "YulIf",
															"src": "17520:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17580:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "17593:5:10"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17600:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17589:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17589:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17580:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "16568:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "16574:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "16584:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "16592:5:10",
														"type": ""
													}
												],
												"src": "16538:1073:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17681:217:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17691:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17717:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17699:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17699:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17691:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17731:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17759:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "17743:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17743:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "17731:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17778:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17808:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17814:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17824:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "17787:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17787:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17778:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17656:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17662:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17675:5:10",
														"type": ""
													}
												],
												"src": "17617:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17969:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17986:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18009:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17991:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17991:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17979:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17979:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17979:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17957:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17964:3:10",
														"type": ""
													}
												],
												"src": "17904:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18182:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18192:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18204:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18215:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18200:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18192:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18272:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18285:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18296:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18281:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18228:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18228:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18228:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18353:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18377:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18362:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18309:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18309:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18309:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18435:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18448:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18459:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18444:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18391:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18391:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18391:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18138:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18150:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18158:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18166:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18177:4:10",
														"type": ""
													}
												],
												"src": "18028:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18553:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18599:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18601:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18601:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18601:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18574:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18583:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18570:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18570:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18595:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18566:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18566:32:10"
															},
															"nodeType": "YulIf",
															"src": "18563:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "18692:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18707:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18721:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18711:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18736:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18782:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18793:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18778:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18778:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18802:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "18746:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18746:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18736:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18523:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18534:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18546:6:10",
														"type": ""
													}
												],
												"src": "18476:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18896:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18906:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18921:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18915:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18915:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18906:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18964:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "18937:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18937:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18937:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18874:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18882:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18890:5:10",
														"type": ""
													}
												],
												"src": "18833:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19059:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19105:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19107:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19107:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19107:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19080:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19089:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19076:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19076:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19101:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19072:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19072:32:10"
															},
															"nodeType": "YulIf",
															"src": "19069:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "19198:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19213:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19227:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19217:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19242:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19288:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19299:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19284:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19284:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19308:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19252:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19252:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19242:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19029:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19040:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19052:6:10",
														"type": ""
													}
												],
												"src": "18982:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19384:69:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19394:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19409:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19416:30:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19405:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19405:42:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19394:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19366:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19376:7:10",
														"type": ""
													}
												],
												"src": "19339:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19502:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19559:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19568:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19571:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19561:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19561:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19561:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19525:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19550:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint112",
																					"nodeType": "YulIdentifier",
																					"src": "19532:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19532:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19522:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19522:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19515:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19515:43:10"
															},
															"nodeType": "YulIf",
															"src": "19512:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint112",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19495:5:10",
														"type": ""
													}
												],
												"src": "19459:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19650:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19660:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19675:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19669:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19669:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19660:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19718:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint112",
																	"nodeType": "YulIdentifier",
																	"src": "19691:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19691:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19691:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19628:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19636:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19644:5:10",
														"type": ""
													}
												],
												"src": "19587:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19780:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19790:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19805:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19812:10:10",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19801:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19801:22:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19790:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19762:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19772:7:10",
														"type": ""
													}
												],
												"src": "19736:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19877:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19933:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19942:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19945:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19935:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19935:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19935:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19900:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19924:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "19907:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19907:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19897:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19897:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19890:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19890:42:10"
															},
															"nodeType": "YulIf",
															"src": "19887:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19870:5:10",
														"type": ""
													}
												],
												"src": "19835:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20023:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20033:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20048:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20042:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20042:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20033:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20090:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "20064:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20064:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20064:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20001:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20009:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20017:5:10",
														"type": ""
													}
												],
												"src": "19961:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20218:551:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20264:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20266:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20266:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20266:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20239:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20248:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20235:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20260:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20231:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20231:32:10"
															},
															"nodeType": "YulIf",
															"src": "20228:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "20357:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20372:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20386:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20376:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20401:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20447:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20458:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20443:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20443:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20467:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint112_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20411:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20411:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20401:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20495:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20510:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20524:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20514:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20540:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20586:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20597:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20582:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20582:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20606:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint112_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20550:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20550:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20540:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20634:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20649:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20663:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20653:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20679:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20724:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20735:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20720:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20720:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20744:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20689:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20689:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20679:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20172:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20183:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20195:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20203:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20211:6:10",
														"type": ""
													}
												],
												"src": "20108:661:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20901:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20911:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20923:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20934:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20919:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20919:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20911:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20991:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21004:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21015:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21000:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20947:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20947:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20947:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21072:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21085:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21096:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21081:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21028:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21028:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21028:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20865:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20877:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20885:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20896:4:10",
														"type": ""
													}
												],
												"src": "20775:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21174:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21212:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "21196:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21196:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21184:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21184:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21169:3:10",
														"type": ""
													}
												],
												"src": "21113:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21413:262:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21423:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21435:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21446:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21431:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21431:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21423:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21563:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21576:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21587:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21572:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21572:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21459:103:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21459:131:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21459:131:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21640:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21653:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21664:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21649:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21600:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21600:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21600:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_t_uint8__to_t_struct$_FixedPointValue_$6_memory_ptr_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21377:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21389:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21397:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21408:4:10",
														"type": ""
													}
												],
												"src": "21231:444:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21755:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21766:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21782:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21776:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21776:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21766:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21738:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21748:6:10",
														"type": ""
													}
												],
												"src": "21681:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21912:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21929:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21934:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21922:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21922:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21922:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21950:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21969:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21974:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21965:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21965:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21950:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21884:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21889:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21900:11:10",
														"type": ""
													}
												],
												"src": "21801:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22063:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22073:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "22081:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "22073:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22094:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "22106:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22111:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22102:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22102:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "22094:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "22050:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "22058:4:10",
														"type": ""
													}
												],
												"src": "21991:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22184:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22201:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22224:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "22206:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22206:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22194:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22194:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22172:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22179:3:10",
														"type": ""
													}
												],
												"src": "22129:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22323:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22367:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22375:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "22333:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22333:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22333:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22388:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22406:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22411:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22402:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22402:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "22388:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22296:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22304:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "22312:10:10",
														"type": ""
													}
												],
												"src": "22243:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22503:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22513:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "22525:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22530:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22521:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22521:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "22513:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "22490:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "22498:4:10",
														"type": ""
													}
												],
												"src": "22428:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22701:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22711:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22773:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22725:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22725:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22715:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22788:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22869:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22874:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22795:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22795:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22788:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22890:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22955:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22905:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22905:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "22894:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22970:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "22984:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "22974:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23060:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "23074:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "23101:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "23095:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23095:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "23078:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "23121:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "23172:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "23187:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "23128:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23128:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "23121:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "23204:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "23267:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "23214:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23214:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23204:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "23022:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23025:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "23019:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23019:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "23033:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "23035:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "23044:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23047:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "23040:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23040:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "23035:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "23004:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "23006:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "23015:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "23010:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "23000:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23293:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23300:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23293:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22680:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22687:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22696:3:10",
														"type": ""
													}
												],
												"src": "22577:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23491:307:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23501:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23513:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23524:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23509:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23509:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23501:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23581:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23594:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23605:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23590:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23590:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23537:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23537:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23537:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23629:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23640:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23625:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23625:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23649:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23655:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23645:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23645:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23618:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23618:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23618:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23675:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23777:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23786:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23683:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23683:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23675:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23455:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23467:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23475:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23486:4:10",
														"type": ""
													}
												],
												"src": "23315:483:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23886:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23991:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23993:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23993:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23993:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23963:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23971:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23960:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23960:30:10"
															},
															"nodeType": "YulIf",
															"src": "23957:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24023:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24035:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24043:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24031:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24031:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24023:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24085:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24097:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24093:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24085:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23870:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23881:4:10",
														"type": ""
													}
												],
												"src": "23804:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24251:619:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24261:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24343:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "24286:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24286:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "24270:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24270:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "24261:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24360:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "24371:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "24364:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "24393:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24400:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24386:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24386:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24386:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24416:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "24427:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24434:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24423:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24423:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "24416:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24449:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24467:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24479:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24487:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "24475:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24475:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24463:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24463:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "24453:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24521:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "24535:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24535:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24535:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "24508:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "24516:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24505:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24505:15:10"
															},
															"nodeType": "YulIf",
															"src": "24502:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24709:155:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "24724:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "24742:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "24728:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "24766:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "24803:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "24815:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "24771:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24771:48:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24759:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24759:61:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24759:61:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "24833:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "24844:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24849:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24840:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24840:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "24833:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "24662:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "24667:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24659:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24659:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24675:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24677:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "24688:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24693:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24684:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24684:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "24677:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24637:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "24639:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "24650:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "24643:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "24633:231:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24221:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24229:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24237:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "24245:5:10",
														"type": ""
													}
												],
												"src": "24138:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24981:297:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25030:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "25032:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25032:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25032:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "25009:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25017:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25005:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25005:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "25024:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "25001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25001:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24994:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24994:35:10"
															},
															"nodeType": "YulIf",
															"src": "24991:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25122:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25142:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25136:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25136:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25126:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25158:114:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "25245:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25253:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25241:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25241:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25260:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "25268:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "25167:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25167:105:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "25158:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24959:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24967:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "24975:5:10",
														"type": ""
													}
												],
												"src": "24893:385:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25386:452:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25432:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "25434:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25434:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25434:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25407:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25416:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25403:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25403:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25428:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25399:32:10"
															},
															"nodeType": "YulIf",
															"src": "25396:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "25525:306:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25540:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "25564:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25575:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25560:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25560:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "25554:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25554:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "25544:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "25625:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "25627:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25627:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "25627:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "25597:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25605:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "25594:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25594:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "25591:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "25722:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "25793:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "25804:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25789:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25789:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25813:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "25732:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25732:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "25722:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25356:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25367:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25379:6:10",
														"type": ""
													}
												],
												"src": "25284:554:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct FixedPointValue\n    function abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // value\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // decimals\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct FixedPointValue -> struct FixedPointValue\n    function abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // decimals\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IFixedPointMath_$652_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IFixedPointMath_$652_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IFixedPointMath_$652_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IFixedPointMath_$652__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IFixedPointMath_$652_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$2663_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$2663_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$2663_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Pair_$2663__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Pair_$2663_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$2421_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Factory_$2421_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Factory_$2421_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$2421__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Factory_$2421_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$3059_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$3059_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$3059_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$3059__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$3059_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct FixedPointValue\n    function abi_decode_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // value\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // decimals\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint8_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr_t_uint8__to_t_struct$_FixedPointValue_$6_memory_ptr_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b09cd0c311610071578063b09cd0c31461018c578063be83cb79146101bc578063c45a0155146101ec578063ceca05ab1461020a578063f61623171461023a578063f887ea401461026a576100a9565b80630d186819146100ae57806314c758d9146100de5780632b00490d146100fc57806341b298951461012c5780637dd927871461015c575b600080fd5b6100c860048036038101906100c3919061142e565b610288565b6040516100d591906114d7565b60405180910390f35b6100e66105fc565b6040516100f39190611551565b60405180910390f35b6101166004803603810190610111919061156c565b610625565b60405161012391906114d7565b60405180910390f35b6101466004803603810190610141919061156c565b610acf565b60405161015391906115c7565b60405180910390f35b6101766004803603810190610171919061156c565b610b7f565b6040516101839190611691565b60405180910390f35b6101a660048036038101906101a1919061156c565b610cb7565b6040516101b391906115c7565b60405180910390f35b6101d660048036038101906101d1919061156c565b610cf9565b6040516101e391906116d4565b60405180910390f35b6101f4610d0d565b6040516102019190611710565b60405180910390f35b610224600480360381019061021f919061156c565b610d37565b604051610231919061173a565b60405180910390f35b610254600480360381019061024f919061142e565b610ddf565b60405161026191906114d7565b60405180910390f35b610272611158565b60405161027f9190611776565b60405180910390f35b610290611182565b60008061029b611182565b6102a3611182565b6102ab611182565b876000815181106102bf576102be611791565b5b6020026020010151945087600189516102d891906117ef565b815181106102e9576102e8611791565b5b6020026020010151935060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0886040518263ffffffff1660e01b815260040161034c91906114d7565b6040805180830381865afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c919061189d565b965060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7e7c9f9886103d58888610625565b6040518363ffffffff1660e01b81526004016103f29291906118ca565b6040805180830381865afa15801561040e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610432919061189d565b925061043e8888610ddf565b9150600083600001511480610457575060008260000151145b1561048257604051806040016040528060008152602001601260ff16815250955050505050506105f6565b82600001518260000151106105505760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e060405180604001604052806127108152602001600060ff168152506040518263ffffffff1660e01b815260040161050491906114d7565b6040805180830381865afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061189d565b955050505050506105f6565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e51356e883856040518363ffffffff1660e01b81526004016105ab9291906118ca565b6040805180830381865afa1580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb919061189d565b905080955050505050505b92915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61062d611182565b600080600061063a611182565b8673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a991906118f3565b93508573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a91906118f3565b92506107268787610cb7565b1561075057604051806040016040528060008152602001601260ff16815250945050505050610ac9565b61075a8787610acf565b1561091657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad615dec85600a6107aa9190611a53565b6107b48a8a610b7f565b6000815181106107c7576107c6611791565b5b60200260200101516107d98b8b610b7f565b6001815181106107ec576107eb611791565b5b60200260200101516040518463ffffffff1660e01b815260040161081293929190611aad565b602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190611ae4565b915060405180604001604052808381526020018460ff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0826040518263ffffffff1660e01b81526004016108c891906114d7565b6040805180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061189d565b905080945050505050610ac9565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad615dec84600a6109619190611a53565b61096b8a8a610b7f565b60018151811061097e5761097d611791565b5b60200260200101516109908b8b610b7f565b6000815181106109a3576109a2611791565b5b60200260200101516040518463ffffffff1660e01b81526004016109c993929190611aad565b602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190611ae4565b915060405180604001604052808381526020018460ff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0826040518263ffffffff1660e01b8152600401610a7f91906114d7565b6040805180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061189d565b9050809450505050505b92915050565b6000610adb8383610cf9565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b499190611b26565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614905092915050565b606080600267ffffffffffffffff811115610b9d57610b9c6111c9565b5b604051908082528060200260200182016040528015610bcb5781602001602082028036833780820191505090505b509050610bd88484610cf9565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c469190611bd5565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff1691505082600081518110610c8157610c80611791565b5b6020026020010183600181518110610c9c57610c9b611791565b5b60200260200101828152508281525050508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16610cda8484610d37565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b6000610d058383610d37565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401610d96929190611c28565b602060405180830381865afa158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd79190611b26565b905092915050565b610de7611182565b60008060008060606000610df9611182565b89600081518110610e0d57610e0c611791565b5b602002602001015196508960018b51610e2691906117ef565b81518110610e3757610e36611791565b5b602002602001015195508673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb091906118f3565b94508573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2191906118f3565b935060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d02ebf48a876040518363ffffffff1660e01b8152600401610f7e929190611c60565b6040805180830381865afa158015610f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbe919061189d565b9850600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8a600001518c6040518363ffffffff1660e01b8152600401611021929190611d47565b600060405180830381865afa15801561103e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110679190611e3a565b9250826001845161107891906117ef565b8151811061108957611088611791565b5b6020026020010151915060405180604001604052808381526020018560ff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e60d8e0826040518263ffffffff1660e01b815260040161110691906114d7565b6040805180830381865afa158015611122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611146919061189d565b90508097505050505050505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b604051806040016040528060008152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611201826111b8565b810181811067ffffffffffffffff821117156112205761121f6111c9565b5b80604052505050565b600061123361119f565b905061123f82826111f8565b919050565b600067ffffffffffffffff82111561125f5761125e6111c9565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112a082611275565b9050919050565b6112b081611295565b81146112bb57600080fd5b50565b6000813590506112cd816112a7565b92915050565b60006112e66112e184611244565b611229565b9050808382526020820190506020840283018581111561130957611308611270565b5b835b81811015611332578061131e88826112be565b84526020840193505060208101905061130b565b5050509392505050565b600082601f830112611351576113506111b3565b5b81356113618482602086016112d3565b91505092915050565b600080fd5b6000819050919050565b6113828161136f565b811461138d57600080fd5b50565b60008135905061139f81611379565b92915050565b600060ff82169050919050565b6113bb816113a5565b81146113c657600080fd5b50565b6000813590506113d8816113b2565b92915050565b6000604082840312156113f4576113f361136a565b5b6113fe6040611229565b9050600061140e84828501611390565b6000830152506020611422848285016113c9565b60208301525092915050565b60008060608385031215611445576114446111a9565b5b600083013567ffffffffffffffff811115611463576114626111ae565b5b61146f8582860161133c565b9250506020611480858286016113de565b9150509250929050565b6114938161136f565b82525050565b6114a2816113a5565b82525050565b6040820160008201516114be600085018261148a565b5060208201516114d16020850182611499565b50505050565b60006040820190506114ec60008301846114a8565b92915050565b6000819050919050565b600061151761151261150d84611275565b6114f2565b611275565b9050919050565b6000611529826114fc565b9050919050565b600061153b8261151e565b9050919050565b61154b81611530565b82525050565b60006020820190506115666000830184611542565b92915050565b60008060408385031215611583576115826111a9565b5b6000611591858286016112be565b92505060206115a2858286016112be565b9150509250929050565b60008115159050919050565b6115c1816115ac565b82525050565b60006020820190506115dc60008301846115b8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061161a838361148a565b60208301905092915050565b6000602082019050919050565b600061163e826115e2565b61164881856115ed565b9350611653836115fe565b8060005b8381101561168457815161166b888261160e565b975061167683611626565b925050600181019050611657565b5085935050505092915050565b600060208201905081810360008301526116ab8184611633565b905092915050565b60006116be8261151e565b9050919050565b6116ce816116b3565b82525050565b60006020820190506116e960008301846116c5565b92915050565b60006116fa8261151e565b9050919050565b61170a816116ef565b82525050565b60006020820190506117256000830184611701565b92915050565b61173481611295565b82525050565b600060208201905061174f600083018461172b565b92915050565b60006117608261151e565b9050919050565b61177081611755565b82525050565b600060208201905061178b6000830184611767565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117fa8261136f565b91506118058361136f565b925082820390508181111561181d5761181c6117c0565b5b92915050565b60008151905061183281611379565b92915050565b600081519050611847816113b2565b92915050565b6000604082840312156118635761186261136a565b5b61186d6040611229565b9050600061187d84828501611823565b600083015250602061189184828501611838565b60208301525092915050565b6000604082840312156118b3576118b26111a9565b5b60006118c18482850161184d565b91505092915050565b60006080820190506118df60008301856114a8565b6118ec60408301846114a8565b9392505050565b600060208284031215611909576119086111a9565b5b600061191784828501611838565b91505092915050565b60008160011c9050919050565b6000808291508390505b600185111561197757808604811115611953576119526117c0565b5b60018516156119625780820291505b808102905061197085611920565b9450611937565b94509492505050565b6000826119905760019050611a4c565b8161199e5760009050611a4c565b81600181146119b457600281146119be576119ed565b6001915050611a4c565b60ff8411156119d0576119cf6117c0565b5b8360020a9150848211156119e7576119e66117c0565b5b50611a4c565b5060208310610133831016604e8410600b8410161715611a225782820a905083811115611a1d57611a1c6117c0565b5b611a4c565b611a2f848484600161192d565b92509050818404811115611a4657611a456117c0565b5b81810290505b9392505050565b6000611a5e8261136f565b9150611a69836113a5565b9250611a967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611980565b905092915050565b611aa78161136f565b82525050565b6000606082019050611ac26000830186611a9e565b611acf6020830185611a9e565b611adc6040830184611a9e565b949350505050565b600060208284031215611afa57611af96111a9565b5b6000611b0884828501611823565b91505092915050565b600081519050611b20816112a7565b92915050565b600060208284031215611b3c57611b3b6111a9565b5b6000611b4a84828501611b11565b91505092915050565b60006dffffffffffffffffffffffffffff82169050919050565b611b7681611b53565b8114611b8157600080fd5b50565b600081519050611b9381611b6d565b92915050565b600063ffffffff82169050919050565b611bb281611b99565b8114611bbd57600080fd5b50565b600081519050611bcf81611ba9565b92915050565b600080600060608486031215611bee57611bed6111a9565b5b6000611bfc86828701611b84565b9350506020611c0d86828701611b84565b9250506040611c1e86828701611bc0565b9150509250925092565b6000604082019050611c3d600083018561172b565b611c4a602083018461172b565b9392505050565b611c5a816113a5565b82525050565b6000606082019050611c7560008301856114a8565b611c826040830184611c51565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611cbe81611295565b82525050565b6000611cd08383611cb5565b60208301905092915050565b6000602082019050919050565b6000611cf482611c89565b611cfe8185611c94565b9350611d0983611ca5565b8060005b83811015611d3a578151611d218882611cc4565b9750611d2c83611cdc565b925050600181019050611d0d565b5085935050505092915050565b6000604082019050611d5c6000830185611a9e565b8181036020830152611d6e8184611ce9565b90509392505050565b600067ffffffffffffffff821115611d9257611d916111c9565b5b602082029050602081019050919050565b6000611db6611db184611d77565b611229565b90508083825260208201905060208402830185811115611dd957611dd8611270565b5b835b81811015611e025780611dee8882611823565b845260208401935050602081019050611ddb565b5050509392505050565b600082601f830112611e2157611e206111b3565b5b8151611e31848260208601611da3565b91505092915050565b600060208284031215611e5057611e4f6111a9565b5b600082015167ffffffffffffffff811115611e6e57611e6d6111ae565b5b611e7a84828501611e0c565b9150509291505056fea2646970667358221220f72a3fac39326b4525c178d3afdec557073cfb97bf9e58007b65c6f097bbeb2664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB09CD0C3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB09CD0C3 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE83CB79 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xCECA05AB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF6162317 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x26A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xD186819 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x14C758D9 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2B00490D EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x41B29895 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x7DD92787 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29B PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x1182 JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BF JUMPI PUSH2 0x2BE PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP DUP8 PUSH1 0x1 DUP10 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2E9 JUMPI PUSH2 0x2E8 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA7E7C9F9 DUP9 PUSH2 0x3D5 DUP9 DUP9 PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP3 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP PUSH2 0x43E DUP9 DUP9 PUSH2 0xDDF JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD EQ DUP1 PUSH2 0x457 JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD EQ JUMPDEST ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP6 POP POP POP POP POP POP PUSH2 0x5F6 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD LT PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2710 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE51356E8 DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP3 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x62D PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x63A PUSH2 0x1182 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x685 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 POP PUSH2 0x726 DUP8 DUP8 PUSH2 0xCB7 JUMP JUMPDEST ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP5 POP POP POP POP POP PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x75A DUP8 DUP8 PUSH2 0xACF JUMP JUMPDEST ISZERO PUSH2 0x916 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD615DEC DUP6 PUSH1 0xA PUSH2 0x7AA SWAP2 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH2 0x7B4 DUP11 DUP11 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7D9 DUP12 DUP12 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7EC JUMPI PUSH2 0x7EB PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD615DEC DUP5 PUSH1 0xA PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x1A53 JUMP JUMPDEST PUSH2 0x96B DUP11 DUP11 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x990 DUP12 DUP12 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9A3 JUMPI PUSH2 0x9A2 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADB DUP4 DUP4 PUSH2 0xCF9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB49 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBCB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0xBD8 DUP5 DUP5 PUSH2 0xCF9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC9C JUMPI PUSH2 0xC9B PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCDA DUP5 DUP5 PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 DUP4 DUP4 PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD96 SWAP3 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE7 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH2 0xDF9 PUSH2 0x1182 JUMP JUMPDEST DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP7 POP DUP10 PUSH1 0x1 DUP12 MLOAD PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP6 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7D02EBF4 DUP11 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP3 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP9 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP11 PUSH1 0x0 ADD MLOAD DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1021 SWAP3 SWAP2 SWAP1 PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x103E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x1E3A JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x1 DUP5 MLOAD PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x1791 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E60D8E0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1201 DUP3 PUSH2 0x11B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1233 PUSH2 0x119F JUMP JUMPDEST SWAP1 POP PUSH2 0x123F DUP3 DUP3 PUSH2 0x11F8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125E PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A0 DUP3 PUSH2 0x1275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B0 DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP2 EQ PUSH2 0x12BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CD DUP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E6 PUSH2 0x12E1 DUP5 PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1332 JUMPI DUP1 PUSH2 0x131E DUP9 DUP3 PUSH2 0x12BE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x130B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1351 JUMPI PUSH2 0x1350 PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1361 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139F DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BB DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH2 0x13FE PUSH1 0x40 PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x140E DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1422 DUP5 DUP3 DUP6 ADD PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x11AE JUMP JUMPDEST JUMPDEST PUSH2 0x146F DUP6 DUP3 DUP7 ADD PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1480 DUP6 DUP3 DUP7 ADD PUSH2 0x13DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1493 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x14BE PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x148A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14D1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1499 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 PUSH2 0x1512 PUSH2 0x150D DUP5 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x1275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP3 PUSH2 0x14FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153B DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1582 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1591 DUP6 DUP3 DUP7 ADD PUSH2 0x12BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A2 DUP6 DUP3 DUP7 ADD PUSH2 0x12BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C1 DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161A DUP4 DUP4 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163E DUP3 PUSH2 0x15E2 JUMP JUMPDEST PUSH2 0x1648 DUP2 DUP6 PUSH2 0x15ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1653 DUP4 PUSH2 0x15FE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1684 JUMPI DUP2 MLOAD PUSH2 0x166B DUP9 DUP3 PUSH2 0x160E JUMP JUMPDEST SWAP8 POP PUSH2 0x1676 DUP4 PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1657 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16AB DUP2 DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BE DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CE DUP2 PUSH2 0x16B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FA DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170A DUP2 PUSH2 0x16EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1725 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1701 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1734 DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x172B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1760 DUP3 PUSH2 0x151E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1770 DUP2 PUSH2 0x1755 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17FA DUP3 PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH2 0x1805 DUP4 PUSH2 0x136F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1832 DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1847 DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1863 JUMPI PUSH2 0x1862 PUSH2 0x136A JUMP JUMPDEST JUMPDEST PUSH2 0x186D PUSH1 0x40 PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x187D DUP5 DUP3 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1891 DUP5 DUP3 DUP6 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH2 0x18B2 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C1 DUP5 DUP3 DUP6 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18DF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x18EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1909 JUMPI PUSH2 0x1908 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP5 DUP3 DUP6 ADD PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1977 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1962 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1970 DUP6 PUSH2 0x1920 JUMP JUMPDEST SWAP5 POP PUSH2 0x1937 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1990 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1A4C JUMP JUMPDEST DUP2 PUSH2 0x199E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1A4C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x19B4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x19BE JUMPI PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1A4C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x19D0 JUMPI PUSH2 0x19CF PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x19E7 JUMPI PUSH2 0x19E6 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1A4C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1A22 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1A1D JUMPI PUSH2 0x1A1C PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x1A2F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x192D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5E DUP3 PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A69 DUP4 PUSH2 0x13A5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A96 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA7 DUP2 PUSH2 0x136F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AC2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1ACF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1ADC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A9E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B08 DUP5 DUP3 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B20 DUP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B4A DUP5 DUP3 DUP6 ADD PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B76 DUP2 PUSH2 0x1B53 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B93 DUP2 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1B99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BCF DUP2 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BEE JUMPI PUSH2 0x1BED PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFC DUP7 DUP3 DUP8 ADD PUSH2 0x1B84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C0D DUP7 DUP3 DUP8 ADD PUSH2 0x1B84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C1E DUP7 DUP3 DUP8 ADD PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C3D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1C4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x172B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C5A DUP2 PUSH2 0x13A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C75 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x1C82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x1295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 DUP4 DUP4 PUSH2 0x1CB5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF4 DUP3 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x1CFE DUP2 DUP6 PUSH2 0x1C94 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D09 DUP4 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D3A JUMPI DUP2 MLOAD PUSH2 0x1D21 DUP9 DUP3 PUSH2 0x1CC4 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D2C DUP4 PUSH2 0x1CDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D0D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D5C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A9E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D6E DUP2 DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D92 JUMPI PUSH2 0x1D91 PUSH2 0x11C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB6 PUSH2 0x1DB1 DUP5 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DD9 JUMPI PUSH2 0x1DD8 PUSH2 0x1270 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E02 JUMPI DUP1 PUSH2 0x1DEE DUP9 DUP3 PUSH2 0x1823 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DDB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E21 JUMPI PUSH2 0x1E20 PUSH2 0x11B3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1E31 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E50 JUMPI PUSH2 0x1E4F PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x11AE JUMP JUMPDEST JUMPDEST PUSH2 0x1E7A DUP5 DUP3 DUP6 ADD PUSH2 0x1E0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0x2A EXTCODEHASH 0xAC CODECOPY ORIGIN PUSH12 0x4525C178D3AFDEC557073CFB SWAP8 0xBF SWAP15 PC STOP PUSH28 0x65C6F097BBEB2664736F6C6343000813003300000000000000000000 ",
							"sourceMap": "677:4534:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4305:904;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1069:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2334:1121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1681:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2001:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1516:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1371:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3461:838;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1275:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4305:904;4397:34;;:::i;:::-;4443:14;4467;4491:36;;:::i;:::-;4537;;:::i;:::-;4583:28;;:::i;:::-;4630:4;4635:1;4630:7;;;;;;;;:::i;:::-;;;;;;;;4621:16;;4656:4;4675:1;4661:4;:11;:15;;;;:::i;:::-;4656:21;;;;;;;;:::i;:::-;;;;;;;;4647:30;;4698:15;;;;;;;;;;:23;;;4722:8;4698:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4687:44;;4757:15;;;;;;;;;;:19;;;4777:8;4787:21;4793:6;4801;4787:5;:21::i;:::-;4757:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4741:68;;4835:25;4845:4;4851:8;4835:9;:25::i;:::-;4819:41;;4897:1;4874:13;:19;;;:24;:52;;;;4925:1;4902:13;:19;;;:24;4874:52;4870:106;;;4935:41;;;;;;;;4959:1;4935:41;;;;4972:2;4935:41;;;;;4928:48;;;;;;;;;4870:106;5013:13;:19;;;4990:13;:19;;;:42;4986:125;;5041:15;;;;;;;;;;:23;;;5065:45;;;;;;;;5089:6;5065:45;;;;5107:1;5065:45;;;;;5041:70;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5034:77;;;;;;;;;4986:125;5129:15;;;;;;;;;;:21;;;5151:13;5166;5129:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5121:59;;5197:5;5190:12;;;;;;;4305:904;;;;;:::o;1069:103::-;1116:15;1150;;;;;;;;;;;1143:22;;1069:103;:::o;2334:1121::-;2402:22;;:::i;:::-;2436:15;2461;2486:14;2510:28;;:::i;:::-;2575:6;2560:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2548:45;;2630:6;2615:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2603:45;;2662:33;2680:6;2688;2662:17;:33::i;:::-;2658:87;;;2704:41;;;;;;;;2728:1;2704:41;;;;2741:2;2704:41;;;;;2697:48;;;;;;;;2658:87;2759:45;2789:6;2797;2759:29;:45::i;:::-;2755:394;;;2829:7;;;;;;;;;;;:13;;;2864:9;2860:2;:13;;;;:::i;:::-;2891:28;2904:6;2912;2891:12;:28::i;:::-;2920:1;2891:31;;;;;;;;:::i;:::-;;;;;;;;2940:28;2953:6;2961;2940:12;:28::i;:::-;2969:1;2940:31;;;;;;;;:::i;:::-;;;;;;;;2829:156;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2820:165;;3007:53;;;;;;;;3031:6;3007:53;;;;3049:9;3007:53;;;;;2999:61;;3082:15;;;;;;;;;;:23;;;3106:5;3082:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3074:38;;3133:5;3126:12;;;;;;;;2755:394;3167:7;;;;;;;;;;;:13;;;3198:9;3194:2;:13;;;;:::i;:::-;3221:28;3234:6;3242;3221:12;:28::i;:::-;3250:1;3221:31;;;;;;;;:::i;:::-;;;;;;;;3266:28;3279:6;3287;3266:12;:28::i;:::-;3295:1;3266:31;;;;;;;;:::i;:::-;;;;;;;;3167:140;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3158:149;;3325:53;;;;;;;;3349:6;3325:53;;;;3367:9;3325:53;;;;;3317:61;;3396:15;;;;;;;;;;:23;;;3420:5;3396:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3388:38;;3443:5;3436:12;;;;;;2334:1121;;;;;:::o;2158:170::-;2250:4;2283:29;2297:6;2305;2283:13;:29::i;:::-;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2273:48;;:6;:48;;;2266:55;;2158:170;;;;:::o;1681:314::-;1756:16;1784:25;1844:1;1830:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:27;;1920:29;1934:6;1942;1920:13;:29::i;:::-;:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1856:107;;;;;;;;;;;1870:8;1879:1;1870:11;;;;;;;;:::i;:::-;;;;;;;1895:8;1904:1;1895:11;;;;;;;;:::i;:::-;;;;;;;1856:107;;;;;;;;;;1980:8;1973:15;;;1681:314;;;;:::o;2001:151::-;2081:4;2143:1;2104:41;;:27;2116:6;2124;2104:11;:27::i;:::-;:41;;;2097:48;;2001:151;;;;:::o;1516:159::-;1592:14;1640:27;1652:6;1660;1640:11;:27::i;:::-;1618:50;;1516:159;;;;:::o;1178:91::-;1218:17;1254:8;;;;;;;;;;;1247:15;;1178:91;:::o;1371:139::-;1445:7;1471:8;;;;;;;;;;;:16;;;1488:6;1496;1471:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:39;;1371:139;;;;:::o;3461:838::-;3557:22;;:::i;:::-;3591:14;3615;3639:15;3664;3689:24;3723:14;3747:32;;:::i;:::-;3798:4;3803:1;3798:7;;;;;;;;:::i;:::-;;;;;;;;3789:16;;3824:4;3843:1;3829:4;:11;:15;;;;:::i;:::-;3824:21;;;;;;;;:::i;:::-;;;;;;;;3815:30;;3882:6;3867:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3855:45;;3937:6;3922:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3910:45;;3976:15;;;;;;;;;;:29;;;4006:8;4016:9;3976:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3965:61;;4046:7;;;;;;;;;;;:21;;;4068:8;:14;;;4084:4;4046:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4036:53;;4108:7;4133:1;4116:7;:14;:18;;;;:::i;:::-;4108:27;;;;;;;;:::i;:::-;;;;;;;;4099:36;;4157:53;;;;;;;;4181:6;4157:53;;;;4199:9;4157:53;;;;;4145:65;;4232:15;;;;;;;;;;:23;;;4256:9;4232:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4220:46;;4283:9;4276:16;;;;;;;;;3461:838;;;;:::o;1275:90::-;1314:18;1351:7;;;;;;;;;;;1344:14;;1275:90;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:139::-;2021:5;2059:6;2046:20;2037:29;;2075:33;2102:5;2075:33;:::i;:::-;1975:139;;;;:::o;2137:710::-;2233:5;2258:81;2274:64;2331:6;2274:64;:::i;:::-;2258:81;:::i;:::-;2249:90;;2359:5;2388:6;2381:5;2374:21;2422:4;2415:5;2411:16;2404:23;;2475:4;2467:6;2463:17;2455:6;2451:30;2504:3;2496:6;2493:15;2490:122;;;2523:79;;:::i;:::-;2490:122;2638:6;2621:220;2655:6;2650:3;2647:15;2621:220;;;2730:3;2759:37;2792:3;2780:10;2759:37;:::i;:::-;2754:3;2747:50;2826:4;2821:3;2817:14;2810:21;;2697:144;2681:4;2676:3;2672:14;2665:21;;2621:220;;;2625:21;2239:608;;2137:710;;;;;:::o;2870:370::-;2941:5;2990:3;2983:4;2975:6;2971:17;2967:27;2957:122;;2998:79;;:::i;:::-;2957:122;3115:6;3102:20;3140:94;3230:3;3222:6;3215:4;3207:6;3203:17;3140:94;:::i;:::-;3131:103;;2947:293;2870:370;;;;:::o;3246:117::-;3355:1;3352;3345:12;3492:77;3529:7;3558:5;3547:16;;3492:77;;;:::o;3575:122::-;3648:24;3666:5;3648:24;:::i;:::-;3641:5;3638:35;3628:63;;3687:1;3684;3677:12;3628:63;3575:122;:::o;3703:139::-;3749:5;3787:6;3774:20;3765:29;;3803:33;3830:5;3803:33;:::i;:::-;3703:139;;;;:::o;3848:86::-;3883:7;3923:4;3916:5;3912:16;3901:27;;3848:86;;;:::o;3940:118::-;4011:22;4027:5;4011:22;:::i;:::-;4004:5;4001:33;3991:61;;4048:1;4045;4038:12;3991:61;3940:118;:::o;4064:135::-;4108:5;4146:6;4133:20;4124:29;;4162:31;4187:5;4162:31;:::i;:::-;4064:135;;;;:::o;4235:582::-;4314:5;4358:4;4346:9;4341:3;4337:19;4333:30;4330:117;;;4366:79;;:::i;:::-;4330:117;4465:21;4481:4;4465:21;:::i;:::-;4456:30;;4546:1;4586:49;4631:3;4622:6;4611:9;4607:22;4586:49;:::i;:::-;4579:4;4572:5;4568:16;4561:75;4496:151;4710:2;4751:47;4794:3;4785:6;4774:9;4770:22;4751:47;:::i;:::-;4744:4;4737:5;4733:16;4726:73;4657:153;4235:582;;;;:::o;4823:744::-;4946:6;4954;5003:2;4991:9;4982:7;4978:23;4974:32;4971:119;;;5009:79;;:::i;:::-;4971:119;5157:1;5146:9;5142:17;5129:31;5187:18;5179:6;5176:30;5173:117;;;5209:79;;:::i;:::-;5173:117;5314:78;5384:7;5375:6;5364:9;5360:22;5314:78;:::i;:::-;5304:88;;5100:302;5441:2;5467:83;5542:7;5533:6;5522:9;5518:22;5467:83;:::i;:::-;5457:93;;5412:148;4823:744;;;;;:::o;5573:108::-;5650:24;5668:5;5650:24;:::i;:::-;5645:3;5638:37;5573:108;;:::o;5687:102::-;5760:22;5776:5;5760:22;:::i;:::-;5755:3;5748:35;5687:102;;:::o;5851:518::-;6008:4;6003:3;5999:14;6096:4;6089:5;6085:16;6079:23;6115:63;6172:4;6167:3;6163:14;6149:12;6115:63;:::i;:::-;6023:165;6274:4;6267:5;6263:16;6257:23;6293:59;6346:4;6341:3;6337:14;6323:12;6293:59;:::i;:::-;6198:164;5977:392;5851:518;;:::o;6375:342::-;6528:4;6566:2;6555:9;6551:18;6543:26;;6579:131;6707:1;6696:9;6692:17;6683:6;6579:131;:::i;:::-;6375:342;;;;:::o;6723:60::-;6751:3;6772:5;6765:12;;6723:60;;;:::o;6789:142::-;6839:9;6872:53;6890:34;6899:24;6917:5;6899:24;:::i;:::-;6890:34;:::i;:::-;6872:53;:::i;:::-;6859:66;;6789:142;;;:::o;6937:126::-;6987:9;7020:37;7051:5;7020:37;:::i;:::-;7007:50;;6937:126;;;:::o;7069:149::-;7142:9;7175:37;7206:5;7175:37;:::i;:::-;7162:50;;7069:149;;;:::o;7224:177::-;7334:60;7388:5;7334:60;:::i;:::-;7329:3;7322:73;7224:177;;:::o;7407:268::-;7523:4;7561:2;7550:9;7546:18;7538:26;;7574:94;7665:1;7654:9;7650:17;7641:6;7574:94;:::i;:::-;7407:268;;;;:::o;7681:474::-;7749:6;7757;7806:2;7794:9;7785:7;7781:23;7777:32;7774:119;;;7812:79;;:::i;:::-;7774:119;7932:1;7957:53;8002:7;7993:6;7982:9;7978:22;7957:53;:::i;:::-;7947:63;;7903:117;8059:2;8085:53;8130:7;8121:6;8110:9;8106:22;8085:53;:::i;:::-;8075:63;;8030:118;7681:474;;;;;:::o;8161:90::-;8195:7;8238:5;8231:13;8224:21;8213:32;;8161:90;;;:::o;8257:109::-;8338:21;8353:5;8338:21;:::i;:::-;8333:3;8326:34;8257:109;;:::o;8372:210::-;8459:4;8497:2;8486:9;8482:18;8474:26;;8510:65;8572:1;8561:9;8557:17;8548:6;8510:65;:::i;:::-;8372:210;;;;:::o;8588:114::-;8655:6;8689:5;8683:12;8673:22;;8588:114;;;:::o;8708:184::-;8807:11;8841:6;8836:3;8829:19;8881:4;8876:3;8872:14;8857:29;;8708:184;;;;:::o;8898:132::-;8965:4;8988:3;8980:11;;9018:4;9013:3;9009:14;9001:22;;8898:132;;;:::o;9036:179::-;9105:10;9126:46;9168:3;9160:6;9126:46;:::i;:::-;9204:4;9199:3;9195:14;9181:28;;9036:179;;;;:::o;9221:113::-;9291:4;9323;9318:3;9314:14;9306:22;;9221:113;;;:::o;9370:732::-;9489:3;9518:54;9566:5;9518:54;:::i;:::-;9588:86;9667:6;9662:3;9588:86;:::i;:::-;9581:93;;9698:56;9748:5;9698:56;:::i;:::-;9777:7;9808:1;9793:284;9818:6;9815:1;9812:13;9793:284;;;9894:6;9888:13;9921:63;9980:3;9965:13;9921:63;:::i;:::-;9914:70;;10007:60;10060:6;10007:60;:::i;:::-;9997:70;;9853:224;9840:1;9837;9833:9;9828:14;;9793:284;;;9797:14;10093:3;10086:10;;9494:608;;;9370:732;;;;:::o;10108:373::-;10251:4;10289:2;10278:9;10274:18;10266:26;;10338:9;10332:4;10328:20;10324:1;10313:9;10309:17;10302:47;10366:108;10469:4;10460:6;10366:108;:::i;:::-;10358:116;;10108:373;;;;:::o;10487:149::-;10560:9;10593:37;10624:5;10593:37;:::i;:::-;10580:50;;10487:149;;;:::o;10642:177::-;10752:60;10806:5;10752:60;:::i;:::-;10747:3;10740:73;10642:177;;:::o;10825:268::-;10941:4;10979:2;10968:9;10964:18;10956:26;;10992:94;11083:1;11072:9;11068:17;11059:6;10992:94;:::i;:::-;10825:268;;;;:::o;11099:152::-;11175:9;11208:37;11239:5;11208:37;:::i;:::-;11195:50;;11099:152;;;:::o;11257:183::-;11370:63;11427:5;11370:63;:::i;:::-;11365:3;11358:76;11257:183;;:::o;11446:274::-;11565:4;11603:2;11592:9;11588:18;11580:26;;11616:97;11710:1;11699:9;11695:17;11686:6;11616:97;:::i;:::-;11446:274;;;;:::o;11726:118::-;11813:24;11831:5;11813:24;:::i;:::-;11808:3;11801:37;11726:118;;:::o;11850:222::-;11943:4;11981:2;11970:9;11966:18;11958:26;;11994:71;12062:1;12051:9;12047:17;12038:6;11994:71;:::i;:::-;11850:222;;;;:::o;12078:153::-;12155:9;12188:37;12219:5;12188:37;:::i;:::-;12175:50;;12078:153;;;:::o;12237:185::-;12351:64;12409:5;12351:64;:::i;:::-;12346:3;12339:77;12237:185;;:::o;12428:276::-;12548:4;12586:2;12575:9;12571:18;12563:26;;12599:98;12694:1;12683:9;12679:17;12670:6;12599:98;:::i;:::-;12428:276;;;;:::o;12710:180::-;12758:77;12755:1;12748:88;12855:4;12852:1;12845:15;12879:4;12876:1;12869:15;12896:180;12944:77;12941:1;12934:88;13041:4;13038:1;13031:15;13065:4;13062:1;13055:15;13082:194;13122:4;13142:20;13160:1;13142:20;:::i;:::-;13137:25;;13176:20;13194:1;13176:20;:::i;:::-;13171:25;;13220:1;13217;13213:9;13205:17;;13244:1;13238:4;13235:11;13232:37;;;13249:18;;:::i;:::-;13232:37;13082:194;;;;:::o;13282:143::-;13339:5;13370:6;13364:13;13355:22;;13386:33;13413:5;13386:33;:::i;:::-;13282:143;;;;:::o;13431:139::-;13486:5;13517:6;13511:13;13502:22;;13533:31;13558:5;13533:31;:::i;:::-;13431:139;;;;:::o;13606:615::-;13696:5;13740:4;13728:9;13723:3;13719:19;13715:30;13712:117;;;13748:79;;:::i;:::-;13712:117;13847:21;13863:4;13847:21;:::i;:::-;13838:30;;13928:1;13968:60;14024:3;14015:6;14004:9;14000:22;13968:60;:::i;:::-;13961:4;13954:5;13950:16;13943:86;13878:162;14103:2;14144:58;14198:3;14189:6;14178:9;14174:22;14144:58;:::i;:::-;14137:4;14130:5;14126:16;14119:84;14050:164;13606:615;;;;:::o;14227:411::-;14327:6;14376:2;14364:9;14355:7;14351:23;14347:32;14344:119;;;14382:79;;:::i;:::-;14344:119;14502:1;14527:94;14613:7;14604:6;14593:9;14589:22;14527:94;:::i;:::-;14517:104;;14473:158;14227:411;;;;:::o;14644:573::-;14885:4;14923:3;14912:9;14908:19;14900:27;;14937:131;15065:1;15054:9;15050:17;15041:6;14937:131;:::i;:::-;15078:132;15206:2;15195:9;15191:18;15182:6;15078:132;:::i;:::-;14644:573;;;;;:::o;15223:347::-;15291:6;15340:2;15328:9;15319:7;15315:23;15311:32;15308:119;;;15346:79;;:::i;:::-;15308:119;15466:1;15491:62;15545:7;15536:6;15525:9;15521:22;15491:62;:::i;:::-;15481:72;;15437:126;15223:347;;;;:::o;15576:102::-;15618:8;15665:5;15662:1;15658:13;15637:34;;15576:102;;;:::o;15684:848::-;15745:5;15752:4;15776:6;15767:15;;15800:5;15791:14;;15814:712;15835:1;15825:8;15822:15;15814:712;;;15930:4;15925:3;15921:14;15915:4;15912:24;15909:50;;;15939:18;;:::i;:::-;15909:50;15989:1;15979:8;15975:16;15972:451;;;16404:4;16397:5;16393:16;16384:25;;15972:451;16454:4;16448;16444:15;16436:23;;16484:32;16507:8;16484:32;:::i;:::-;16472:44;;15814:712;;;15684:848;;;;;;;:::o;16538:1073::-;16592:5;16783:8;16773:40;;16804:1;16795:10;;16806:5;;16773:40;16832:4;16822:36;;16849:1;16840:10;;16851:5;;16822:36;16918:4;16966:1;16961:27;;;;17002:1;16997:191;;;;16911:277;;16961:27;16979:1;16970:10;;16981:5;;;16997:191;17042:3;17032:8;17029:17;17026:43;;;17049:18;;:::i;:::-;17026:43;17098:8;17095:1;17091:16;17082:25;;17133:3;17126:5;17123:14;17120:40;;;17140:18;;:::i;:::-;17120:40;17173:5;;;16911:277;;17297:2;17287:8;17284:16;17278:3;17272:4;17269:13;17265:36;17247:2;17237:8;17234:16;17229:2;17223:4;17220:12;17216:35;17200:111;17197:246;;;17353:8;17347:4;17343:19;17334:28;;17388:3;17381:5;17378:14;17375:40;;;17395:18;;:::i;:::-;17375:40;17428:5;;17197:246;17468:42;17506:3;17496:8;17490:4;17487:1;17468:42;:::i;:::-;17453:57;;;;17542:4;17537:3;17533:14;17526:5;17523:25;17520:51;;;17551:18;;:::i;:::-;17520:51;17600:4;17593:5;17589:16;17580:25;;16538:1073;;;;;;:::o;17617:281::-;17675:5;17699:23;17717:4;17699:23;:::i;:::-;17691:31;;17743:25;17759:8;17743:25;:::i;:::-;17731:37;;17787:104;17824:66;17814:8;17808:4;17787:104;:::i;:::-;17778:113;;17617:281;;;;:::o;17904:118::-;17991:24;18009:5;17991:24;:::i;:::-;17986:3;17979:37;17904:118;;:::o;18028:442::-;18177:4;18215:2;18204:9;18200:18;18192:26;;18228:71;18296:1;18285:9;18281:17;18272:6;18228:71;:::i;:::-;18309:72;18377:2;18366:9;18362:18;18353:6;18309:72;:::i;:::-;18391;18459:2;18448:9;18444:18;18435:6;18391:72;:::i;:::-;18028:442;;;;;;:::o;18476:351::-;18546:6;18595:2;18583:9;18574:7;18570:23;18566:32;18563:119;;;18601:79;;:::i;:::-;18563:119;18721:1;18746:64;18802:7;18793:6;18782:9;18778:22;18746:64;:::i;:::-;18736:74;;18692:128;18476:351;;;;:::o;18833:143::-;18890:5;18921:6;18915:13;18906:22;;18937:33;18964:5;18937:33;:::i;:::-;18833:143;;;;:::o;18982:351::-;19052:6;19101:2;19089:9;19080:7;19076:23;19072:32;19069:119;;;19107:79;;:::i;:::-;19069:119;19227:1;19252:64;19308:7;19299:6;19288:9;19284:22;19252:64;:::i;:::-;19242:74;;19198:128;18982:351;;;;:::o;19339:114::-;19376:7;19416:30;19409:5;19405:42;19394:53;;19339:114;;;:::o;19459:122::-;19532:24;19550:5;19532:24;:::i;:::-;19525:5;19522:35;19512:63;;19571:1;19568;19561:12;19512:63;19459:122;:::o;19587:143::-;19644:5;19675:6;19669:13;19660:22;;19691:33;19718:5;19691:33;:::i;:::-;19587:143;;;;:::o;19736:93::-;19772:7;19812:10;19805:5;19801:22;19790:33;;19736:93;;;:::o;19835:120::-;19907:23;19924:5;19907:23;:::i;:::-;19900:5;19897:34;19887:62;;19945:1;19942;19935:12;19887:62;19835:120;:::o;19961:141::-;20017:5;20048:6;20042:13;20033:22;;20064:32;20090:5;20064:32;:::i;:::-;19961:141;;;;:::o;20108:661::-;20195:6;20203;20211;20260:2;20248:9;20239:7;20235:23;20231:32;20228:119;;;20266:79;;:::i;:::-;20228:119;20386:1;20411:64;20467:7;20458:6;20447:9;20443:22;20411:64;:::i;:::-;20401:74;;20357:128;20524:2;20550:64;20606:7;20597:6;20586:9;20582:22;20550:64;:::i;:::-;20540:74;;20495:129;20663:2;20689:63;20744:7;20735:6;20724:9;20720:22;20689:63;:::i;:::-;20679:73;;20634:128;20108:661;;;;;:::o;20775:332::-;20896:4;20934:2;20923:9;20919:18;20911:26;;20947:71;21015:1;21004:9;21000:17;20991:6;20947:71;:::i;:::-;21028:72;21096:2;21085:9;21081:18;21072:6;21028:72;:::i;:::-;20775:332;;;;;:::o;21113:112::-;21196:22;21212:5;21196:22;:::i;:::-;21191:3;21184:35;21113:112;;:::o;21231:444::-;21408:4;21446:2;21435:9;21431:18;21423:26;;21459:131;21587:1;21576:9;21572:17;21563:6;21459:131;:::i;:::-;21600:68;21664:2;21653:9;21649:18;21640:6;21600:68;:::i;:::-;21231:444;;;;;:::o;21681:114::-;21748:6;21782:5;21776:12;21766:22;;21681:114;;;:::o;21801:184::-;21900:11;21934:6;21929:3;21922:19;21974:4;21969:3;21965:14;21950:29;;21801:184;;;;:::o;21991:132::-;22058:4;22081:3;22073:11;;22111:4;22106:3;22102:14;22094:22;;21991:132;;;:::o;22129:108::-;22206:24;22224:5;22206:24;:::i;:::-;22201:3;22194:37;22129:108;;:::o;22243:179::-;22312:10;22333:46;22375:3;22367:6;22333:46;:::i;:::-;22411:4;22406:3;22402:14;22388:28;;22243:179;;;;:::o;22428:113::-;22498:4;22530;22525:3;22521:14;22513:22;;22428:113;;;:::o;22577:732::-;22696:3;22725:54;22773:5;22725:54;:::i;:::-;22795:86;22874:6;22869:3;22795:86;:::i;:::-;22788:93;;22905:56;22955:5;22905:56;:::i;:::-;22984:7;23015:1;23000:284;23025:6;23022:1;23019:13;23000:284;;;23101:6;23095:13;23128:63;23187:3;23172:13;23128:63;:::i;:::-;23121:70;;23214:60;23267:6;23214:60;:::i;:::-;23204:70;;23060:224;23047:1;23044;23040:9;23035:14;;23000:284;;;23004:14;23300:3;23293:10;;22701:608;;;22577:732;;;;:::o;23315:483::-;23486:4;23524:2;23513:9;23509:18;23501:26;;23537:71;23605:1;23594:9;23590:17;23581:6;23537:71;:::i;:::-;23655:9;23649:4;23645:20;23640:2;23629:9;23625:18;23618:48;23683:108;23786:4;23777:6;23683:108;:::i;:::-;23675:116;;23315:483;;;;;:::o;23804:311::-;23881:4;23971:18;23963:6;23960:30;23957:56;;;23993:18;;:::i;:::-;23957:56;24043:4;24035:6;24031:17;24023:25;;24103:4;24097;24093:15;24085:23;;23804:311;;;:::o;24138:732::-;24245:5;24270:81;24286:64;24343:6;24286:64;:::i;:::-;24270:81;:::i;:::-;24261:90;;24371:5;24400:6;24393:5;24386:21;24434:4;24427:5;24423:16;24416:23;;24487:4;24479:6;24475:17;24467:6;24463:30;24516:3;24508:6;24505:15;24502:122;;;24535:79;;:::i;:::-;24502:122;24650:6;24633:231;24667:6;24662:3;24659:15;24633:231;;;24742:3;24771:48;24815:3;24803:10;24771:48;:::i;:::-;24766:3;24759:61;24849:4;24844:3;24840:14;24833:21;;24709:155;24693:4;24688:3;24684:14;24677:21;;24633:231;;;24637:21;24251:619;;24138:732;;;;;:::o;24893:385::-;24975:5;25024:3;25017:4;25009:6;25005:17;25001:27;24991:122;;25032:79;;:::i;:::-;24991:122;25142:6;25136:13;25167:105;25268:3;25260:6;25253:4;25245:6;25241:17;25167:105;:::i;:::-;25158:114;;24981:297;24893:385;;;;:::o;25284:554::-;25379:6;25428:2;25416:9;25407:7;25403:23;25399:32;25396:119;;;25434:79;;:::i;:::-;25396:119;25575:1;25564:9;25560:17;25554:24;25605:18;25597:6;25594:30;25591:117;;;25627:79;;:::i;:::-;25591:117;25732:89;25813:7;25804:6;25793:9;25789:22;25732:89;:::i;:::-;25722:99;;25525:306;25284:554;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1573000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountOut(address[],(uint256,uint8))": "infinite",
								"factory()": "infinite",
								"fixedPointMath()": "infinite",
								"pairAddress(address,address)": "infinite",
								"pairInterface(address,address)": "infinite",
								"pairIsSameLayoutAsGivenTokens(address,address)": "infinite",
								"pairIsZeroAddress(address,address)": "infinite",
								"pairReserves(address,address)": "infinite",
								"price(address,address)": "infinite",
								"router()": "infinite",
								"yield(address[],(uint256,uint8))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 835,
									"end": 1063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 948,
									"end": 962,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 914,
									"end": 929,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 914,
									"end": 929,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 914,
									"end": 963,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 914,
									"end": 963,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 914,
									"end": 963,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 914,
									"end": 963,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 973,
									"end": 981,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 973,
									"end": 981,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 973,
									"end": 1010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1056,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 835,
									"end": 1063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 5211,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f72a3fac39326b4525c178d3afdec557073cfb97bf9e58007b65c6f097bbeb2664736f6c63430008130033",
									".code": [
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "B09CD0C3"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "B09CD0C3"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "BE83CB79"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "C45A0155"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "CECA05AB"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "F6162317"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "F887EA40"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "D186819"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "14C758D9"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "2B00490D"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "41B29895"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "7DD92787"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 5211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4305,
											"end": 5209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4305,
											"end": 5209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4305,
											"end": 5209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1069,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1069,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2334,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2334,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2158,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2158,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1681,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1681,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1681,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2001,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2001,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2001,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1516,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1516,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1516,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1178,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1178,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1371,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1371,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1371,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3461,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3461,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1275,
											"end": 1365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1275,
											"end": 1365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4397,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4397,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4431,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4397,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4491,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4491,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4527,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4491,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4537,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4537,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4583,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4583,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4611,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4583,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4630,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4637,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4660,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4661,
											"end": 4665,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4661,
											"end": 4676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4661,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4661,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4656,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4677,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "3E60D8E0"
										},
										{
											"begin": 4722,
											"end": 4730,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4698,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4698,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4698,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4731,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4757,
											"end": 4776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "A7E7C9F9"
										},
										{
											"begin": 4777,
											"end": 4785,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4799,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4787,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4757,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4757,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4845,
											"end": 4849,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4859,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4835,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4898,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4921,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4926,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4874,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4976,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4870,
											"end": 4976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4928,
											"end": 4976,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4976,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4870,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5032,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4986,
											"end": 5111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "PUSH",
											"source": 1,
											"value": "3E60D8E0"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5041,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5041,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5034,
											"end": 5111,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4986,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5129,
											"end": 5150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "E51356E8"
										},
										{
											"begin": 5151,
											"end": 5164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5129,
											"end": 5180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5129,
											"end": 5180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5129,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 5209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2402,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2510,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2510,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2538,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2510,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2581,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2560,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2560,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2615,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2694,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2662,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2695,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2662,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2745,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2658,
											"end": 2745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2697,
											"end": 2745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2745,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2658,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2759,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2804,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2759,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 3149,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2755,
											"end": 3149,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2842,
											"name": "PUSH",
											"source": 1,
											"value": "AD615DEC"
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2860,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2860,
											"end": 2873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2860,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2860,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2891,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2891,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2940,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2940,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2940,
											"end": 2971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2829,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2829,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2829,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "3E60D8E0"
										},
										{
											"begin": 3106,
											"end": 3111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3082,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3082,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 3149,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2755,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "AD615DEC"
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3194,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3221,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3221,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3221,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3266,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3266,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3266,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3167,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3167,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3167,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "3E60D8E0"
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3396,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2283,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2312,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2283,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "DFE1681"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2283,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2283,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2321,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1784,
											"end": 1809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1920,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1920,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1961,
											"name": "PUSH",
											"source": 1,
											"value": "902F1AC"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1920,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1920,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1870,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1895,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2116,
											"end": 2122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2104,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2131,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2104,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2145,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1640,
											"end": 1667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1667,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1640,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1487,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "E6A43905"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1471,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1471,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1471,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3557,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3713,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3747,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3747,
											"end": 3779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3747,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3798,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3805,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3829,
											"end": 3833,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3829,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3824,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3845,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3867,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3867,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3900,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3953,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3922,
											"end": 3955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3922,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3955,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH",
											"source": 1,
											"value": "7D02EBF4"
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3976,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3976,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4026,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "D06CA61F"
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4088,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4046,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4046,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4046,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4089,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4116,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4116,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4108,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "3E60D8E0"
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4232,
											"end": 4266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4232,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 834,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 975,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1099,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1359,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1362,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1417,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1607,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1490,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1811,
											"end": 1835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1920,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1945,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2075,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2274,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2258,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2480,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2508,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2523,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2662,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2792,
											"end": 2795,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2759,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2824,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2831,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 2988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 2994,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2998,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3140,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3363,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3246,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3569,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3492,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3697,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3575,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3648,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3672,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3648,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3638,
											"end": 3673,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3689,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3628,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3794,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3830,
											"end": 3835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3803,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3836,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3803,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3934,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3848,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3916,
											"end": 3921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3928,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4058,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3940,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4027,
											"end": 4032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4011,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4011,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4009,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4034,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3991,
											"end": 4052,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4052,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3991,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4199,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4064,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4153,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4187,
											"end": 4192,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4162,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4193,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4162,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4199,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4064,
											"end": 4199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4817,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4235,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4314,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4362,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4344,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4333,
											"end": 4363,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4330,
											"end": 4447,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4330,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 4330,
											"end": 4447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4366,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4366,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4445,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4366,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4330,
											"end": 4447,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 4330,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4481,
											"end": 4485,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4465,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 4631,
											"end": 4634,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4586,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4635,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 4586,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4712,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4794,
											"end": 4797,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4751,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4798,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4751,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4748,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4817,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4817,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4991,
											"end": 5000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 4989,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5001,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5006,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 5090,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 4971,
											"end": 5090,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5009,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5009,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5088,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5009,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 5090,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 4971,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5160,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5206,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5173,
											"end": 5290,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5209,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5209,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5288,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5209,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5290,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5173,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5384,
											"end": 5391,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5373,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5360,
											"end": 5382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5314,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5392,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5314,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5392,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5441,
											"end": 5443,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5467,
											"end": 5550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5467,
											"end": 5550,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5467,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 5567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5681,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5573,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5668,
											"end": 5673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5650,
											"end": 5674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5674,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5650,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5789,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5687,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5776,
											"end": 5781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5760,
											"end": 5782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5782,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5760,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 6369,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5851,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6102,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6170,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 6115,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6023,
											"end": 6188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6274,
											"end": 6278,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6257,
											"end": 6280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6293,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6293,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6293,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6293,
											"end": 6352,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6293,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 6369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 6369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 6369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6717,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6375,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6528,
											"end": 6532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6707,
											"end": 6708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6689,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6579,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6710,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6579,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6717,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6931,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6789,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6890,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6917,
											"end": 6922,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6899,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6890,
											"end": 6924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6924,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6890,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6872,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6872,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7063,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6937,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 6996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 7051,
											"end": 7056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7020,
											"end": 7057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7057,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 7020,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7218,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7069,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7175,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 7206,
											"end": 7211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7175,
											"end": 7212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7212,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 7175,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7401,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7224,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7334,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7334,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7334,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7334,
											"end": 7394,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7334,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7329,
											"end": 7332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7675,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7407,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 7559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7538,
											"end": 7564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7538,
											"end": 7564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7574,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7668,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7574,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7794,
											"end": 7803,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7809,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7893,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7774,
											"end": 7893,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 7812,
											"end": 7891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7893,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7774,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 8002,
											"end": 8009,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7957,
											"end": 8010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8010,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 7957,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 8010,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 8010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8130,
											"end": 8137,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8119,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8106,
											"end": 8128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 8085,
											"end": 8138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8138,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8085,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8138,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 8155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8251,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8161,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8244,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8245,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8213,
											"end": 8245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8213,
											"end": 8245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8366,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8257,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 8353,
											"end": 8358,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8338,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8359,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 8338,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8582,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8372,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8499,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 8572,
											"end": 8573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8557,
											"end": 8574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8548,
											"end": 8554,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8510,
											"end": 8575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 8575,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 8510,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8582,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8702,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8588,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8655,
											"end": 8661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8695,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8829,
											"end": 8848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 9030,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 8898,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8988,
											"end": 8991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9009,
											"end": 9023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9001,
											"end": 9023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9001,
											"end": 9023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 9030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 9030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 9030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9215,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 9036,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 9168,
											"end": 9171,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 9126,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9172,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 9126,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9199,
											"end": 9202,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9334,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9221,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9314,
											"end": 9328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 10102,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9370,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9489,
											"end": 9492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9518,
											"end": 9572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 9566,
											"end": 9571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 9518,
											"end": 9572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9572,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 9518,
											"end": 9572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9667,
											"end": 9673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9662,
											"end": 9665,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 9588,
											"end": 9674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9674,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9588,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9674,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 9748,
											"end": 9753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 9698,
											"end": 9754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9754,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 9698,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9777,
											"end": 9784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9818,
											"end": 9824,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9825,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9901,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9921,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 9980,
											"end": 9983,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 9978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9921,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 9921,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9921,
											"end": 9984,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 9921,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9984,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10007,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10060,
											"end": 10066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10007,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10007,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10007,
											"end": 10067,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 10007,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9997,
											"end": 10067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9997,
											"end": 10067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 10077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9833,
											"end": 9842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 9793,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9797,
											"end": 9811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10086,
											"end": 10096,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10086,
											"end": 10096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9494,
											"end": 10102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9494,
											"end": 10102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9494,
											"end": 10102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 10102,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 10102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 10102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 10102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 10102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10481,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 10108,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10251,
											"end": 10255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10338,
											"end": 10347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10332,
											"end": 10336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10324,
											"end": 10325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10313,
											"end": 10322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10309,
											"end": 10326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10302,
											"end": 10349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 10469,
											"end": 10473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 10366,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10474,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 10366,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10636,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10487,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10560,
											"end": 10569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10624,
											"end": 10629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10593,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10593,
											"end": 10630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10593,
											"end": 10630,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 10593,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10819,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 10642,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10752,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10752,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10752,
											"end": 10812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10752,
											"end": 10812,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 10752,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 11093,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10825,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 10945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 10982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 10982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11068,
											"end": 11085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11065,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 10992,
											"end": 11086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11086,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 10992,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 11093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 11093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 11093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 11093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10825,
											"end": 11093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11251,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 11099,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11175,
											"end": 11184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11208,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 11239,
											"end": 11244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 11208,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11245,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 11208,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11440,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 11257,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11370,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11427,
											"end": 11432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11370,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 11370,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11370,
											"end": 11433,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11370,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11358,
											"end": 11434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11720,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 11446,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11565,
											"end": 11569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11603,
											"end": 11605,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11592,
											"end": 11601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 11710,
											"end": 11711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11695,
											"end": 11712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11686,
											"end": 11692,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 11616,
											"end": 11713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11713,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 11616,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11720,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11726,
											"end": 11844,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 11726,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 11831,
											"end": 11836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 11813,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11837,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 11813,
											"end": 11837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11808,
											"end": 11811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11801,
											"end": 11838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11726,
											"end": 11844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11726,
											"end": 11844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11726,
											"end": 11844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 12072,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 11850,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11981,
											"end": 11983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11966,
											"end": 11984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 11984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 11984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12062,
											"end": 12063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12060,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12038,
											"end": 12044,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 11994,
											"end": 12065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 11994,
											"end": 12065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 12072,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 12072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 12072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 12072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 12072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12078,
											"end": 12231,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 12078,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12188,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 12219,
											"end": 12224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 12188,
											"end": 12225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12225,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 12188,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12078,
											"end": 12231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12078,
											"end": 12231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12078,
											"end": 12231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12078,
											"end": 12231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12237,
											"end": 12422,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 12237,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 12409,
											"end": 12414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 12351,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12415,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 12351,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12346,
											"end": 12349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12237,
											"end": 12422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12237,
											"end": 12422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12237,
											"end": 12422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12704,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 12428,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12548,
											"end": 12552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12588,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12599,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 12694,
											"end": 12695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12683,
											"end": 12692,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12676,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12599,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 12599,
											"end": 12697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12599,
											"end": 12697,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 12599,
											"end": 12697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12704,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12428,
											"end": 12704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12710,
											"end": 12890,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 12710,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12758,
											"end": 12835,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12755,
											"end": 12756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12748,
											"end": 12836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12852,
											"end": 12853,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12845,
											"end": 12860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12876,
											"end": 12877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12884,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12896,
											"end": 13076,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 12896,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 13021,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12941,
											"end": 12942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 13022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13041,
											"end": 13045,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13038,
											"end": 13039,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13031,
											"end": 13046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13062,
											"end": 13063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13055,
											"end": 13070,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13276,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 13082,
											"end": 13276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13122,
											"end": 13126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 13160,
											"end": 13161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 13142,
											"end": 13162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13162,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 13142,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13137,
											"end": 13162,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13137,
											"end": 13162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13176,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13176,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 13176,
											"end": 13196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13176,
											"end": 13196,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 13176,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13213,
											"end": 13222,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13244,
											"end": 13245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13238,
											"end": 13242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13235,
											"end": 13246,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 13249,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 13249,
											"end": 13267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13267,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 13249,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 13232,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13276,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13425,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 13282,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13339,
											"end": 13344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13370,
											"end": 13376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13364,
											"end": 13377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13386,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 13413,
											"end": 13418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13386,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 13386,
											"end": 13419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13386,
											"end": 13419,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 13386,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13425,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13570,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 13431,
											"end": 13570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13486,
											"end": 13491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13511,
											"end": 13524,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13502,
											"end": 13524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13502,
											"end": 13524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 13558,
											"end": 13563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 13533,
											"end": 13564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13564,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 13533,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13570,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13431,
											"end": 13570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14221,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 13606,
											"end": 14221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 13701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13740,
											"end": 13744,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13738,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13715,
											"end": 13745,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13829,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 13712,
											"end": 13829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13748,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 13748,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 13748,
											"end": 13827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13748,
											"end": 13827,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 13748,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13829,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 13712,
											"end": 13829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 13863,
											"end": 13867,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13847,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13847,
											"end": 13868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 13868,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 13847,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13838,
											"end": 13868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13838,
											"end": 13868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13928,
											"end": 13929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 14028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 14024,
											"end": 14027,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14015,
											"end": 14021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14013,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 13968,
											"end": 14028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 14028,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 13968,
											"end": 14028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 13965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13954,
											"end": 13959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 13966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13943,
											"end": 14029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13878,
											"end": 14040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14103,
											"end": 14105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14144,
											"end": 14202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 14198,
											"end": 14201,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14178,
											"end": 14187,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14174,
											"end": 14196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14144,
											"end": 14202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 14144,
											"end": 14202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14144,
											"end": 14202,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 14144,
											"end": 14202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14141,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14130,
											"end": 14135,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14119,
											"end": 14203,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14221,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14221,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 14221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14638,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 14227,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14327,
											"end": 14333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14376,
											"end": 14378,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14355,
											"end": 14362,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14351,
											"end": 14374,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14347,
											"end": 14379,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14344,
											"end": 14463,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14344,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 14344,
											"end": 14463,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14382,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 14382,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 14382,
											"end": 14461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14382,
											"end": 14461,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 14382,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14344,
											"end": 14463,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 14344,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14527,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 14613,
											"end": 14620,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14602,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14589,
											"end": 14611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14527,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 14527,
											"end": 14621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14527,
											"end": 14621,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 14527,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14517,
											"end": 14621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14517,
											"end": 14621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14638,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14885,
											"end": 14889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14923,
											"end": 14926,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14912,
											"end": 14921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14908,
											"end": 14927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 14927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 14927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14937,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 15065,
											"end": 15066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15054,
											"end": 15063,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15041,
											"end": 15047,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14937,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 14937,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14937,
											"end": 15068,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 14937,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15078,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 15206,
											"end": 15208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15195,
											"end": 15204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15182,
											"end": 15188,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15078,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 15078,
											"end": 15210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15078,
											"end": 15210,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 15078,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15570,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 15223,
											"end": 15570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15291,
											"end": 15297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15328,
											"end": 15337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15319,
											"end": 15326,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15315,
											"end": 15338,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15311,
											"end": 15343,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15427,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 15308,
											"end": 15427,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 15346,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 15346,
											"end": 15425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15346,
											"end": 15425,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 15346,
											"end": 15425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15427,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 15308,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15491,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15545,
											"end": 15552,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 15542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15525,
											"end": 15534,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15521,
											"end": 15543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15491,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 15491,
											"end": 15553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15491,
											"end": 15553,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15491,
											"end": 15553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15481,
											"end": 15553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15481,
											"end": 15553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15437,
											"end": 15563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15570,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15678,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 15576,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15665,
											"end": 15670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15662,
											"end": 15663,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15658,
											"end": 15671,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15745,
											"end": 15750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15752,
											"end": 15756,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15782,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15805,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15791,
											"end": 15805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15791,
											"end": 15805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15835,
											"end": 15836,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15825,
											"end": 15833,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15822,
											"end": 15837,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 15934,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 15928,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15921,
											"end": 15935,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15915,
											"end": 15919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15936,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15909,
											"end": 15959,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15909,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 15909,
											"end": 15959,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 15939,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 15939,
											"end": 15957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 15957,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 15939,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15909,
											"end": 15959,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 15909,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15989,
											"end": 15990,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15979,
											"end": 15987,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15975,
											"end": 15991,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15972,
											"end": 16423,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15972,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 15972,
											"end": 16423,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16404,
											"end": 16408,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16397,
											"end": 16402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16393,
											"end": 16409,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16384,
											"end": 16409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16384,
											"end": 16409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15972,
											"end": 16423,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 15972,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16454,
											"end": 16458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16444,
											"end": 16459,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16436,
											"end": 16459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16436,
											"end": 16459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 16507,
											"end": 16515,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 16484,
											"end": 16516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16516,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 16484,
											"end": 16516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16472,
											"end": 16516,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 16472,
											"end": 16516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 15814,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 16532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16783,
											"end": 16791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16773,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 16773,
											"end": 16813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16804,
											"end": 16805,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16795,
											"end": 16805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16795,
											"end": 16805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16806,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 16806,
											"end": 16811,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16773,
											"end": 16813,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 16773,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16832,
											"end": 16836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16822,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 16822,
											"end": 16858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16849,
											"end": 16850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16840,
											"end": 16850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16851,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 16851,
											"end": 16856,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16822,
											"end": 16858,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 16822,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16918,
											"end": 16922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16966,
											"end": 16967,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16961,
											"end": 16988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16961,
											"end": 16988,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16961,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 16961,
											"end": 16988,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17003,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 16997,
											"end": 17188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17188,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 16997,
											"end": 17188,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 16911,
											"end": 17188,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16961,
											"end": 16988,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 16961,
											"end": 16988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16979,
											"end": 16980,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16981,
											"end": 16986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16981,
											"end": 16986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 16981,
											"end": 16986,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16997,
											"end": 17188,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 16997,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17042,
											"end": 17045,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 17032,
											"end": 17040,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17029,
											"end": 17046,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17026,
											"end": 17069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17026,
											"end": 17069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17026,
											"end": 17069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 17049,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 17049,
											"end": 17067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17049,
											"end": 17067,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 17049,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17026,
											"end": 17069,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17026,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17098,
											"end": 17106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17095,
											"end": 17096,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 17091,
											"end": 17107,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17082,
											"end": 17107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17082,
											"end": 17107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17133,
											"end": 17136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17126,
											"end": 17131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17137,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 17120,
											"end": 17160,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17140,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 17140,
											"end": 17158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17158,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17140,
											"end": 17158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17160,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 17120,
											"end": 17160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17173,
											"end": 17178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17173,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 17173,
											"end": 17178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17188,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 16911,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17297,
											"end": 17299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17295,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17284,
											"end": 17300,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17278,
											"end": 17281,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 17272,
											"end": 17276,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17269,
											"end": 17282,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17265,
											"end": 17301,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17247,
											"end": 17249,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 17237,
											"end": 17245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17234,
											"end": 17250,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17229,
											"end": 17231,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 17223,
											"end": 17227,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17220,
											"end": 17232,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17216,
											"end": 17251,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17200,
											"end": 17311,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17443,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17197,
											"end": 17443,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17347,
											"end": 17351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17362,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17388,
											"end": 17391,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17381,
											"end": 17386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17378,
											"end": 17392,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17375,
											"end": 17415,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17375,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 17375,
											"end": 17415,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17395,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 17395,
											"end": 17413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 17395,
											"end": 17413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17395,
											"end": 17413,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 17395,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17375,
											"end": 17415,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 17375,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17428,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 17428,
											"end": 17433,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17443,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17197,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17468,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 17506,
											"end": 17509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17496,
											"end": 17504,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17490,
											"end": 17494,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17487,
											"end": 17488,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17468,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 17468,
											"end": 17510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17468,
											"end": 17510,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 17468,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17453,
											"end": 17510,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17453,
											"end": 17510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17453,
											"end": 17510,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17453,
											"end": 17510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17542,
											"end": 17546,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17537,
											"end": 17540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17533,
											"end": 17547,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17526,
											"end": 17531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17523,
											"end": 17548,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17520,
											"end": 17571,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17520,
											"end": 17571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 17520,
											"end": 17571,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17551,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 17551,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 17551,
											"end": 17569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17551,
											"end": 17569,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 17551,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17520,
											"end": 17571,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 17520,
											"end": 17571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17600,
											"end": 17604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17593,
											"end": 17598,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17589,
											"end": 17605,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17580,
											"end": 17605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17580,
											"end": 17605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 17611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17898,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 17617,
											"end": 17898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17699,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 17717,
											"end": 17721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17699,
											"end": 17722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 17699,
											"end": 17722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17699,
											"end": 17722,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 17699,
											"end": 17722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17691,
											"end": 17722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17691,
											"end": 17722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17743,
											"end": 17768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 17759,
											"end": 17767,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17743,
											"end": 17768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 17743,
											"end": 17768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17743,
											"end": 17768,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 17743,
											"end": 17768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17731,
											"end": 17768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17731,
											"end": 17768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17787,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 17824,
											"end": 17890,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17814,
											"end": 17822,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17808,
											"end": 17812,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17787,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 17787,
											"end": 17891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17787,
											"end": 17891,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 17787,
											"end": 17891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 17891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 17891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17898,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18022,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 17904,
											"end": 18022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17991,
											"end": 18015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 18009,
											"end": 18014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17991,
											"end": 18015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 17991,
											"end": 18015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17991,
											"end": 18015,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17991,
											"end": 18015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17986,
											"end": 17989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17979,
											"end": 18016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18177,
											"end": 18181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18215,
											"end": 18217,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18204,
											"end": 18213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18200,
											"end": 18218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18192,
											"end": 18218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18192,
											"end": 18218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 18296,
											"end": 18297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18285,
											"end": 18294,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18281,
											"end": 18298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18272,
											"end": 18278,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 18228,
											"end": 18299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18299,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 18228,
											"end": 18299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 18377,
											"end": 18379,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18366,
											"end": 18375,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18362,
											"end": 18380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18359,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 18309,
											"end": 18381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 18459,
											"end": 18461,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18448,
											"end": 18457,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18444,
											"end": 18462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18435,
											"end": 18441,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 18391,
											"end": 18463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18463,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 18391,
											"end": 18463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18827,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 18476,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18546,
											"end": 18552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18595,
											"end": 18597,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18583,
											"end": 18592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18574,
											"end": 18581,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18570,
											"end": 18593,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18566,
											"end": 18598,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 18563,
											"end": 18682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18563,
											"end": 18682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18563,
											"end": 18682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18601,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18601,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 18601,
											"end": 18680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18601,
											"end": 18680,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18601,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18563,
											"end": 18682,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18563,
											"end": 18682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18721,
											"end": 18722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18746,
											"end": 18810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 18802,
											"end": 18809,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18793,
											"end": 18799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18782,
											"end": 18791,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18778,
											"end": 18800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18746,
											"end": 18810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 18746,
											"end": 18810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18746,
											"end": 18810,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 18746,
											"end": 18810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 18810,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18736,
											"end": 18810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18692,
											"end": 18820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18827,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18976,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 18833,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18890,
											"end": 18895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18921,
											"end": 18927,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18915,
											"end": 18928,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18906,
											"end": 18928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18906,
											"end": 18928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18937,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 18964,
											"end": 18969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18937,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 18937,
											"end": 18970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18937,
											"end": 18970,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 18937,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18833,
											"end": 18976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 19333,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 18982,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19052,
											"end": 19058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19089,
											"end": 19098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19080,
											"end": 19087,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19076,
											"end": 19099,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19072,
											"end": 19104,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 19069,
											"end": 19188,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19069,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19069,
											"end": 19188,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19107,
											"end": 19186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19107,
											"end": 19186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 19107,
											"end": 19186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19107,
											"end": 19186,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19107,
											"end": 19186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19069,
											"end": 19188,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19069,
											"end": 19188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19227,
											"end": 19228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 19308,
											"end": 19315,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19299,
											"end": 19305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19297,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19284,
											"end": 19306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19252,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 19252,
											"end": 19316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19252,
											"end": 19316,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 19252,
											"end": 19316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19242,
											"end": 19316,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19242,
											"end": 19316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19198,
											"end": 19326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 19333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 19333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 19333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 19333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18982,
											"end": 19333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19339,
											"end": 19453,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 19339,
											"end": 19453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19376,
											"end": 19383,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19416,
											"end": 19446,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19409,
											"end": 19414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19405,
											"end": 19447,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19394,
											"end": 19447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19394,
											"end": 19447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19339,
											"end": 19453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19339,
											"end": 19453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19339,
											"end": 19453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19339,
											"end": 19453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19459,
											"end": 19581,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 19459,
											"end": 19581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19532,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 19550,
											"end": 19555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19532,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 19532,
											"end": 19556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19532,
											"end": 19556,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 19532,
											"end": 19556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19525,
											"end": 19530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19522,
											"end": 19557,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 19512,
											"end": 19575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19568,
											"end": 19569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19573,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19575,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 19512,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19459,
											"end": 19581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19459,
											"end": 19581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19730,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 19587,
											"end": 19730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19644,
											"end": 19649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19675,
											"end": 19681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19669,
											"end": 19682,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19660,
											"end": 19682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19660,
											"end": 19682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19691,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 19718,
											"end": 19723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19691,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 19691,
											"end": 19724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19691,
											"end": 19724,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 19691,
											"end": 19724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19730,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19736,
											"end": 19829,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 19736,
											"end": 19829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19772,
											"end": 19779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19812,
											"end": 19822,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19805,
											"end": 19810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19801,
											"end": 19823,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19790,
											"end": 19823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19790,
											"end": 19823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19736,
											"end": 19829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19736,
											"end": 19829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19736,
											"end": 19829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19736,
											"end": 19829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19835,
											"end": 19955,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 19835,
											"end": 19955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19907,
											"end": 19930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 19924,
											"end": 19929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19907,
											"end": 19930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 19907,
											"end": 19930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19907,
											"end": 19930,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 19907,
											"end": 19930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19900,
											"end": 19905,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19897,
											"end": 19931,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19887,
											"end": 19949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 19887,
											"end": 19949,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19945,
											"end": 19946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 19943,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19935,
											"end": 19947,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19887,
											"end": 19949,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 19887,
											"end": 19949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19835,
											"end": 19955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19835,
											"end": 19955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19961,
											"end": 20102,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 19961,
											"end": 20102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20017,
											"end": 20022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20048,
											"end": 20054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20042,
											"end": 20055,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20033,
											"end": 20055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20033,
											"end": 20055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20064,
											"end": 20096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 20090,
											"end": 20095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20064,
											"end": 20096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 20064,
											"end": 20096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20064,
											"end": 20096,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 20064,
											"end": 20096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19961,
											"end": 20102,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19961,
											"end": 20102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19961,
											"end": 20102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19961,
											"end": 20102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19961,
											"end": 20102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20195,
											"end": 20201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20203,
											"end": 20209,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20211,
											"end": 20217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20260,
											"end": 20262,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20248,
											"end": 20257,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20239,
											"end": 20246,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20235,
											"end": 20258,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20231,
											"end": 20263,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 20228,
											"end": 20347,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20228,
											"end": 20347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 20228,
											"end": 20347,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20266,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 20266,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 20266,
											"end": 20345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20266,
											"end": 20345,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 20266,
											"end": 20345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20228,
											"end": 20347,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 20228,
											"end": 20347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20386,
											"end": 20387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20411,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 20467,
											"end": 20474,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20458,
											"end": 20464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20447,
											"end": 20456,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20411,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 20411,
											"end": 20475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20411,
											"end": 20475,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 20411,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20401,
											"end": 20475,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20401,
											"end": 20475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20357,
											"end": 20485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20524,
											"end": 20526,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20550,
											"end": 20614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 20606,
											"end": 20613,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20597,
											"end": 20603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20586,
											"end": 20595,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20582,
											"end": 20604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20550,
											"end": 20614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 20550,
											"end": 20614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20550,
											"end": 20614,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 20550,
											"end": 20614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20540,
											"end": 20614,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20540,
											"end": 20614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20495,
											"end": 20624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20663,
											"end": 20665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20689,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 20744,
											"end": 20751,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20735,
											"end": 20741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20724,
											"end": 20733,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20720,
											"end": 20742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 20689,
											"end": 20752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20752,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 20689,
											"end": 20752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20679,
											"end": 20752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20679,
											"end": 20752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20634,
											"end": 20762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20896,
											"end": 20900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20934,
											"end": 20936,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20923,
											"end": 20932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20919,
											"end": 20937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20911,
											"end": 20937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20911,
											"end": 20937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20947,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 21015,
											"end": 21016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21004,
											"end": 21013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21000,
											"end": 21017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20991,
											"end": 20997,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20947,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 20947,
											"end": 21018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20947,
											"end": 21018,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 20947,
											"end": 21018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21028,
											"end": 21100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 21096,
											"end": 21098,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21085,
											"end": 21094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21081,
											"end": 21099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21072,
											"end": 21078,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21028,
											"end": 21100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 21028,
											"end": 21100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21028,
											"end": 21100,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 21028,
											"end": 21100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20775,
											"end": 21107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21225,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 21113,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 21212,
											"end": 21217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 21196,
											"end": 21218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21218,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 21196,
											"end": 21218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21191,
											"end": 21194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21184,
											"end": 21219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21408,
											"end": 21412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21446,
											"end": 21448,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21435,
											"end": 21444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21431,
											"end": 21449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21423,
											"end": 21449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21423,
											"end": 21449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21459,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 21587,
											"end": 21588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21576,
											"end": 21585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21572,
											"end": 21589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21563,
											"end": 21569,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21459,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 21459,
											"end": 21590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21459,
											"end": 21590,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 21459,
											"end": 21590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 21664,
											"end": 21666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21653,
											"end": 21662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21649,
											"end": 21667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21640,
											"end": 21646,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 21600,
											"end": 21668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21668,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 21600,
											"end": 21668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21681,
											"end": 21795,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 21681,
											"end": 21795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21748,
											"end": 21754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21782,
											"end": 21787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21776,
											"end": 21788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21766,
											"end": 21788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21766,
											"end": 21788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21681,
											"end": 21795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21681,
											"end": 21795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21681,
											"end": 21795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21681,
											"end": 21795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21985,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 21801,
											"end": 21985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21900,
											"end": 21911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21934,
											"end": 21940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21929,
											"end": 21932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 21941,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21974,
											"end": 21978,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21969,
											"end": 21972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21965,
											"end": 21979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21950,
											"end": 21979,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21950,
											"end": 21979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21991,
											"end": 22123,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 21991,
											"end": 22123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22058,
											"end": 22062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22081,
											"end": 22084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22073,
											"end": 22084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22073,
											"end": 22084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22111,
											"end": 22115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22106,
											"end": 22109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22102,
											"end": 22116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22094,
											"end": 22116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22094,
											"end": 22116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21991,
											"end": 22123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21991,
											"end": 22123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21991,
											"end": 22123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21991,
											"end": 22123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22129,
											"end": 22237,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 22129,
											"end": 22237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22206,
											"end": 22230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 22224,
											"end": 22229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22206,
											"end": 22230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 22206,
											"end": 22230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22206,
											"end": 22230,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 22206,
											"end": 22230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22201,
											"end": 22204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22194,
											"end": 22231,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22129,
											"end": 22237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22129,
											"end": 22237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22129,
											"end": 22237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22243,
											"end": 22422,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 22243,
											"end": 22422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22312,
											"end": 22322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22333,
											"end": 22379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 22375,
											"end": 22378,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22367,
											"end": 22373,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 22333,
											"end": 22379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22379,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 22333,
											"end": 22379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22411,
											"end": 22415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22406,
											"end": 22409,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22402,
											"end": 22416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22388,
											"end": 22416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22388,
											"end": 22416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22243,
											"end": 22422,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22243,
											"end": 22422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22243,
											"end": 22422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22243,
											"end": 22422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22243,
											"end": 22422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22428,
											"end": 22541,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 22428,
											"end": 22541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22498,
											"end": 22502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22525,
											"end": 22528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22521,
											"end": 22535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22513,
											"end": 22535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22513,
											"end": 22535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22428,
											"end": 22541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22428,
											"end": 22541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22428,
											"end": 22541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22428,
											"end": 22541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 23309,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 22577,
											"end": 23309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22696,
											"end": 22699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22725,
											"end": 22779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 22773,
											"end": 22778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22725,
											"end": 22779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 22725,
											"end": 22779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22725,
											"end": 22779,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 22725,
											"end": 22779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22795,
											"end": 22881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 22874,
											"end": 22880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22869,
											"end": 22872,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22795,
											"end": 22881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 22795,
											"end": 22881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22795,
											"end": 22881,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 22795,
											"end": 22881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22788,
											"end": 22881,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22788,
											"end": 22881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22905,
											"end": 22961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 22955,
											"end": 22960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22905,
											"end": 22961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 22905,
											"end": 22961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22905,
											"end": 22961,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 22905,
											"end": 22961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22984,
											"end": 22991,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 23015,
											"end": 23016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23025,
											"end": 23031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23022,
											"end": 23023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23019,
											"end": 23032,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23095,
											"end": 23108,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23128,
											"end": 23191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 23187,
											"end": 23190,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 23172,
											"end": 23185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23128,
											"end": 23191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 23128,
											"end": 23191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23128,
											"end": 23191,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 23128,
											"end": 23191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23121,
											"end": 23191,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 23121,
											"end": 23191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23214,
											"end": 23274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 23267,
											"end": 23273,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23214,
											"end": 23274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 23214,
											"end": 23274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23214,
											"end": 23274,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 23214,
											"end": 23274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23204,
											"end": 23274,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23204,
											"end": 23274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23060,
											"end": 23284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23047,
											"end": 23048,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 23044,
											"end": 23045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23040,
											"end": 23049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 23000,
											"end": 23284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23004,
											"end": 23018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23300,
											"end": 23303,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23293,
											"end": 23303,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23293,
											"end": 23303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22701,
											"end": 23309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22701,
											"end": 23309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22701,
											"end": 23309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 23309,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 23309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 23309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 23309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 23309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23486,
											"end": 23490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23524,
											"end": 23526,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23513,
											"end": 23522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23509,
											"end": 23527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23501,
											"end": 23527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23501,
											"end": 23527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 23605,
											"end": 23606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23594,
											"end": 23603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23590,
											"end": 23607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23581,
											"end": 23587,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 23537,
											"end": 23608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23608,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 23537,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23649,
											"end": 23653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23645,
											"end": 23665,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23640,
											"end": 23642,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23629,
											"end": 23638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23625,
											"end": 23643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23618,
											"end": 23666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23683,
											"end": 23791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 23786,
											"end": 23790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23777,
											"end": 23783,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23683,
											"end": 23791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 23683,
											"end": 23791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23683,
											"end": 23791,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 23683,
											"end": 23791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23675,
											"end": 23791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23675,
											"end": 23791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 24115,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 23804,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23881,
											"end": 23885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23971,
											"end": 23989,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23963,
											"end": 23969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23960,
											"end": 23990,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 23957,
											"end": 24013,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23957,
											"end": 24013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 23957,
											"end": 24013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 23993,
											"end": 24011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 23993,
											"end": 24011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23957,
											"end": 24013,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 23957,
											"end": 24013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24043,
											"end": 24047,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24035,
											"end": 24041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24031,
											"end": 24048,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 24023,
											"end": 24048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24023,
											"end": 24048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24103,
											"end": 24107,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24097,
											"end": 24101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24093,
											"end": 24108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24085,
											"end": 24108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24085,
											"end": 24108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 24115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 24115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 24115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 24115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24245,
											"end": 24250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24270,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 24286,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 24343,
											"end": 24349,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24286,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 24286,
											"end": 24350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24286,
											"end": 24350,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 24286,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24270,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 24270,
											"end": 24351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24270,
											"end": 24351,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 24270,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24261,
											"end": 24351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24261,
											"end": 24351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24371,
											"end": 24376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24400,
											"end": 24406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24393,
											"end": 24398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24386,
											"end": 24407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24434,
											"end": 24438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24427,
											"end": 24432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24423,
											"end": 24439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24416,
											"end": 24439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24416,
											"end": 24439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24487,
											"end": 24491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24479,
											"end": 24485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24475,
											"end": 24492,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 24467,
											"end": 24473,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24463,
											"end": 24493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24516,
											"end": 24519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24508,
											"end": 24514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24505,
											"end": 24520,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 24502,
											"end": 24624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24535,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 24535,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 24535,
											"end": 24614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24535,
											"end": 24614,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 24535,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24624,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 24502,
											"end": 24624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24650,
											"end": 24656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24667,
											"end": 24673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24662,
											"end": 24665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24659,
											"end": 24674,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24742,
											"end": 24745,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24771,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 24815,
											"end": 24818,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 24803,
											"end": 24813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24771,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 24771,
											"end": 24819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24771,
											"end": 24819,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 24771,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24766,
											"end": 24769,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24759,
											"end": 24820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24849,
											"end": 24853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24844,
											"end": 24847,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24840,
											"end": 24854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24833,
											"end": 24854,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24833,
											"end": 24854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24709,
											"end": 24864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24693,
											"end": 24697,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24688,
											"end": 24691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24677,
											"end": 24698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24677,
											"end": 24698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 24633,
											"end": 24864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24637,
											"end": 24658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24251,
											"end": 24870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24251,
											"end": 24870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24893,
											"end": 25278,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 24893,
											"end": 25278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24975,
											"end": 24980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25024,
											"end": 25027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25017,
											"end": 25021,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 25009,
											"end": 25015,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25001,
											"end": 25028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 24991,
											"end": 25113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 24991,
											"end": 25113,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25032,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 25032,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 25032,
											"end": 25111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25032,
											"end": 25111,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 25032,
											"end": 25111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24991,
											"end": 25113,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 24991,
											"end": 25113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25142,
											"end": 25148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25136,
											"end": 25149,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25167,
											"end": 25272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 25268,
											"end": 25271,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25260,
											"end": 25266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25253,
											"end": 25257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25245,
											"end": 25251,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25241,
											"end": 25258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25167,
											"end": 25272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 25167,
											"end": 25272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25167,
											"end": 25272,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 25167,
											"end": 25272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25158,
											"end": 25272,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25158,
											"end": 25272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24981,
											"end": 25278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24893,
											"end": 25278,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24893,
											"end": 25278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24893,
											"end": 25278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24893,
											"end": 25278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24893,
											"end": 25278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25838,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 25284,
											"end": 25838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25428,
											"end": 25430,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25416,
											"end": 25425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25407,
											"end": 25414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25403,
											"end": 25426,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25399,
											"end": 25431,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 25396,
											"end": 25515,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 25396,
											"end": 25515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 25396,
											"end": 25515,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25434,
											"end": 25513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 25434,
											"end": 25513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 25434,
											"end": 25513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25434,
											"end": 25513,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 25434,
											"end": 25513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25396,
											"end": 25515,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 25396,
											"end": 25515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25564,
											"end": 25573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25560,
											"end": 25577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25554,
											"end": 25578,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25597,
											"end": 25603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25594,
											"end": 25624,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 25591,
											"end": 25708,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 25591,
											"end": 25708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 25591,
											"end": 25708,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25627,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 25627,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 25627,
											"end": 25706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25627,
											"end": 25706,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 25627,
											"end": 25706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25591,
											"end": 25708,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 25591,
											"end": 25708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 25813,
											"end": 25820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25804,
											"end": 25810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25793,
											"end": 25802,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25789,
											"end": 25811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 25732,
											"end": 25821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25821,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 25732,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25722,
											"end": 25821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25722,
											"end": 25821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25525,
											"end": 25831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25838,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"code/contract/sol/native/shared/FixedPointValue.sol",
								"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
								"code/contract/sol/native/utils/math/FixedPointMath.sol",
								"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol",
								"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"amountOut(address[],(uint256,uint8))": "f6162317",
							"factory()": "c45a0155",
							"fixedPointMath()": "14c758d9",
							"pairAddress(address,address)": "ceca05ab",
							"pairInterface(address,address)": "be83cb79",
							"pairIsSameLayoutAsGivenTokens(address,address)": "41b29895",
							"pairIsZeroAddress(address,address)": "b09cd0c3",
							"pairReserves(address,address)": "7dd92787",
							"price(address,address)": "2b00490d",
							"router()": "f887ea40",
							"yield(address[],(uint256,uint8))": "0d186819"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fixedPointMath\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"amountIn\",\"type\":\"tuple\"}],\"name\":\"amountOut\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedPointMath\",\"outputs\":[{\"internalType\":\"contract IFixedPointMath\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairInterface\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairIsSameLayoutAsGivenTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairIsZeroAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"amountIn\",\"type\":\"tuple\"}],\"name\":\"yield\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"basisPoints\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":\"UniswapV2Adaptor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/native/shared/FixedPointValue.sol\":{\"keccak256\":\"0x762107b189c4e0c6638f84522dbe67dd3ed25afc8c0b2e0cb316721cb00fb642\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6200988009dac6133149f410e0e3f70db0e0bc614a8aa03b9c7d243db2620111\",\"dweb:/ipfs/QmeSdveNxCMcg9bQvtXSbvxVut3oAtBo3JndkF7Rt16Qkx\"]},\"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol\":{\"keccak256\":\"0xc7e5a9baed7678505e786842c0c290b03d231fd42df4a04f8ae4ad4705c65150\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9f47a22f5a00ea859d77e9dc9d78b28eccbd8e7b9378e4fa42d21fa2d72cdf5b\",\"dweb:/ipfs/QmRtWShVDq7gCExi5mZFRUy3KzXiKfnNwTASSL2Hbyoxdv\"]},\"code/contract/sol/native/utils/math/FixedPointMath.sol\":{\"keccak256\":\"0x9dff9cd63c09e4070acff8f9e1f8023ae1d8485f370c19dc57872a9d816cb27b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://652b75ea5ce7e49651d8e805177f58e90e1e3ea3e409aa6edec1b94593e36cae\",\"dweb:/ipfs/QmdSyeiz79HR8uvBEys38BBFUnP4gXksZX8hea7GxTDHKS\"]},\"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]},\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x7f6769ef721e9595460b08bf5291fe15d2631fc64a46f5b81f19ccd973b3251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29709b519d7eeefd0d77dfe0f8b6ba1bf701d57d333802f3860f54ba1674945d\",\"dweb:/ipfs/Qmc7uijgQptKJwta1bnhhwTSdbAhHgmjtZsg2jBwbdo1iA\"]},\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x3beed1619839a5ba08240cec87d35f2bda61004c71602c6c49fa80d8791d9beb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6757cdc17b00cd6a7ed6036eda37e620266d53bfefe7aa37d262512fabf51ffa\",\"dweb:/ipfs/QmdXmsZxsKQ2FAeyzmaTjVcnVjBoAVZqKHgaX8tbMVDSsp\"]},\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xbecc169999b4c3aaed2aa429fb09d0aad8f78e4f6c3ab460820f5d4d8ba2ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://741731c883ee363111bd4d57a80335cb349908ff32ddefdb2f642db7aecb972c\",\"dweb:/ipfs/QmYUtoe3yghcUokPyvGxbFSh5CYwjhRmvXE2WtEmTG4a6t\"]},\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x27c46e7acb0cba4035be66e0214ff08dd8f16e795187743e36c8324f4b0ea69f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f050951197356a91c8858be6bf55225275165438bdf9b3f2b111fc06616f7acb\",\"dweb:/ipfs/Qmf9QRAJhQXcs21iing29aEazaWTKMxb2ueZ9vNKdFWHgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:UniswapV2Adaptor",
								"label": "fixedPointMath_",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IFixedPointMath)652"
							},
							{
								"astId": 28,
								"contract": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:UniswapV2Adaptor",
								"label": "factory_",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IUniswapV2Factory)2421"
							},
							{
								"astId": 31,
								"contract": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:UniswapV2Adaptor",
								"label": "router_",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IUniswapV2Router02)3059"
							}
						],
						"types": {
							"t_contract(IFixedPointMath)652": {
								"encoding": "inplace",
								"label": "contract IFixedPointMath",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Factory)2421": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)3059": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/native/utils/math/FixedPointMath.sol": {
				"FixedPointMath": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "decimals0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "decimals1",
									"type": "uint8"
								}
							],
							"name": "IncompatibleDecimals",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "add",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								}
							],
							"name": "asEther",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "asNewDecimals",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "div",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "mul",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "scale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "basisPoints",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "sliceBasisPoints",
									"type": "tuple"
								}
							],
							"name": "slice",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "sub",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1212:6008  contract FixedPointMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1212:6008  contract FixedPointMath {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d02ebf4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x7d02ebf4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8444b813\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa7e7c9f9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe51356e8\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x2833d1f0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e60d8e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4b602c6d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x58633635\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3300:3758  function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5616:6006  function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2242:2830  function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2836:3294  function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5028:5610  function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4471:5022  function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3764:4465  function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1668:2236  function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3300:3758  function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_15:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3436:3458  FixedPointValue memory */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3415:3419  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3421:3425  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_51\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_51:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3470:3484  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3494:3508  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3518:3532  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3542:3556  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3577:3581  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3577:3590  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3566:3590  decimals = num0.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3609:3613  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3609:3619  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3600:3619  value0 = num0.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3638:3642  num1 */\n      dup10\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3638:3648  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3629:3648  value1 = num1.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3676:3682  value1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3667:3673  value0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3667:3682  value0 - value1 */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3658:3682  result = value0 - value1 */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3699:3751  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3723:3729  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3699:3751  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3741:3749  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3699:3751  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3692:3751  return FixedPointValue({value: result, decimals: decimals}) */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3300:3758  function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5616:6006  function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {... */\n    tag_21:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5682:5704  FixedPointValue memory */\n      tag_57\n      tag_49\n      jump\t// in\n    tag_57:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5716:5737  uint8 currentDecimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5747:5760  uint256 value */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5770:5784  uint256 result */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5812:5815  num */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5812:5824  num.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5794:5824  currentDecimals = num.decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5842:5845  num */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5842:5851  num.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5834:5851  value = num.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5929:5935  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5917:5923  10**18 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5896:5911  currentDecimals */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5892:5894  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5892:5911  10**currentDecimals */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5881:5887  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5872:5877  value */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5872:5888  value * (10**18) */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5872:5912  value * (10**18) / (10**currentDecimals) */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5871:5924  (value * (10**18) / (10**currentDecimals)) * (10**18) */\n      tag_65\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_65:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5870:5936  ((value * (10**18) / (10**currentDecimals)) * (10**18)) / (10**18) */\n      tag_66\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_66:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5861:5936  result = ((value * (10**18) / (10**currentDecimals)) * (10**18)) / (10**18) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5953:5999  FixedPointValue({value: result, decimals: 18}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5977:5983  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5953:5999  FixedPointValue({value: result, decimals: 18}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5995:5997  18 */\n      0x12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5953:5999  FixedPointValue({value: result, decimals: 18}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5946:5999  return FixedPointValue({value: result, decimals: 18}) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5616:6006  function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2242:2830  function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {... */\n    tag_25:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2402:2424  FixedPointValue memory */\n      tag_67\n      tag_49\n      jump\t// in\n    tag_67:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2370:2373  num */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2375:2391  sliceBasisPoints */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_69\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_69:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2436:2450  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2460:2482  uint256 representation */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2492:2521  FixedPointValue memory result */\n      tag_72\n      tag_49\n      jump\t// in\n    tag_72:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2531:2559  FixedPointValue memory scale */\n      tag_73\n      tag_49\n      jump\t// in\n    tag_73:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2580:2583  num */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2580:2592  num.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2569:2592  decimals = num.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2623:2631  decimals */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2619:2621  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2619:2631  10**decimals */\n      tag_74\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_74:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2602:2631  representation = 10**decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2649:2718  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2682:2696  representation */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2673:2679  10_000 */\n      0x2710\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2673:2696  10_000 * representation */\n      tag_75\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2649:2718  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2708:2716  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2649:2718  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2641:2718  scale = FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2737:2752  div(num, scale) */\n      tag_76\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2741:2744  num */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2746:2751  scale */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2737:2740  div */\n      tag_38\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2737:2752  div(num, scale) */\n      jump\t// in\n    tag_76:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2728:2752  result = div(num, scale) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2771:2800  mul(result, sliceBasisPoints) */\n      tag_77\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2775:2781  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2783:2799  sliceBasisPoints */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2771:2774  mul */\n      tag_42\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2771:2800  mul(result, sliceBasisPoints) */\n      jump\t// in\n    tag_77:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2762:2800  result = mul(result, sliceBasisPoints) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2817:2823  result */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2810:2823  return result */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2242:2830  function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2836:3294  function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_29:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2972:2994  FixedPointValue memory */\n      tag_78\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2951:2955  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2957:2961  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_80\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_80:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3006:3020  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3030:3044  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3054:3068  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3078:3092  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3113:3117  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3113:3126  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3102:3126  decimals = num0.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3145:3149  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3145:3155  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3136:3155  value0 = num0.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3174:3178  num1 */\n      dup10\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3174:3184  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3165:3184  value1 = num1.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3212:3218  value1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3203:3209  value0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3203:3218  value0 + value1 */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3194:3218  result = value0 + value1 */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3235:3287  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3259:3265  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3235:3287  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3277:3285  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3235:3287  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3228:3287  return FixedPointValue({value: result, decimals: decimals}) */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2836:3294  function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5028:5610  function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {... */\n    tag_34:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5116:5138  FixedPointValue memory */\n      tag_85\n      tag_49\n      jump\t// in\n    tag_85:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5150:5171  uint8 currentDecimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5181:5194  uint256 value */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5204:5218  uint256 result */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5246:5249  num */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5246:5258  num.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5228:5258  currentDecimals = num.decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5276:5279  num */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5276:5285  num.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5268:5285  value = num.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5318:5320  18 */\n      0x12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5299:5314  currentDecimals */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5299:5320  currentDecimals != 18 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5295:5457  if (currentDecimals != 18) {... */\n      tag_87\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5336:5369  FixedPointValue memory numAsEther */\n      tag_88\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5396:5408  asEther(num) */\n      tag_89\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5404:5407  num */\n      dup8\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5396:5403  asEther */\n      tag_21\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5396:5408  asEther(num) */\n      jump\t// in\n    tag_89:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5383:5408  numAsEther = asEther(num) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5430:5440  numAsEther */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5430:5446  numAsEther.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5422:5446  value = numAsEther.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5322:5457  {... */\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5295:5457  if (currentDecimals != 18) {... */\n    tag_87:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5527:5533  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5513:5521  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5509:5511  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5509:5521  10**decimals */\n      tag_90\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_90:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5497:5503  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5486:5492  10**18 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5477:5482  value */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5477:5493  value * (10**18) */\n      tag_91\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_91:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5477:5504  value * (10**18) / (10**18) */\n      tag_92\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5476:5522  (value * (10**18) / (10**18)) * (10**decimals) */\n      tag_93\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_93:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5475:5534  ((value * (10**18) / (10**18)) * (10**decimals)) / (10**18) */\n      tag_94\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_94:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5466:5534  result = ((value * (10**18) / (10**18)) * (10**decimals)) / (10**18) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5551:5603  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5575:5581  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5551:5603  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5593:5601  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5551:5603  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5544:5603  return FixedPointValue({value: result, decimals: decimals}) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5028:5610  function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4471:5022  function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_38:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4607:4629  FixedPointValue memory */\n      tag_95\n      tag_49\n      jump\t// in\n    tag_95:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4586:4590  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4592:4596  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_97\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_97:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4641:4655  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4665:4679  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4689:4703  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4713:4727  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4737:4759  uint256 representation */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4780:4784  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4780:4793  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4769:4793  decimals = num0.decimals */\n      swap5\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4812:4816  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4812:4822  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4803:4822  value0 = num0.value */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4841:4845  num1 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4841:4851  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4832:4851  value1 = num1.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4882:4890  decimals */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4878:4880  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4878:4890  10**decimals */\n      tag_100\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_100:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4861:4890  representation = 10**decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4946  value0.mulDiv(representation, value1) */\n      tag_101\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4923:4937  representation */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4939:4945  value1 */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4915  value0 */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4922  value0.mulDiv */\n      tag_102\n      swap1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4946  value0.mulDiv(representation, value1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4900:4946  result = value0.mulDiv(representation, value1) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4963:5015  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4987:4993  result */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4963:5015  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5005:5013  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4963:5015  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4956:5015  return FixedPointValue({value: result, decimals: decimals}) */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4471:5022  function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3764:4465  function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_42:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3900:3922  FixedPointValue memory */\n      tag_103\n      tag_49\n      jump\t// in\n    tag_103:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3879:3883  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3885:3889  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_105\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_105:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3934:3948  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3958:3972  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3982:3996  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4006:4020  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4030:4052  uint256 representation */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4073:4077  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4073:4086  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4062:4086  decimals = num0.decimals */\n      swap5\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4105:4109  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4105:4115  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4096:4115  value0 = num0.value */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4134:4138  num1 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4134:4144  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4125:4144  value1 = num1.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4175:4183  decimals */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4171:4173  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4171:4183  10**decimals */\n      tag_108\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4154:4183  representation = 10**decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4209:4210  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4197:4205  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4197:4210  decimals == 0 */\n      0xff\n      and\n      sub\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4193:4334  if (decimals == 0) {... */\n      tag_109\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4244:4250  value1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4235:4241  value0 */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4235:4250  value0 * value1 */\n      tag_110\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_110:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4226:4250  result = value0 * value1 */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4271:4323  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4295:4301  result */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4271:4323  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4313:4321  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4271:4323  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4264:4323  return FixedPointValue({value: result, decimals: decimals}) */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_107)\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4193:4334  if (decimals == 0) {... */\n    tag_109:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4389  value0.mulDiv(value1, representation) */\n      tag_111\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4366:4372  value1 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4374:4388  representation */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4358  value0 */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4365  value0.mulDiv */\n      tag_102\n      swap1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4389  value0.mulDiv(value1, representation) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4343:4389  result = value0.mulDiv(value1, representation) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4406:4458  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4430:4436  result */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4406:4458  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4448:4456  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4406:4458  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4399:4458  return FixedPointValue({value: result, decimals: decimals}) */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1654:1655  _ */\n    tag_107:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3764:4465  function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1668:2236  function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {... */\n    tag_46:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1806:1840  FixedPointValue memory basisPoints */\n      tag_112\n      tag_49\n      jump\t// in\n    tag_112:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1785:1789  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1791:1795  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_114\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_114:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1852:1866  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1876:1898  uint256 representation */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1908:1937  FixedPointValue memory result */\n      tag_117\n      tag_49\n      jump\t// in\n    tag_117:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1947:1975  FixedPointValue memory scale */\n      tag_118\n      tag_49\n      jump\t// in\n    tag_118:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1996:2000  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1996:2009  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1985:2009  decimals = num0.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2040:2048  decimals */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2036:2038  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2036:2048  10**decimals */\n      tag_119\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_119:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2019:2048  representation = 10**decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2066:2135  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2099:2113  representation */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2090:2096  10_000 */\n      0x2710\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2090:2113  10_000 * representation */\n      tag_120\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_120:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2066:2135  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2125:2133  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2066:2135  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2058:2135  scale = FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2154:2169  div(num0, num1) */\n      tag_121\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2158:2162  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2164:2168  num1 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2154:2157  div */\n      tag_38\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2154:2169  div(num0, num1) */\n      jump\t// in\n    tag_121:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2145:2169  result = div(num0, num1) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2188:2206  mul(result, scale) */\n      tag_122\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2192:2198  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2200:2205  scale */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2188:2191  mul */\n      tag_42\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2188:2206  mul(result, scale) */\n      jump\t// in\n    tag_122:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2179:2206  result = mul(result, scale) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2223:2229  result */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2216:2229  return result */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1668:2236  function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":3689:7902  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_102:\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":3771:3785  uint256 result */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4118:4131  uint256 prod0 */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4190:4203  uint256 prod1 */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4315:4316  0 */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4311:4317  not(0) */\n      not\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4308:4309  y */\n      dup6\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4305:4306  x */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4298:4318  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4351:4352  y */\n      dup6\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4348:4349  x */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4344:4353  mul(x, y) */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4335:4353  prod0 := mul(x, y) */\n      swap3\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4406:4411  prod0 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4402:4404  mm */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4399:4412  lt(mm, prod0) */\n      lt\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4391:4396  prod0 */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4387:4389  mm */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4383:4397  sub(mm, prod0) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4379:4413  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4370:4413  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4270:4427  {... */\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4517:4518  0 */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4508:4513  prod1 */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4508:4518  prod1 == 0 */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4504:4872  if (prod1 == 0) {... */\n      tag_124\n      jumpi\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4846:4857  denominator */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4838:4843  prod0 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4838:4857  prod0 / denominator */\n      dup2\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4831:4857  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_123)\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4504:4872  if (prod1 == 0) {... */\n    tag_124:\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4996:5001  prod1 */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4982:4993  denominator */\n      dup5\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4982:5001  denominator > prod1 */\n      gt\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4974:5027  require(denominator > prod1, \"Math: mulDiv overflow\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5283:5300  uint256 remainder */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5418:5429  denominator */\n      dup5\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5415:5416  y */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5412:5413  x */\n      dup9\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5405:5430  mulmod(x, y, denominator) */\n      mulmod\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5392:5430  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5546:5551  prod0 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5535:5544  remainder */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5532:5552  gt(remainder, prod0) */\n      gt\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5525:5530  prod1 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5521:5553  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5512:5553  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5590:5599  remainder */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5583:5588  prod0 */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5579:5600  sub(prod0, remainder) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5570:5600  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5921:5933  uint256 twos */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5966:5967  1 */\n      0x01\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5952:5963  denominator */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5951:5963  ~denominator */\n      not\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5951:5967  ~denominator + 1 */\n      add\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5936:5947  denominator */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5936:5968  denominator & (~denominator + 1) */\n      and\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5921:5968  uint256 twos = denominator & (~denominator + 1) */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6088:6092  twos */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6075:6086  denominator */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6071:6093  div(denominator, twos) */\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6056:6093  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6180:6184  twos */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6173:6178  prod0 */\n      dup5\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6169:6185  div(prod0, twos) */\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6160:6185  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6337:6338  1 */\n      0x01\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6330:6334  twos */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6323:6327  twos */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6320:6321  0 */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6316:6328  sub(0, twos) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6312:6335  div(sub(0, twos), twos) */\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6308:6339  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6300:6339  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6436:6440  twos */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6428:6433  prod1 */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6428:6440  prod1 * twos */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6419:6440  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6758:6773  uint256 inverse */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6796:6797  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6781:6792  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6777:6778  3 */\n      0x03\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6777:6792  3 * denominator */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6776:6797  (3 * denominator) ^ 2 */\n      xor\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6758:6797  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7043:7050  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7029:7040  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7029:7050  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7025:7026  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7025:7050  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7014:7050  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7112:7119  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7098:7109  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7098:7119  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7094:7095  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7094:7119  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7083:7119  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7182:7189  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7168:7179  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7168:7189  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7164:7165  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7164:7189  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7153:7189  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7252:7259  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7238:7249  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7238:7259  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7234:7235  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7234:7259  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7223:7259  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7322:7329  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7308:7319  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7308:7329  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7304:7305  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7304:7329  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7293:7329  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7393:7400  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7379:7390  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7379:7400  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7375:7376  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7375:7400  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7364:7400  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7851:7858  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7843:7848  prod0 */\n      dup6\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7843:7858  prod0 * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7834:7858  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7872:7885  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":3689:7902  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_123:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_49:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_131:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_132:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_134:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_135:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_136:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_137:\n        /* \"#utility.yul\":834:861   */\n      tag_166\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_135\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_168\n      tag_136\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":907:995   */\n    tag_167:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_138:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_170\n      tag_131\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_171\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_137\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1373   */\n    tag_140:\n        /* \"#utility.yul\":1333:1340   */\n      0x00\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1351:1367   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1379:1501   */\n    tag_141:\n        /* \"#utility.yul\":1452:1476   */\n      tag_175\n        /* \"#utility.yul\":1470:1475   */\n      dup2\n        /* \"#utility.yul\":1452:1476   */\n      tag_140\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1442:1477   */\n      eq\n        /* \"#utility.yul\":1432:1495   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1491:1492   */\n      0x00\n        /* \"#utility.yul\":1488:1489   */\n      dup1\n        /* \"#utility.yul\":1481:1493   */\n      revert\n        /* \"#utility.yul\":1432:1495   */\n    tag_176:\n        /* \"#utility.yul\":1379:1501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1507:1646   */\n    tag_142:\n        /* \"#utility.yul\":1553:1558   */\n      0x00\n        /* \"#utility.yul\":1591:1597   */\n      dup2\n        /* \"#utility.yul\":1578:1598   */\n      calldataload\n        /* \"#utility.yul\":1569:1598   */\n      swap1\n      pop\n        /* \"#utility.yul\":1607:1640   */\n      tag_178\n        /* \"#utility.yul\":1634:1639   */\n      dup2\n        /* \"#utility.yul\":1607:1640   */\n      tag_141\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1507:1646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1652:1738   */\n    tag_143:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1727:1731   */\n      0xff\n        /* \"#utility.yul\":1720:1725   */\n      dup3\n        /* \"#utility.yul\":1716:1732   */\n      and\n        /* \"#utility.yul\":1705:1732   */\n      swap1\n      pop\n        /* \"#utility.yul\":1652:1738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1744:1862   */\n    tag_144:\n        /* \"#utility.yul\":1815:1837   */\n      tag_181\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1815:1837   */\n      tag_143\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1808:1813   */\n      dup2\n        /* \"#utility.yul\":1805:1838   */\n      eq\n        /* \"#utility.yul\":1795:1856   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1852:1853   */\n      0x00\n        /* \"#utility.yul\":1849:1850   */\n      dup1\n        /* \"#utility.yul\":1842:1854   */\n      revert\n        /* \"#utility.yul\":1795:1856   */\n    tag_182:\n        /* \"#utility.yul\":1744:1862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1868:2003   */\n    tag_145:\n        /* \"#utility.yul\":1912:1917   */\n      0x00\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1937:1957   */\n      calldataload\n        /* \"#utility.yul\":1928:1957   */\n      swap1\n      pop\n        /* \"#utility.yul\":1966:1997   */\n      tag_184\n        /* \"#utility.yul\":1991:1996   */\n      dup2\n        /* \"#utility.yul\":1966:1997   */\n      tag_144\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1868:2003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2039:2621   */\n    tag_146:\n        /* \"#utility.yul\":2118:2123   */\n      0x00\n        /* \"#utility.yul\":2162:2166   */\n      0x40\n        /* \"#utility.yul\":2150:2159   */\n      dup3\n        /* \"#utility.yul\":2145:2148   */\n      dup5\n        /* \"#utility.yul\":2141:2160   */\n      sub\n        /* \"#utility.yul\":2137:2167   */\n      slt\n        /* \"#utility.yul\":2134:2251   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2170:2249   */\n      tag_187\n      tag_134\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2134:2251   */\n    tag_186:\n        /* \"#utility.yul\":2269:2290   */\n      tag_188\n        /* \"#utility.yul\":2285:2289   */\n      0x40\n        /* \"#utility.yul\":2269:2290   */\n      tag_138\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2260:2290   */\n      swap1\n      pop\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2390:2439   */\n      tag_189\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2426:2432   */\n      dup3\n        /* \"#utility.yul\":2415:2424   */\n      dup6\n        /* \"#utility.yul\":2411:2433   */\n      add\n        /* \"#utility.yul\":2390:2439   */\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2383:2387   */\n      0x00\n        /* \"#utility.yul\":2376:2381   */\n      dup4\n        /* \"#utility.yul\":2372:2388   */\n      add\n        /* \"#utility.yul\":2365:2440   */\n      mstore\n        /* \"#utility.yul\":2300:2451   */\n      pop\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2555:2602   */\n      tag_190\n        /* \"#utility.yul\":2598:2601   */\n      dup5\n        /* \"#utility.yul\":2589:2595   */\n      dup3\n        /* \"#utility.yul\":2578:2587   */\n      dup6\n        /* \"#utility.yul\":2574:2596   */\n      add\n        /* \"#utility.yul\":2555:2602   */\n      tag_145\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2548:2552   */\n      0x20\n        /* \"#utility.yul\":2541:2546   */\n      dup4\n        /* \"#utility.yul\":2537:2553   */\n      add\n        /* \"#utility.yul\":2530:2603   */\n      mstore\n        /* \"#utility.yul\":2461:2614   */\n      pop\n        /* \"#utility.yul\":2039:2621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2627:3222   */\n    tag_14:\n        /* \"#utility.yul\":2755:2761   */\n      0x00\n        /* \"#utility.yul\":2763:2769   */\n      dup1\n        /* \"#utility.yul\":2812:2815   */\n      0x80\n        /* \"#utility.yul\":2800:2809   */\n      dup4\n        /* \"#utility.yul\":2791:2798   */\n      dup6\n        /* \"#utility.yul\":2787:2810   */\n      sub\n        /* \"#utility.yul\":2783:2816   */\n      slt\n        /* \"#utility.yul\":2780:2900   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":2819:2898   */\n      tag_193\n      tag_132\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2780:2900   */\n    tag_192:\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2964:3047   */\n      tag_194\n        /* \"#utility.yul\":3039:3046   */\n      dup6\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup7\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2964:3047   */\n      tag_146\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2954:3047   */\n      swap3\n      pop\n        /* \"#utility.yul\":2910:3057   */\n      pop\n        /* \"#utility.yul\":3096:3098   */\n      0x40\n        /* \"#utility.yul\":3122:3205   */\n      tag_195\n        /* \"#utility.yul\":3197:3204   */\n      dup6\n        /* \"#utility.yul\":3188:3194   */\n      dup3\n        /* \"#utility.yul\":3177:3186   */\n      dup7\n        /* \"#utility.yul\":3173:3195   */\n      add\n        /* \"#utility.yul\":3122:3205   */\n      tag_146\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3112:3205   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3215   */\n      pop\n        /* \"#utility.yul\":2627:3222   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3336   */\n    tag_147:\n        /* \"#utility.yul\":3305:3329   */\n      tag_197\n        /* \"#utility.yul\":3323:3328   */\n      dup2\n        /* \"#utility.yul\":3305:3329   */\n      tag_140\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3300:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3330   */\n      mstore\n        /* \"#utility.yul\":3228:3336   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3444   */\n    tag_148:\n        /* \"#utility.yul\":3415:3437   */\n      tag_199\n        /* \"#utility.yul\":3431:3436   */\n      dup2\n        /* \"#utility.yul\":3415:3437   */\n      tag_143\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3410:3413   */\n      dup3\n        /* \"#utility.yul\":3403:3438   */\n      mstore\n        /* \"#utility.yul\":3342:3444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3506:4024   */\n    tag_149:\n        /* \"#utility.yul\":3663:3667   */\n      0x40\n        /* \"#utility.yul\":3658:3661   */\n      dup3\n        /* \"#utility.yul\":3654:3668   */\n      add\n        /* \"#utility.yul\":3751:3755   */\n      0x00\n        /* \"#utility.yul\":3744:3749   */\n      dup3\n        /* \"#utility.yul\":3740:3756   */\n      add\n        /* \"#utility.yul\":3734:3757   */\n      mload\n        /* \"#utility.yul\":3770:3833   */\n      tag_201\n        /* \"#utility.yul\":3827:3831   */\n      0x00\n        /* \"#utility.yul\":3822:3825   */\n      dup6\n        /* \"#utility.yul\":3818:3832   */\n      add\n        /* \"#utility.yul\":3804:3816   */\n      dup3\n        /* \"#utility.yul\":3770:3833   */\n      tag_147\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3678:3843   */\n      pop\n        /* \"#utility.yul\":3929:3933   */\n      0x20\n        /* \"#utility.yul\":3922:3927   */\n      dup3\n        /* \"#utility.yul\":3918:3934   */\n      add\n        /* \"#utility.yul\":3912:3935   */\n      mload\n        /* \"#utility.yul\":3948:4007   */\n      tag_202\n        /* \"#utility.yul\":4001:4005   */\n      0x20\n        /* \"#utility.yul\":3996:3999   */\n      dup6\n        /* \"#utility.yul\":3992:4006   */\n      add\n        /* \"#utility.yul\":3978:3990   */\n      dup3\n        /* \"#utility.yul\":3948:4007   */\n      tag_148\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3853:4017   */\n      pop\n        /* \"#utility.yul\":3632:4024   */\n      pop\n        /* \"#utility.yul\":3506:4024   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4372   */\n    tag_17:\n        /* \"#utility.yul\":4183:4187   */\n      0x00\n        /* \"#utility.yul\":4221:4223   */\n      0x40\n        /* \"#utility.yul\":4210:4219   */\n      dup3\n        /* \"#utility.yul\":4206:4224   */\n      add\n        /* \"#utility.yul\":4198:4224   */\n      swap1\n      pop\n        /* \"#utility.yul\":4234:4365   */\n      tag_204\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4234:4365   */\n      tag_149\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4030:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4767   */\n    tag_20:\n        /* \"#utility.yul\":4467:4473   */\n      0x00\n        /* \"#utility.yul\":4516:4518   */\n      0x40\n        /* \"#utility.yul\":4504:4513   */\n      dup3\n        /* \"#utility.yul\":4495:4502   */\n      dup5\n        /* \"#utility.yul\":4491:4514   */\n      sub\n        /* \"#utility.yul\":4487:4519   */\n      slt\n        /* \"#utility.yul\":4484:4603   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4522:4601   */\n      tag_207\n      tag_132\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4484:4603   */\n    tag_206:\n        /* \"#utility.yul\":4642:4643   */\n      0x00\n        /* \"#utility.yul\":4667:4750   */\n      tag_208\n        /* \"#utility.yul\":4742:4749   */\n      dup5\n        /* \"#utility.yul\":4733:4739   */\n      dup3\n        /* \"#utility.yul\":4722:4731   */\n      dup6\n        /* \"#utility.yul\":4718:4740   */\n      add\n        /* \"#utility.yul\":4667:4750   */\n      tag_146\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4657:4750   */\n      swap2\n      pop\n        /* \"#utility.yul\":4613:4760   */\n      pop\n        /* \"#utility.yul\":4378:4767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4773:5303   */\n    tag_33:\n        /* \"#utility.yul\":4869:4875   */\n      0x00\n        /* \"#utility.yul\":4877:4883   */\n      dup1\n        /* \"#utility.yul\":4926:4928   */\n      0x60\n        /* \"#utility.yul\":4914:4923   */\n      dup4\n        /* \"#utility.yul\":4905:4912   */\n      dup6\n        /* \"#utility.yul\":4901:4924   */\n      sub\n        /* \"#utility.yul\":4897:4929   */\n      slt\n        /* \"#utility.yul\":4894:5013   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4932:5011   */\n      tag_211\n      tag_132\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4894:5013   */\n    tag_210:\n        /* \"#utility.yul\":5052:5053   */\n      0x00\n        /* \"#utility.yul\":5077:5160   */\n      tag_212\n        /* \"#utility.yul\":5152:5159   */\n      dup6\n        /* \"#utility.yul\":5143:5149   */\n      dup3\n        /* \"#utility.yul\":5132:5141   */\n      dup7\n        /* \"#utility.yul\":5128:5150   */\n      add\n        /* \"#utility.yul\":5077:5160   */\n      tag_146\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5067:5160   */\n      swap3\n      pop\n        /* \"#utility.yul\":5023:5170   */\n      pop\n        /* \"#utility.yul\":5209:5211   */\n      0x40\n        /* \"#utility.yul\":5235:5286   */\n      tag_213\n        /* \"#utility.yul\":5278:5285   */\n      dup6\n        /* \"#utility.yul\":5269:5275   */\n      dup3\n        /* \"#utility.yul\":5258:5267   */\n      dup7\n        /* \"#utility.yul\":5254:5276   */\n      add\n        /* \"#utility.yul\":5235:5286   */\n      tag_145\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5225:5286   */\n      swap2\n      pop\n        /* \"#utility.yul\":5180:5296   */\n      pop\n        /* \"#utility.yul\":4773:5303   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5421   */\n    tag_150:\n        /* \"#utility.yul\":5392:5414   */\n      tag_215\n        /* \"#utility.yul\":5408:5413   */\n      dup2\n        /* \"#utility.yul\":5392:5414   */\n      tag_143\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5387:5390   */\n      dup3\n        /* \"#utility.yul\":5380:5415   */\n      mstore\n        /* \"#utility.yul\":5309:5421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5427:5743   */\n    tag_53:\n        /* \"#utility.yul\":5540:5544   */\n      0x00\n        /* \"#utility.yul\":5578:5580   */\n      0x40\n        /* \"#utility.yul\":5567:5576   */\n      dup3\n        /* \"#utility.yul\":5563:5581   */\n      add\n        /* \"#utility.yul\":5555:5581   */\n      swap1\n      pop\n        /* \"#utility.yul\":5591:5658   */\n      tag_217\n        /* \"#utility.yul\":5655:5656   */\n      0x00\n        /* \"#utility.yul\":5644:5653   */\n      dup4\n        /* \"#utility.yul\":5640:5657   */\n      add\n        /* \"#utility.yul\":5631:5637   */\n      dup6\n        /* \"#utility.yul\":5591:5658   */\n      tag_150\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5668:5736   */\n      tag_218\n        /* \"#utility.yul\":5732:5734   */\n      0x20\n        /* \"#utility.yul\":5721:5730   */\n      dup4\n        /* \"#utility.yul\":5717:5735   */\n      add\n        /* \"#utility.yul\":5708:5714   */\n      dup5\n        /* \"#utility.yul\":5668:5736   */\n      tag_150\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5427:5743   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5749:5929   */\n    tag_151:\n        /* \"#utility.yul\":5797:5874   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5794:5795   */\n      0x00\n        /* \"#utility.yul\":5787:5875   */\n      mstore\n        /* \"#utility.yul\":5894:5898   */\n      0x11\n        /* \"#utility.yul\":5891:5892   */\n      0x04\n        /* \"#utility.yul\":5884:5899   */\n      mstore\n        /* \"#utility.yul\":5918:5922   */\n      0x24\n        /* \"#utility.yul\":5915:5916   */\n      0x00\n        /* \"#utility.yul\":5908:5923   */\n      revert\n        /* \"#utility.yul\":5935:6129   */\n    tag_56:\n        /* \"#utility.yul\":5975:5979   */\n      0x00\n        /* \"#utility.yul\":5995:6015   */\n      tag_221\n        /* \"#utility.yul\":6013:6014   */\n      dup3\n        /* \"#utility.yul\":5995:6015   */\n      tag_140\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5990:6015   */\n      swap2\n      pop\n        /* \"#utility.yul\":6029:6049   */\n      tag_222\n        /* \"#utility.yul\":6047:6048   */\n      dup4\n        /* \"#utility.yul\":6029:6049   */\n      tag_140\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6024:6049   */\n      swap3\n      pop\n        /* \"#utility.yul\":6073:6074   */\n      dup3\n        /* \"#utility.yul\":6070:6071   */\n      dup3\n        /* \"#utility.yul\":6066:6075   */\n      sub\n        /* \"#utility.yul\":6058:6075   */\n      swap1\n      pop\n        /* \"#utility.yul\":6097:6098   */\n      dup2\n        /* \"#utility.yul\":6091:6095   */\n      dup2\n        /* \"#utility.yul\":6088:6099   */\n      gt\n        /* \"#utility.yul\":6085:6122   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6102:6120   */\n      tag_224\n      tag_151\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6085:6122   */\n    tag_223:\n        /* \"#utility.yul\":5935:6129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6135:6237   */\n    tag_152:\n        /* \"#utility.yul\":6177:6185   */\n      0x00\n        /* \"#utility.yul\":6224:6229   */\n      dup2\n        /* \"#utility.yul\":6221:6222   */\n      0x01\n        /* \"#utility.yul\":6217:6230   */\n      shr\n        /* \"#utility.yul\":6196:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":6135:6237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6243:7091   */\n    tag_153:\n        /* \"#utility.yul\":6304:6309   */\n      0x00\n        /* \"#utility.yul\":6311:6315   */\n      dup1\n        /* \"#utility.yul\":6335:6341   */\n      dup3\n        /* \"#utility.yul\":6326:6341   */\n      swap2\n      pop\n        /* \"#utility.yul\":6359:6364   */\n      dup4\n        /* \"#utility.yul\":6350:6364   */\n      swap1\n      pop\n        /* \"#utility.yul\":6373:7085   */\n    tag_227:\n        /* \"#utility.yul\":6394:6395   */\n      0x01\n        /* \"#utility.yul\":6384:6392   */\n      dup6\n        /* \"#utility.yul\":6381:6396   */\n      gt\n        /* \"#utility.yul\":6373:7085   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6489:6493   */\n      dup1\n        /* \"#utility.yul\":6484:6487   */\n      dup7\n        /* \"#utility.yul\":6480:6494   */\n      div\n        /* \"#utility.yul\":6474:6478   */\n      dup2\n        /* \"#utility.yul\":6471:6495   */\n      gt\n        /* \"#utility.yul\":6468:6518   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6498:6516   */\n      tag_231\n      tag_151\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6468:6518   */\n    tag_230:\n        /* \"#utility.yul\":6548:6549   */\n      0x01\n        /* \"#utility.yul\":6538:6546   */\n      dup6\n        /* \"#utility.yul\":6534:6550   */\n      and\n        /* \"#utility.yul\":6531:6982   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6963:6967   */\n      dup1\n        /* \"#utility.yul\":6956:6961   */\n      dup3\n        /* \"#utility.yul\":6952:6968   */\n      mul\n        /* \"#utility.yul\":6943:6968   */\n      swap2\n      pop\n        /* \"#utility.yul\":6531:6982   */\n    tag_232:\n        /* \"#utility.yul\":7013:7017   */\n      dup1\n        /* \"#utility.yul\":7007:7011   */\n      dup2\n        /* \"#utility.yul\":7003:7018   */\n      mul\n        /* \"#utility.yul\":6995:7018   */\n      swap1\n      pop\n        /* \"#utility.yul\":7043:7075   */\n      tag_233\n        /* \"#utility.yul\":7066:7074   */\n      dup6\n        /* \"#utility.yul\":7043:7075   */\n      tag_152\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7031:7075   */\n      swap5\n      pop\n        /* \"#utility.yul\":6373:7085   */\n      jump(tag_227)\n    tag_229:\n        /* \"#utility.yul\":6243:7091   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7097:8170   */\n    tag_154:\n        /* \"#utility.yul\":7151:7156   */\n      0x00\n        /* \"#utility.yul\":7342:7350   */\n      dup3\n        /* \"#utility.yul\":7332:7372   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7363:7364   */\n      0x01\n        /* \"#utility.yul\":7354:7364   */\n      swap1\n      pop\n        /* \"#utility.yul\":7365:7370   */\n      jump(tag_234)\n        /* \"#utility.yul\":7332:7372   */\n    tag_235:\n        /* \"#utility.yul\":7391:7395   */\n      dup2\n        /* \"#utility.yul\":7381:7417   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":7408:7409   */\n      0x00\n        /* \"#utility.yul\":7399:7409   */\n      swap1\n      pop\n        /* \"#utility.yul\":7410:7415   */\n      jump(tag_234)\n        /* \"#utility.yul\":7381:7417   */\n    tag_236:\n        /* \"#utility.yul\":7477:7481   */\n      dup2\n        /* \"#utility.yul\":7525:7526   */\n      0x01\n        /* \"#utility.yul\":7520:7547   */\n      dup2\n      eq\n      tag_238\n      jumpi\n        /* \"#utility.yul\":7561:7562   */\n      0x02\n        /* \"#utility.yul\":7556:7747   */\n      dup2\n      eq\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7470:7747   */\n      jump(tag_237)\n        /* \"#utility.yul\":7520:7547   */\n    tag_238:\n        /* \"#utility.yul\":7538:7539   */\n      0x01\n        /* \"#utility.yul\":7529:7539   */\n      swap2\n      pop\n        /* \"#utility.yul\":7540:7545   */\n      pop\n      jump(tag_234)\n        /* \"#utility.yul\":7556:7747   */\n    tag_239:\n        /* \"#utility.yul\":7601:7604   */\n      0xff\n        /* \"#utility.yul\":7591:7599   */\n      dup5\n        /* \"#utility.yul\":7588:7605   */\n      gt\n        /* \"#utility.yul\":7585:7628   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":7608:7626   */\n      tag_241\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7585:7628   */\n    tag_240:\n        /* \"#utility.yul\":7657:7665   */\n      dup4\n        /* \"#utility.yul\":7654:7655   */\n      0x02\n        /* \"#utility.yul\":7650:7666   */\n      exp\n        /* \"#utility.yul\":7641:7666   */\n      swap2\n      pop\n        /* \"#utility.yul\":7692:7695   */\n      dup5\n        /* \"#utility.yul\":7685:7690   */\n      dup3\n        /* \"#utility.yul\":7682:7696   */\n      gt\n        /* \"#utility.yul\":7679:7719   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7699:7717   */\n      tag_243\n      tag_151\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7679:7719   */\n    tag_242:\n        /* \"#utility.yul\":7732:7737   */\n      pop\n      jump(tag_234)\n        /* \"#utility.yul\":7470:7747   */\n    tag_237:\n      pop\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"#utility.yul\":7846:7854   */\n      dup4\n        /* \"#utility.yul\":7843:7859   */\n      lt\n        /* \"#utility.yul\":7837:7840   */\n      0x0133\n        /* \"#utility.yul\":7831:7835   */\n      dup4\n        /* \"#utility.yul\":7828:7841   */\n      lt\n        /* \"#utility.yul\":7824:7860   */\n      and\n        /* \"#utility.yul\":7806:7808   */\n      0x4e\n        /* \"#utility.yul\":7796:7804   */\n      dup5\n        /* \"#utility.yul\":7793:7809   */\n      lt\n        /* \"#utility.yul\":7788:7790   */\n      0x0b\n        /* \"#utility.yul\":7782:7786   */\n      dup5\n        /* \"#utility.yul\":7779:7791   */\n      lt\n        /* \"#utility.yul\":7775:7810   */\n      and\n        /* \"#utility.yul\":7759:7870   */\n      or\n        /* \"#utility.yul\":7756:8002   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":7912:7920   */\n      dup3\n        /* \"#utility.yul\":7906:7910   */\n      dup3\n        /* \"#utility.yul\":7902:7921   */\n      exp\n        /* \"#utility.yul\":7893:7921   */\n      swap1\n      pop\n        /* \"#utility.yul\":7947:7950   */\n      dup4\n        /* \"#utility.yul\":7940:7945   */\n      dup2\n        /* \"#utility.yul\":7937:7951   */\n      gt\n        /* \"#utility.yul\":7934:7974   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7954:7972   */\n      tag_246\n      tag_151\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7934:7974   */\n    tag_245:\n        /* \"#utility.yul\":7987:7992   */\n      jump(tag_234)\n        /* \"#utility.yul\":7756:8002   */\n    tag_244:\n        /* \"#utility.yul\":8027:8069   */\n      tag_247\n        /* \"#utility.yul\":8065:8068   */\n      dup5\n        /* \"#utility.yul\":8055:8063   */\n      dup5\n        /* \"#utility.yul\":8049:8053   */\n      dup5\n        /* \"#utility.yul\":8046:8047   */\n      0x01\n        /* \"#utility.yul\":8027:8069   */\n      tag_153\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8012:8069   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8101:8105   */\n      dup2\n        /* \"#utility.yul\":8096:8099   */\n      dup5\n        /* \"#utility.yul\":8092:8106   */\n      div\n        /* \"#utility.yul\":8085:8090   */\n      dup2\n        /* \"#utility.yul\":8082:8107   */\n      gt\n        /* \"#utility.yul\":8079:8130   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":8110:8128   */\n      tag_249\n      tag_151\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8079:8130   */\n    tag_248:\n        /* \"#utility.yul\":8159:8163   */\n      dup2\n        /* \"#utility.yul\":8152:8157   */\n      dup2\n        /* \"#utility.yul\":8148:8164   */\n      mul\n        /* \"#utility.yul\":8139:8164   */\n      swap1\n      pop\n        /* \"#utility.yul\":7097:8170   */\n    tag_234:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8176:8457   */\n    tag_60:\n        /* \"#utility.yul\":8234:8239   */\n      0x00\n        /* \"#utility.yul\":8258:8281   */\n      tag_251\n        /* \"#utility.yul\":8276:8280   */\n      dup3\n        /* \"#utility.yul\":8258:8281   */\n      tag_140\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8250:8281   */\n      swap2\n      pop\n        /* \"#utility.yul\":8302:8327   */\n      tag_252\n        /* \"#utility.yul\":8318:8326   */\n      dup4\n        /* \"#utility.yul\":8302:8327   */\n      tag_143\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8290:8327   */\n      swap3\n      pop\n        /* \"#utility.yul\":8346:8450   */\n      tag_253\n        /* \"#utility.yul\":8383:8449   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8373:8381   */\n      dup5\n        /* \"#utility.yul\":8367:8371   */\n      dup5\n        /* \"#utility.yul\":8346:8450   */\n      tag_154\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8337:8450   */\n      swap1\n      pop\n        /* \"#utility.yul\":8176:8457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8463:8873   */\n    tag_62:\n        /* \"#utility.yul\":8503:8510   */\n      0x00\n        /* \"#utility.yul\":8526:8546   */\n      tag_255\n        /* \"#utility.yul\":8544:8545   */\n      dup3\n        /* \"#utility.yul\":8526:8546   */\n      tag_140\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8521:8546   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8580   */\n      tag_256\n        /* \"#utility.yul\":8578:8579   */\n      dup4\n        /* \"#utility.yul\":8560:8580   */\n      tag_140\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8555:8580   */\n      swap3\n      pop\n        /* \"#utility.yul\":8615:8616   */\n      dup3\n        /* \"#utility.yul\":8612:8613   */\n      dup3\n        /* \"#utility.yul\":8608:8617   */\n      mul\n        /* \"#utility.yul\":8637:8667   */\n      tag_257\n        /* \"#utility.yul\":8655:8666   */\n      dup2\n        /* \"#utility.yul\":8637:8667   */\n      tag_140\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8626:8667   */\n      swap2\n      pop\n        /* \"#utility.yul\":8816:8817   */\n      dup3\n        /* \"#utility.yul\":8807:8814   */\n      dup3\n        /* \"#utility.yul\":8803:8818   */\n      div\n        /* \"#utility.yul\":8800:8801   */\n      dup5\n        /* \"#utility.yul\":8797:8819   */\n      eq\n        /* \"#utility.yul\":8777:8778   */\n      dup4\n        /* \"#utility.yul\":8770:8779   */\n      iszero\n        /* \"#utility.yul\":8750:8833   */\n      or\n        /* \"#utility.yul\":8727:8866   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":8846:8864   */\n      tag_259\n      tag_151\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8727:8866   */\n    tag_258:\n        /* \"#utility.yul\":8511:8873   */\n      pop\n        /* \"#utility.yul\":8463:8873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8879:9059   */\n    tag_127:\n        /* \"#utility.yul\":8927:9004   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8924:8925   */\n      0x00\n        /* \"#utility.yul\":8917:9005   */\n      mstore\n        /* \"#utility.yul\":9024:9028   */\n      0x12\n        /* \"#utility.yul\":9021:9022   */\n      0x04\n        /* \"#utility.yul\":9014:9029   */\n      mstore\n        /* \"#utility.yul\":9048:9052   */\n      0x24\n        /* \"#utility.yul\":9045:9046   */\n      0x00\n        /* \"#utility.yul\":9038:9053   */\n      revert\n        /* \"#utility.yul\":9065:9250   */\n    tag_64:\n        /* \"#utility.yul\":9105:9106   */\n      0x00\n        /* \"#utility.yul\":9122:9142   */\n      tag_262\n        /* \"#utility.yul\":9140:9141   */\n      dup3\n        /* \"#utility.yul\":9122:9142   */\n      tag_140\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9117:9142   */\n      swap2\n      pop\n        /* \"#utility.yul\":9156:9176   */\n      tag_263\n        /* \"#utility.yul\":9174:9175   */\n      dup4\n        /* \"#utility.yul\":9156:9176   */\n      tag_140\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9151:9176   */\n      swap3\n      pop\n        /* \"#utility.yul\":9195:9196   */\n      dup3\n        /* \"#utility.yul\":9185:9220   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9200:9218   */\n      tag_265\n      tag_127\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9185:9220   */\n    tag_264:\n        /* \"#utility.yul\":9242:9243   */\n      dup3\n        /* \"#utility.yul\":9239:9240   */\n      dup3\n        /* \"#utility.yul\":9235:9244   */\n      div\n        /* \"#utility.yul\":9230:9244   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9256:9447   */\n    tag_84:\n        /* \"#utility.yul\":9296:9299   */\n      0x00\n        /* \"#utility.yul\":9315:9335   */\n      tag_267\n        /* \"#utility.yul\":9333:9334   */\n      dup3\n        /* \"#utility.yul\":9315:9335   */\n      tag_140\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9310:9335   */\n      swap2\n      pop\n        /* \"#utility.yul\":9349:9369   */\n      tag_268\n        /* \"#utility.yul\":9367:9368   */\n      dup4\n        /* \"#utility.yul\":9349:9369   */\n      tag_140\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9344:9369   */\n      swap3\n      pop\n        /* \"#utility.yul\":9392:9393   */\n      dup3\n        /* \"#utility.yul\":9389:9390   */\n      dup3\n        /* \"#utility.yul\":9385:9394   */\n      add\n        /* \"#utility.yul\":9378:9394   */\n      swap1\n      pop\n        /* \"#utility.yul\":9413:9416   */\n      dup1\n        /* \"#utility.yul\":9410:9411   */\n      dup3\n        /* \"#utility.yul\":9407:9417   */\n      gt\n        /* \"#utility.yul\":9404:9440   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":9420:9438   */\n      tag_270\n      tag_151\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9404:9440   */\n    tag_269:\n        /* \"#utility.yul\":9256:9447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9453:9622   */\n    tag_155:\n        /* \"#utility.yul\":9537:9548   */\n      0x00\n        /* \"#utility.yul\":9571:9577   */\n      dup3\n        /* \"#utility.yul\":9566:9569   */\n      dup3\n        /* \"#utility.yul\":9559:9578   */\n      mstore\n        /* \"#utility.yul\":9611:9615   */\n      0x20\n        /* \"#utility.yul\":9606:9609   */\n      dup3\n        /* \"#utility.yul\":9602:9616   */\n      add\n        /* \"#utility.yul\":9587:9616   */\n      swap1\n      pop\n        /* \"#utility.yul\":9453:9622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9628:9799   */\n    tag_156:\n        /* \"#utility.yul\":9768:9791   */\n      0x4d6174683a206d756c446976206f766572666c6f770000000000000000000000\n        /* \"#utility.yul\":9764:9765   */\n      0x00\n        /* \"#utility.yul\":9756:9762   */\n      dup3\n        /* \"#utility.yul\":9752:9766   */\n      add\n        /* \"#utility.yul\":9745:9792   */\n      mstore\n        /* \"#utility.yul\":9628:9799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:10171   */\n    tag_157:\n        /* \"#utility.yul\":9947:9950   */\n      0x00\n        /* \"#utility.yul\":9968:10035   */\n      tag_274\n        /* \"#utility.yul\":10032:10034   */\n      0x15\n        /* \"#utility.yul\":10027:10030   */\n      dup4\n        /* \"#utility.yul\":9968:10035   */\n      tag_155\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9961:10035   */\n      swap2\n      pop\n        /* \"#utility.yul\":10044:10137   */\n      tag_275\n        /* \"#utility.yul\":10133:10136   */\n      dup3\n        /* \"#utility.yul\":10044:10137   */\n      tag_156\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10162:10164   */\n      0x20\n        /* \"#utility.yul\":10157:10160   */\n      dup3\n        /* \"#utility.yul\":10153:10165   */\n      add\n        /* \"#utility.yul\":10146:10165   */\n      swap1\n      pop\n        /* \"#utility.yul\":9805:10171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10177:10596   */\n    tag_130:\n        /* \"#utility.yul\":10343:10347   */\n      0x00\n        /* \"#utility.yul\":10381:10383   */\n      0x20\n        /* \"#utility.yul\":10370:10379   */\n      dup3\n        /* \"#utility.yul\":10366:10384   */\n      add\n        /* \"#utility.yul\":10358:10384   */\n      swap1\n      pop\n        /* \"#utility.yul\":10430:10439   */\n      dup2\n        /* \"#utility.yul\":10424:10428   */\n      dup2\n        /* \"#utility.yul\":10420:10440   */\n      sub\n        /* \"#utility.yul\":10416:10417   */\n      0x00\n        /* \"#utility.yul\":10405:10414   */\n      dup4\n        /* \"#utility.yul\":10401:10418   */\n      add\n        /* \"#utility.yul\":10394:10441   */\n      mstore\n        /* \"#utility.yul\":10458:10589   */\n      tag_277\n        /* \"#utility.yul\":10584:10588   */\n      dup2\n        /* \"#utility.yul\":10458:10589   */\n      tag_157\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10450:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122048185644a88b525690311361ff88e89d79227c1ed2f6dd26a7d5520297f1350864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D02EBF4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7D02EBF4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8444B813 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA7E7C9F9 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE51356E8 EQ PUSH2 0x1DD JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x2833D1F0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3E60D8E0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4B602C6D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x58633635 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x274 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH1 0xA PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x356 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x3B5 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C0 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x40F DUP12 DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B DUP3 DUP12 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x495 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH1 0x12 DUP4 PUSH1 0xFF AND EQ PUSH2 0x528 JUMPI PUSH2 0x514 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x51D DUP8 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0xA PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP6 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x567 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x5FD JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x627 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH2 0x63E DUP2 DUP5 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x6D0 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xFF AND SUB PUSH2 0x739 JUMPI DUP3 DUP5 PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP PUSH2 0x770 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP3 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x7E1 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EC PUSH2 0x96B JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x83B DUP12 DUP12 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x847 DUP3 DUP3 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x895 JUMPI DUP4 DUP3 DUP2 PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x964 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CE SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9E5 DUP3 PUSH2 0x99C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA03 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH2 0xA23 DUP3 DUP3 PUSH2 0x9DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP2 EQ PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA58 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA74 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP2 EQ PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA91 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH2 0xAAC PUSH2 0x997 JUMP JUMPDEST JUMPDEST PUSH2 0xAB7 PUSH1 0x40 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC7 DUP5 DUP3 DUP6 ADD PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xADB DUP5 DUP3 DUP6 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFE JUMPI PUSH2 0xAFD PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB1D DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xB5B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB6E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB36 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC05 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC6E DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xC79 DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCEE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCD9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCE7 DUP6 PUSH2 0xC97 JUMP JUMPDEST SWAP5 POP PUSH2 0xCAE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD07 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH2 0xD15 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD35 JUMPI PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP PUSH2 0xDC3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD99 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xDA6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP4 PUSH2 0xA5E JUMP JUMPDEST SWAP3 POP PUSH2 0xE0D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE20 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE39 DUP2 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9C DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xECD DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEE5 JUMPI PUSH2 0xEE4 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6174683A206D756C446976206F766572666C6F770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF32 PUSH1 0x15 DUP4 PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP PUSH2 0xF3D DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF61 DUP2 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE XOR JUMP PREVRANDAO 0xA8 DUP12 MSTORE JUMP SWAP1 BALANCE SGT PUSH2 0xFF88 0xE8 SWAP14 PUSH26 0x227C1ED2F6DD26A7D5520297F1350864736F6C63430008130033 ",
							"sourceMap": "1212:4796:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_885": {
									"entryPoint": 1070,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@asEther_1230": {
									"entryPoint": 709,
									"id": 1230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@asNewDecimals_1170": {
									"entryPoint": 1254,
									"id": 1170,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_1088": {
									"entryPoint": 1430,
									"id": 1088,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mulDiv_1706": {
									"entryPoint": 2138,
									"id": 1706,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mul_1022": {
									"entryPoint": 1641,
									"id": 1022,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@scale_763": {
									"entryPoint": 1914,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@slice_830": {
									"entryPoint": 846,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_940": {
									"entryPoint": 525,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10599:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:10",
														"type": ""
													}
												],
												"src": "457:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:10"
															},
															"nodeType": "YulIf",
															"src": "907:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:10",
														"type": ""
													}
												],
												"src": "751:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:10",
														"type": ""
													}
												],
												"src": "1038:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:10"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1362:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1351:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1323:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1333:7:10",
														"type": ""
													}
												],
												"src": "1296:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1479:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1481:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1481:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1481:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1445:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1470:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1452:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1452:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1442:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1442:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1435:43:10"
															},
															"nodeType": "YulIf",
															"src": "1432:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1415:5:10",
														"type": ""
													}
												],
												"src": "1379:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1559:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1569:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1578:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1569:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1634:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1607:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1537:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1545:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1553:5:10",
														"type": ""
													}
												],
												"src": "1507:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1720:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1727:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1716:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:10",
														"type": ""
													}
												],
												"src": "1652:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:77:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1840:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1852:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1842:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1842:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1842:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1808:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1831:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "1815:15:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1815:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1805:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:41:10"
															},
															"nodeType": "YulIf",
															"src": "1795:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1778:5:10",
														"type": ""
													}
												],
												"src": "1744:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:85:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1928:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1937:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1928:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1991:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1966:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1896:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1904:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1912:5:10",
														"type": ""
													}
												],
												"src": "1868:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2124:497:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2168:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "2170:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2170:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2170:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2145:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2150:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2141:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2137:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:30:10"
															},
															"nodeType": "YulIf",
															"src": "2134:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2260:30:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2285:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2269:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2260:5:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2300:151:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2336:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2350:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2340:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2376:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2383:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2372:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2415:9:10"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2426:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2411:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2411:22:10"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2435:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2390:20:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2390:49:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2365:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:75:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2365:75:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2461:153:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2500:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2504:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2541:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2548:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2537:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2537:16:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2578:9:10"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2589:6:10"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2574:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2574:22:10"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2598:3:10"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2555:18:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2555:47:10"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2530:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:73:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2530:73:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2099:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2110:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2118:5:10",
														"type": ""
													}
												],
												"src": "2039:582:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:452:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2817:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2819:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2819:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2819:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2791:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2800:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2812:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:33:10"
															},
															"nodeType": "YulIf",
															"src": "2780:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2910:147:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2925:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2939:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2929:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2954:93:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2964:50:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2964:83:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2954:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3067:148:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3082:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3096:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3086:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3112:93:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3177:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3188:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3173:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3173:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3197:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3122:50:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:83:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3112:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2732:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2743:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2755:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2763:6:10",
														"type": ""
													}
												],
												"src": "2627:595:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3300:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3323:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3271:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3278:3:10",
														"type": ""
													}
												],
												"src": "3228:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3410:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3431:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3415:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3381:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3388:3:10",
														"type": ""
													}
												],
												"src": "3342:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3632:392:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3642:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3646:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3678:165:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3714:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3744:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3751:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3740:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3740:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3734:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3734:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3718:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3804:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3822:3:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3827:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3818:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3818:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3770:33:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:63:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3770:63:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3853:164:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3892:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3922:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3929:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3918:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3918:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3912:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3896:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3978:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3996:3:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4001:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3992:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3992:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3948:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3948:59:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3948:59:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3619:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3626:3:10",
														"type": ""
													}
												],
												"src": "3506:518:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4188:184:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4198:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4206:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4206:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4198:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4234:103:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:131:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4234:131:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4160:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4172:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4183:4:10",
														"type": ""
													}
												],
												"src": "4030:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4474:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4520:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4522:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4522:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4522:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4495:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4491:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4491:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:32:10"
															},
															"nodeType": "YulIf",
															"src": "4484:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4613:147:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4628:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4632:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4657:93:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4722:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4733:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4718:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4718:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4742:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4667:50:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:83:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4657:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4444:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4455:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4467:6:10",
														"type": ""
													}
												],
												"src": "4378:389:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4884:419:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4930:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4932:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4932:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4932:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4905:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4901:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4901:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4926:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:32:10"
															},
															"nodeType": "YulIf",
															"src": "4894:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5023:147:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5038:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5042:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5067:93:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5132:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5143:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5128:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5128:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5152:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5077:50:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5077:83:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5067:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5180:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5195:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5199:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5225:61:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5258:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5269:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5254:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5254:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5278:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5235:18:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5235:51:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5225:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4846:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4857:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4869:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4877:6:10",
														"type": ""
													}
												],
												"src": "4773:530:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5370:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5387:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5408:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5392:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5392:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5358:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5365:3:10",
														"type": ""
													}
												],
												"src": "5309:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5545:198:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5555:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5567:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5578:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5555:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5631:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5644:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5655:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5591:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5591:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5721:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5732:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5717:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5509:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5521:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5529:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5540:4:10",
														"type": ""
													}
												],
												"src": "5427:316:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5787:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5884:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5884:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5908:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5908:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5749:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5980:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5990:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6013:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5995:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5990:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6024:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6047:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6029:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6024:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6070:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6073:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6066:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6058:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6100:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6102:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6102:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6102:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6091:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6097:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6088:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:11:10"
															},
															"nodeType": "YulIf",
															"src": "6085:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5966:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5969:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5975:4:10",
														"type": ""
													}
												],
												"src": "5935:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6186:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6196:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6224:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6196:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6167:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6177:8:10",
														"type": ""
													}
												],
												"src": "6135:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6316:775:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6326:15:10",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "6335:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6326:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6350:14:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "6359:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6350:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6408:677:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6496:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6498:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6498:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6498:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6474:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6484:3:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6480:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6480:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6471:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6471:24:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6468:50:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6563:419:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6943:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6956:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6963:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6952:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6952:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6943:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6538:8:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6548:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6534:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6534:16:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6531:451:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6995:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7007:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7013:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7003:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7003:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6995:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7031:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7066:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "7043:22:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7043:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7031:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6384:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6381:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6397:2:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6377:3:10",
																"statements": []
															},
															"src": "6373:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "6271:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "6279:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6286:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6296:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6304:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6311:4:10",
														"type": ""
													}
												],
												"src": "6243:848:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7157:1013:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7352:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7354:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7363:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7354:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7365:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7342:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7335:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7335:16:10"
															},
															"nodeType": "YulIf",
															"src": "7332:40:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7397:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7399:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7408:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7399:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7410:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7391:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:12:10"
															},
															"nodeType": "YulIf",
															"src": "7381:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7527:20:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7529:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7538:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7529:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7540:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7520:27:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7525:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7571:176:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7606:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7608:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7608:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7608:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7591:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7601:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7588:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7588:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "7585:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7641:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7654:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7657:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "7650:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7650:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7641:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7697:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7699:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7699:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7699:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7685:5:10"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7692:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7682:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7682:14:10"
																				},
																				"nodeType": "YulIf",
																				"src": "7679:40:10"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7732:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7556:191:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7477:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "7470:277:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7879:123:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7893:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7906:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7912:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7902:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7902:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7893:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7952:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7954:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7954:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7954:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7940:5:10"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7947:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7937:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7937:14:10"
																		},
																		"nodeType": "YulIf",
																		"src": "7934:40:10"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7987:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7782:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7788:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7779:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7779:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7796:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7806:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7793:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7793:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7775:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7775:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7831:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7837:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7828:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7828:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7846:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7856:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7843:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7843:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7759:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:111:10"
															},
															"nodeType": "YulIf",
															"src": "7756:246:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8012:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8046:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8049:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8055:8:10"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "8065:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8027:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8027:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8012:5:10"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8019:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8108:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8110:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8110:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8110:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8085:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "8096:3:10"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8101:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8082:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:25:10"
															},
															"nodeType": "YulIf",
															"src": "8079:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8139:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8152:5:10"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8159:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8139:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7127:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7133:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7143:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7151:5:10",
														"type": ""
													}
												],
												"src": "7097:1073:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8240:217:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8250:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8276:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8258:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8250:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8318:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8302:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "8290:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8337:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8367:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8373:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8383:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8346:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8337:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8215:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8221:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8234:5:10",
														"type": ""
													}
												],
												"src": "8176:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8511:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8521:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8544:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8526:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8526:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8521:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8555:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8578:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8560:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8555:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8589:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8612:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8615:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8593:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8626:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8655:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8637:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8637:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8626:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8846:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8777:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8770:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8770:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8800:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8807:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8816:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8803:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8803:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8797:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8797:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8750:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8750:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:113:10"
															},
															"nodeType": "YulIf",
															"src": "8727:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8494:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8497:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8503:7:10",
														"type": ""
													}
												],
												"src": "8463:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8917:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8917:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9021:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9024:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9014:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9048:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9038:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9038:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8879:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9107:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9117:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9140:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9122:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9117:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9151:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9174:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9156:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9151:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9198:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9200:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9200:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9200:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9195:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9188:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:9:10"
															},
															"nodeType": "YulIf",
															"src": "9185:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9230:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9239:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9242:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9235:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9230:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9096:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9099:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9105:1:10",
														"type": ""
													}
												],
												"src": "9065:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9300:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9310:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9333:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9315:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9310:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9344:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9367:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9349:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9344:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9378:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9389:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9392:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9385:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9418:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9420:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9420:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9420:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9410:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9413:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9407:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:10:10"
															},
															"nodeType": "YulIf",
															"src": "9404:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9287:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9290:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9296:3:10",
														"type": ""
													}
												],
												"src": "9256:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9549:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9566:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9571:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9559:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9587:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9606:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9602:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9602:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9587:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9521:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9526:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9537:11:10",
														"type": ""
													}
												],
												"src": "9453:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9734:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9756:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9764:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9752:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9752:14:10"
																	},
																	{
																		"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9768:23:10",
																		"type": "",
																		"value": "Math: mulDiv overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9745:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9745:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9745:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9726:6:10",
														"type": ""
													}
												],
												"src": "9628:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9951:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9961:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10027:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9968:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10133:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																	"nodeType": "YulIdentifier",
																	"src": "10044:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10044:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10044:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10146:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10157:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10162:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10153:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10153:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9939:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9947:3:10",
														"type": ""
													}
												],
												"src": "9805:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10348:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10358:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10370:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10366:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10358:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10405:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10416:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10401:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10424:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10420:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10394:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10450:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10584:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10458:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10450:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10328:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10343:4:10",
														"type": ""
													}
												],
												"src": "10177:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct FixedPointValue\n    function abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // value\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // decimals\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct FixedPointValue -> struct FixedPointValue\n    function abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // decimals\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851(memPtr) {\n\n        mstore(add(memPtr, 0), \"Math: mulDiv overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80637d02ebf41161005b5780637d02ebf41461014d5780638444b8131461017d578063a7e7c9f9146101ad578063e51356e8146101dd57610088565b80632833d1f01461008d5780633e60d8e0146100bd5780634b602c6d146100ed578063586336351461011d575b600080fd5b6100a760048036038101906100a29190610ae7565b61020d565b6040516100b49190610b74565b60405180910390f35b6100d760048036038101906100d29190610b8f565b6102c5565b6040516100e49190610b74565b60405180910390f35b61010760048036038101906101029190610ae7565b61034e565b6040516101149190610b74565b60405180910390f35b61013760048036038101906101329190610ae7565b61042e565b6040516101449190610b74565b60405180910390f35b61016760048036038101906101629190610bbc565b6104e6565b6040516101749190610b74565b60405180910390f35b61019760048036038101906101929190610ae7565b610596565b6040516101a49190610b74565b60405180910390f35b6101c760048036038101906101c29190610ae7565b610669565b6040516101d49190610b74565b60405180910390f35b6101f760048036038101906101f29190610ae7565b61077a565b6040516102049190610b74565b60405180910390f35b61021561096b565b828260008083602001519150826020015190508060ff168260ff16146102745781816040517f5bc4748600000000000000000000000000000000000000000000000000000000815260040161026b929190610c0b565b60405180910390fd5b6000806000808a6020015193508a60000151925089600001519150818361029b9190610c63565b905060405180604001604052808281526020018560ff168152509850505050505050505092915050565b6102cd61096b565b60008060008460200151925084600001519150670de0b6b3a76400008084600a6102f79190610dca565b670de0b6b3a76400008561030b9190610e15565b6103159190610e86565b61031f9190610e15565b6103299190610e86565b90506040518060400160405280828152602001601260ff168152509350505050919050565b61035661096b565b828260008083602001519150826020015190508060ff168260ff16146103b55781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016103ac929190610c0b565b60405180910390fd5b6000806103c061096b565b6103c861096b565b8a60200151935083600a6103dc9190610dca565b92506040518060400160405280846127106103f79190610e15565b81526020018560ff16815250905061040f8b82610596565b915061041b828b610669565b9150819850505050505050505092915050565b61043661096b565b828260008083602001519150826020015190508060ff168260ff16146104955781816040517f5bc4748600000000000000000000000000000000000000000000000000000000815260040161048c929190610c0b565b60405180910390fd5b6000806000808a6020015193508a6000015192508960000151915081836104bc9190610eb7565b905060405180604001604052808281526020018560ff168152509850505050505050505092915050565b6104ee61096b565b6000806000856020015192508560000151915060128360ff16146105285761051461096b565b61051d876102c5565b905080600001519250505b670de0b6b3a764000085600a61053e9190610dca565b670de0b6b3a764000080856105539190610e15565b61055d9190610e86565b6105679190610e15565b6105719190610e86565b905060405180604001604052808281526020018660ff16815250935050505092915050565b61059e61096b565b828260008083602001519150826020015190508060ff168260ff16146105fd5781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016105f4929190610c0b565b60405180910390fd5b60008060008060008b6020015194508b6000015193508a60000151925084600a6106279190610dca565b905061063e81848661085a9092919063ffffffff16565b915060405180604001604052808381526020018660ff16815250995050505050505050505092915050565b61067161096b565b828260008083602001519150826020015190508060ff168260ff16146106d05781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016106c7929190610c0b565b60405180910390fd5b60008060008060008b6020015194508b6000015193508a60000151925084600a6106fa9190610dca565b905060008560ff16036107395782846107139190610e15565b915060405180604001604052808381526020018660ff1681525099505050505050610770565b61074e83828661085a9092919063ffffffff16565b915060405180604001604052808381526020018660ff16815250995050505050505b5050505092915050565b61078261096b565b828260008083602001519150826020015190508060ff168260ff16146107e15781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016107d8929190610c0b565b60405180910390fd5b6000806107ec61096b565b6107f461096b565b8a60200151935083600a6108089190610dca565b92506040518060400160405280846127106108239190610e15565b81526020018560ff16815250905061083b8b8b610596565b91506108478282610669565b9150819850505050505050505092915050565b60008060008019858709858702925082811083820303915050600081036108955783828161088b5761088a610e57565b5b0492505050610964565b8084116108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90610f48565b60405180910390fd5b60008486880990508281118203915080830392506000600186190186169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b604051806040016040528060008152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109e58261099c565b810181811067ffffffffffffffff82111715610a0457610a036109ad565b5b80604052505050565b6000610a17610988565b9050610a2382826109dc565b919050565b6000819050919050565b610a3b81610a28565b8114610a4657600080fd5b50565b600081359050610a5881610a32565b92915050565b600060ff82169050919050565b610a7481610a5e565b8114610a7f57600080fd5b50565b600081359050610a9181610a6b565b92915050565b600060408284031215610aad57610aac610997565b5b610ab76040610a0d565b90506000610ac784828501610a49565b6000830152506020610adb84828501610a82565b60208301525092915050565b60008060808385031215610afe57610afd610992565b5b6000610b0c85828601610a97565b9250506040610b1d85828601610a97565b9150509250929050565b610b3081610a28565b82525050565b610b3f81610a5e565b82525050565b604082016000820151610b5b6000850182610b27565b506020820151610b6e6020850182610b36565b50505050565b6000604082019050610b896000830184610b45565b92915050565b600060408284031215610ba557610ba4610992565b5b6000610bb384828501610a97565b91505092915050565b60008060608385031215610bd357610bd2610992565b5b6000610be185828601610a97565b9250506040610bf285828601610a82565b9150509250929050565b610c0581610a5e565b82525050565b6000604082019050610c206000830185610bfc565b610c2d6020830184610bfc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610a28565b9150610c7983610a28565b9250828203905081811115610c9157610c90610c34565b5b92915050565b60008160011c9050919050565b6000808291508390505b6001851115610cee57808604811115610cca57610cc9610c34565b5b6001851615610cd95780820291505b8081029050610ce785610c97565b9450610cae565b94509492505050565b600082610d075760019050610dc3565b81610d155760009050610dc3565b8160018114610d2b5760028114610d3557610d64565b6001915050610dc3565b60ff841115610d4757610d46610c34565b5b8360020a915084821115610d5e57610d5d610c34565b5b50610dc3565b5060208310610133831016604e8410600b8410161715610d995782820a905083811115610d9457610d93610c34565b5b610dc3565b610da68484846001610ca4565b92509050818404811115610dbd57610dbc610c34565b5b81810290505b9392505050565b6000610dd582610a28565b9150610de083610a5e565b9250610e0d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610cf7565b905092915050565b6000610e2082610a28565b9150610e2b83610a28565b9250828202610e3981610a28565b91508282048414831517610e5057610e4f610c34565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9182610a28565b9150610e9c83610a28565b925082610eac57610eab610e57565b5b828204905092915050565b6000610ec282610a28565b9150610ecd83610a28565b9250828201905080821115610ee557610ee4610c34565b5b92915050565b600082825260208201905092915050565b7f4d6174683a206d756c446976206f766572666c6f770000000000000000000000600082015250565b6000610f32601583610eeb565b9150610f3d82610efc565b602082019050919050565b60006020820190508181036000830152610f6181610f25565b905091905056fea264697066735822122048185644a88b525690311361ff88e89d79227c1ed2f6dd26a7d5520297f1350864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D02EBF4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7D02EBF4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8444B813 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA7E7C9F9 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE51356E8 EQ PUSH2 0x1DD JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x2833D1F0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3E60D8E0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4B602C6D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x58633635 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x274 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH1 0xA PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x356 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x3B5 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C0 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x40F DUP12 DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B DUP3 DUP12 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x495 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH1 0x12 DUP4 PUSH1 0xFF AND EQ PUSH2 0x528 JUMPI PUSH2 0x514 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x51D DUP8 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0xA PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP6 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x567 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x5FD JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x627 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH2 0x63E DUP2 DUP5 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x6D0 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xFF AND SUB PUSH2 0x739 JUMPI DUP3 DUP5 PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP PUSH2 0x770 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP3 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x7E1 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EC PUSH2 0x96B JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x83B DUP12 DUP12 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x847 DUP3 DUP3 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x895 JUMPI DUP4 DUP3 DUP2 PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x964 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CE SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9E5 DUP3 PUSH2 0x99C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA03 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH2 0xA23 DUP3 DUP3 PUSH2 0x9DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP2 EQ PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA58 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA74 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP2 EQ PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA91 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH2 0xAAC PUSH2 0x997 JUMP JUMPDEST JUMPDEST PUSH2 0xAB7 PUSH1 0x40 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC7 DUP5 DUP3 DUP6 ADD PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xADB DUP5 DUP3 DUP6 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFE JUMPI PUSH2 0xAFD PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB1D DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xB5B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB6E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB36 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC05 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC6E DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xC79 DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCEE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCD9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCE7 DUP6 PUSH2 0xC97 JUMP JUMPDEST SWAP5 POP PUSH2 0xCAE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD07 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH2 0xD15 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD35 JUMPI PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP PUSH2 0xDC3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD99 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xDA6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP4 PUSH2 0xA5E JUMP JUMPDEST SWAP3 POP PUSH2 0xE0D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE20 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE39 DUP2 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9C DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xECD DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEE5 JUMPI PUSH2 0xEE4 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6174683A206D756C446976206F766572666C6F770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF32 PUSH1 0x15 DUP4 PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP PUSH2 0xF3D DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF61 DUP2 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE XOR JUMP PREVRANDAO 0xA8 DUP12 MSTORE JUMP SWAP1 BALANCE SGT PUSH2 0xFF88 0xE8 SWAP14 PUSH26 0x227C1ED2F6DD26A7D5520297F1350864736F6C63430008130033 ",
							"sourceMap": "1212:4796:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3300:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5616:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2242:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2836:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5028:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4471:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3764:701;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:568;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3300:458;3436:22;;:::i;:::-;3415:4;3421;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;3470:14:::1;3494::::0;3518::::1;3542::::0;3577:4:::1;:13;;;3566:24;;3609:4;:10;;;3600:19;;3638:4;:10;;;3629:19;;3676:6;3667;:15;;;;:::i;:::-;3658:24;;3699:52;;;;;;;;3723:6;3699:52;;;;3741:8;3699:52;;;;::::0;3692:59:::1;;;;;;1437:225:::0;;3300:458;;;;;;:::o;5616:390::-;5682:22;;:::i;:::-;5716:21;5747:13;5770:14;5812:3;:12;;;5794:30;;5842:3;:9;;;5834:17;;5929:6;5917;5896:15;5892:2;:19;;;;:::i;:::-;5881:6;5872:5;:16;;;;:::i;:::-;:40;;;;:::i;:::-;5871:53;;;;:::i;:::-;5870:66;;;;:::i;:::-;5861:75;;5953:46;;;;;;;;5977:6;5953:46;;;;5995:2;5953:46;;;;;5946:53;;;;;5616:390;;;:::o;2242:588::-;2402:22;;:::i;:::-;2370:3;2375:16;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;2436:14:::1;2460:22:::0;2492:29:::1;;:::i;:::-;2531:28;;:::i;:::-;2580:3;:12;;;2569:23;;2623:8;2619:2;:12;;;;:::i;:::-;2602:29;;2649:69;;;;;;;;2682:14;2673:6;:23;;;;:::i;:::-;2649:69;;;;2708:8;2649:69;;;;::::0;2641:77:::1;;2737:15;2741:3;2746:5;2737:3;:15::i;:::-;2728:24;;2771:29;2775:6;2783:16;2771:3;:29::i;:::-;2762:38;;2817:6;2810:13;;;;;;1437:225:::0;;2242:588;;;;;;:::o;2836:458::-;2972:22;;:::i;:::-;2951:4;2957;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;3006:14:::1;3030::::0;3054::::1;3078::::0;3113:4:::1;:13;;;3102:24;;3145:4;:10;;;3136:19;;3174:4;:10;;;3165:19;;3212:6;3203;:15;;;;:::i;:::-;3194:24;;3235:52;;;;;;;;3259:6;3235:52;;;;3277:8;3235:52;;;;::::0;3228:59:::1;;;;;;1437:225:::0;;2836:458;;;;;;:::o;5028:582::-;5116:22;;:::i;:::-;5150:21;5181:13;5204:14;5246:3;:12;;;5228:30;;5276:3;:9;;;5268:17;;5318:2;5299:15;:21;;;5295:162;;5336:33;;:::i;:::-;5396:12;5404:3;5396:7;:12::i;:::-;5383:25;;5430:10;:16;;;5422:24;;5322:135;5295:162;5527:6;5513:8;5509:2;:12;;;;:::i;:::-;5497:6;5486;5477:5;:16;;;;:::i;:::-;:27;;;;:::i;:::-;5476:46;;;;:::i;:::-;5475:59;;;;:::i;:::-;5466:68;;5551:52;;;;;;;;5575:6;5551:52;;;;5593:8;5551:52;;;;;5544:59;;;;;5028:582;;;;:::o;4471:551::-;4607:22;;:::i;:::-;4586:4;4592;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;4641:14:::1;4665::::0;4689::::1;4713::::0;4737:22:::1;4780:4;:13;;;4769:24;;4812:4;:10;;;4803:19;;4841:4;:10;;;4832:19;;4882:8;4878:2;:12;;;;:::i;:::-;4861:29;;4909:37;4923:14;4939:6;4909;:13;;:37;;;;;:::i;:::-;4900:46;;4963:52;;;;;;;;4987:6;4963:52;;;;5005:8;4963:52;;;;::::0;4956:59:::1;;;;;;;1437:225:::0;;4471:551;;;;;;:::o;3764:701::-;3900:22;;:::i;:::-;3879:4;3885;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;3934:14:::1;3958::::0;3982::::1;4006::::0;4030:22:::1;4073:4;:13;;;4062:24;;4105:4;:10;;;4096:19;;4134:4;:10;;;4125:19;;4175:8;4171:2;:12;;;;:::i;:::-;4154:29;;4209:1;4197:8;:13;;::::0;4193:141:::1;;4244:6;4235;:15;;;;:::i;:::-;4226:24;;4271:52;;;;;;;;4295:6;4271:52;;;;4313:8;4271:52;;;;::::0;4264:59:::1;;;;;;;;;4193:141;4352:37;4366:6;4374:14;4352:6;:13;;:37;;;;;:::i;:::-;4343:46;;4406:52;;;;;;;;4430:6;4406:52;;;;4448:8;4406:52;;;;::::0;4399:59:::1;;;;;;;1654:1;1437:225:::0;;3764:701;;;;;;:::o;1668:568::-;1806:34;;:::i;:::-;1785:4;1791;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;1852:14:::1;1876:22:::0;1908:29:::1;;:::i;:::-;1947:28;;:::i;:::-;1996:4;:13;;;1985:24;;2040:8;2036:2;:12;;;;:::i;:::-;2019:29;;2066:69;;;;;;;;2099:14;2090:6;:23;;;;:::i;:::-;2066:69;;;;2125:8;2066:69;;;;::::0;2058:77:::1;;2154:15;2158:4;2164;2154:3;:15::i;:::-;2145:24;;2188:18;2192:6;2200:5;2188:3;:18::i;:::-;2179:27;;2223:6;2216:13;;;;;;1437:225:::0;;1668:568;;;;;;:::o;3689:4213:5:-;3771:14;4118:13;4190;4315:1;4311:6;4308:1;4305;4298:20;4351:1;4348;4344:9;4335:18;;4406:5;4402:2;4399:13;4391:5;4387:2;4383:14;4379:34;4370:43;;4270:157;4517:1;4508:5;:10;4504:368;;4846:11;4838:5;:19;;;;;:::i;:::-;;;4831:26;;;;;;4504:368;4996:5;4982:11;:19;4974:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5283:17;5418:11;5415:1;5412;5405:25;5392:38;;5546:5;5535:9;5532:20;5525:5;5521:32;5512:41;;5590:9;5583:5;5579:21;5570:30;;5921:12;5966:1;5952:11;5951:12;:16;5936:11;:32;5921:47;;6088:4;6075:11;6071:22;6056:37;;6180:4;6173:5;6169:16;6160:25;;6337:1;6330:4;6323;6320:1;6316:12;6312:23;6308:31;6300:39;;6436:4;6428:5;:12;6419:21;;;;6758:15;6796:1;6781:11;6777:1;:15;6776:21;6758:39;;7043:7;7029:11;:21;7025:1;:25;7014:36;;;;7112:7;7098:11;:21;7094:1;:25;7083:36;;;;7182:7;7168:11;:21;7164:1;:25;7153:36;;;;7252:7;7238:11;:21;7234:1;:25;7223:36;;;;7322:7;7308:11;:21;7304:1;:25;7293:36;;;;7393:7;7379:11;:21;7375:1;:25;7364:36;;;;7851:7;7843:5;:15;7834:24;;7872:13;;;;;3689:4213;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1296:77::-;1333:7;1362:5;1351:16;;1296:77;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:63;;1491:1;1488;1481:12;1432:63;1379:122;:::o;1507:139::-;1553:5;1591:6;1578:20;1569:29;;1607:33;1634:5;1607:33;:::i;:::-;1507:139;;;;:::o;1652:86::-;1687:7;1727:4;1720:5;1716:16;1705:27;;1652:86;;;:::o;1744:118::-;1815:22;1831:5;1815:22;:::i;:::-;1808:5;1805:33;1795:61;;1852:1;1849;1842:12;1795:61;1744:118;:::o;1868:135::-;1912:5;1950:6;1937:20;1928:29;;1966:31;1991:5;1966:31;:::i;:::-;1868:135;;;;:::o;2039:582::-;2118:5;2162:4;2150:9;2145:3;2141:19;2137:30;2134:117;;;2170:79;;:::i;:::-;2134:117;2269:21;2285:4;2269:21;:::i;:::-;2260:30;;2350:1;2390:49;2435:3;2426:6;2415:9;2411:22;2390:49;:::i;:::-;2383:4;2376:5;2372:16;2365:75;2300:151;2514:2;2555:47;2598:3;2589:6;2578:9;2574:22;2555:47;:::i;:::-;2548:4;2541:5;2537:16;2530:73;2461:153;2039:582;;;;:::o;2627:595::-;2755:6;2763;2812:3;2800:9;2791:7;2787:23;2783:33;2780:120;;;2819:79;;:::i;:::-;2780:120;2939:1;2964:83;3039:7;3030:6;3019:9;3015:22;2964:83;:::i;:::-;2954:93;;2910:147;3096:2;3122:83;3197:7;3188:6;3177:9;3173:22;3122:83;:::i;:::-;3112:93;;3067:148;2627:595;;;;;:::o;3228:108::-;3305:24;3323:5;3305:24;:::i;:::-;3300:3;3293:37;3228:108;;:::o;3342:102::-;3415:22;3431:5;3415:22;:::i;:::-;3410:3;3403:35;3342:102;;:::o;3506:518::-;3663:4;3658:3;3654:14;3751:4;3744:5;3740:16;3734:23;3770:63;3827:4;3822:3;3818:14;3804:12;3770:63;:::i;:::-;3678:165;3929:4;3922:5;3918:16;3912:23;3948:59;4001:4;3996:3;3992:14;3978:12;3948:59;:::i;:::-;3853:164;3632:392;3506:518;;:::o;4030:342::-;4183:4;4221:2;4210:9;4206:18;4198:26;;4234:131;4362:1;4351:9;4347:17;4338:6;4234:131;:::i;:::-;4030:342;;;;:::o;4378:389::-;4467:6;4516:2;4504:9;4495:7;4491:23;4487:32;4484:119;;;4522:79;;:::i;:::-;4484:119;4642:1;4667:83;4742:7;4733:6;4722:9;4718:22;4667:83;:::i;:::-;4657:93;;4613:147;4378:389;;;;:::o;4773:530::-;4869:6;4877;4926:2;4914:9;4905:7;4901:23;4897:32;4894:119;;;4932:79;;:::i;:::-;4894:119;5052:1;5077:83;5152:7;5143:6;5132:9;5128:22;5077:83;:::i;:::-;5067:93;;5023:147;5209:2;5235:51;5278:7;5269:6;5258:9;5254:22;5235:51;:::i;:::-;5225:61;;5180:116;4773:530;;;;;:::o;5309:112::-;5392:22;5408:5;5392:22;:::i;:::-;5387:3;5380:35;5309:112;;:::o;5427:316::-;5540:4;5578:2;5567:9;5563:18;5555:26;;5591:67;5655:1;5644:9;5640:17;5631:6;5591:67;:::i;:::-;5668:68;5732:2;5721:9;5717:18;5708:6;5668:68;:::i;:::-;5427:316;;;;;:::o;5749:180::-;5797:77;5794:1;5787:88;5894:4;5891:1;5884:15;5918:4;5915:1;5908:15;5935:194;5975:4;5995:20;6013:1;5995:20;:::i;:::-;5990:25;;6029:20;6047:1;6029:20;:::i;:::-;6024:25;;6073:1;6070;6066:9;6058:17;;6097:1;6091:4;6088:11;6085:37;;;6102:18;;:::i;:::-;6085:37;5935:194;;;;:::o;6135:102::-;6177:8;6224:5;6221:1;6217:13;6196:34;;6135:102;;;:::o;6243:848::-;6304:5;6311:4;6335:6;6326:15;;6359:5;6350:14;;6373:712;6394:1;6384:8;6381:15;6373:712;;;6489:4;6484:3;6480:14;6474:4;6471:24;6468:50;;;6498:18;;:::i;:::-;6468:50;6548:1;6538:8;6534:16;6531:451;;;6963:4;6956:5;6952:16;6943:25;;6531:451;7013:4;7007;7003:15;6995:23;;7043:32;7066:8;7043:32;:::i;:::-;7031:44;;6373:712;;;6243:848;;;;;;;:::o;7097:1073::-;7151:5;7342:8;7332:40;;7363:1;7354:10;;7365:5;;7332:40;7391:4;7381:36;;7408:1;7399:10;;7410:5;;7381:36;7477:4;7525:1;7520:27;;;;7561:1;7556:191;;;;7470:277;;7520:27;7538:1;7529:10;;7540:5;;;7556:191;7601:3;7591:8;7588:17;7585:43;;;7608:18;;:::i;:::-;7585:43;7657:8;7654:1;7650:16;7641:25;;7692:3;7685:5;7682:14;7679:40;;;7699:18;;:::i;:::-;7679:40;7732:5;;;7470:277;;7856:2;7846:8;7843:16;7837:3;7831:4;7828:13;7824:36;7806:2;7796:8;7793:16;7788:2;7782:4;7779:12;7775:35;7759:111;7756:246;;;7912:8;7906:4;7902:19;7893:28;;7947:3;7940:5;7937:14;7934:40;;;7954:18;;:::i;:::-;7934:40;7987:5;;7756:246;8027:42;8065:3;8055:8;8049:4;8046:1;8027:42;:::i;:::-;8012:57;;;;8101:4;8096:3;8092:14;8085:5;8082:25;8079:51;;;8110:18;;:::i;:::-;8079:51;8159:4;8152:5;8148:16;8139:25;;7097:1073;;;;;;:::o;8176:281::-;8234:5;8258:23;8276:4;8258:23;:::i;:::-;8250:31;;8302:25;8318:8;8302:25;:::i;:::-;8290:37;;8346:104;8383:66;8373:8;8367:4;8346:104;:::i;:::-;8337:113;;8176:281;;;;:::o;8463:410::-;8503:7;8526:20;8544:1;8526:20;:::i;:::-;8521:25;;8560:20;8578:1;8560:20;:::i;:::-;8555:25;;8615:1;8612;8608:9;8637:30;8655:11;8637:30;:::i;:::-;8626:41;;8816:1;8807:7;8803:15;8800:1;8797:22;8777:1;8770:9;8750:83;8727:139;;8846:18;;:::i;:::-;8727:139;8511:362;8463:410;;;;:::o;8879:180::-;8927:77;8924:1;8917:88;9024:4;9021:1;9014:15;9048:4;9045:1;9038:15;9065:185;9105:1;9122:20;9140:1;9122:20;:::i;:::-;9117:25;;9156:20;9174:1;9156:20;:::i;:::-;9151:25;;9195:1;9185:35;;9200:18;;:::i;:::-;9185:35;9242:1;9239;9235:9;9230:14;;9065:185;;;;:::o;9256:191::-;9296:3;9315:20;9333:1;9315:20;:::i;:::-;9310:25;;9349:20;9367:1;9349:20;:::i;:::-;9344:25;;9392:1;9389;9385:9;9378:16;;9413:3;9410:1;9407:10;9404:36;;;9420:18;;:::i;:::-;9404:36;9256:191;;;;:::o;9453:169::-;9537:11;9571:6;9566:3;9559:19;9611:4;9606:3;9602:14;9587:29;;9453:169;;;;:::o;9628:171::-;9768:23;9764:1;9756:6;9752:14;9745:47;9628:171;:::o;9805:366::-;9947:3;9968:67;10032:2;10027:3;9968:67;:::i;:::-;9961:74;;10044:93;10133:3;10044:93;:::i;:::-;10162:2;10157:3;10153:12;10146:19;;9805:366;;;:::o;10177:419::-;10343:4;10381:2;10370:9;10366:18;10358:26;;10430:9;10424:4;10420:20;10416:1;10405:9;10401:17;10394:47;10458:131;10584:4;10458:131;:::i;:::-;10450:139;;10177:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "799600",
								"executionCost": "831",
								"totalCost": "800431"
							},
							"external": {
								"add((uint256,uint8),(uint256,uint8))": "infinite",
								"asEther((uint256,uint8))": "infinite",
								"asNewDecimals((uint256,uint8),uint8)": "infinite",
								"div((uint256,uint8),(uint256,uint8))": "infinite",
								"mul((uint256,uint8),(uint256,uint8))": "infinite",
								"scale((uint256,uint8),(uint256,uint8))": "infinite",
								"slice((uint256,uint8),(uint256,uint8))": "infinite",
								"sub((uint256,uint8),(uint256,uint8))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048185644a88b525690311361ff88e89d79227c1ed2f6dd26a7d5520297f1350864736f6c63430008130033",
									".code": [
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "7D02EBF4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "7D02EBF4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "8444B813"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "A7E7C9F9"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "E51356E8"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "2833D1F0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "3E60D8E0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "4B602C6D"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "58633635"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3436,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3518,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3566,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3613,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3642,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3667,
											"end": 3682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3658,
											"end": 3682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3658,
											"end": 3682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3729,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3749,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5682,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 5784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5812,
											"end": 5824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5896,
											"end": 5911,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5892,
											"end": 5911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5881,
											"end": 5887,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5872,
											"end": 5877,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5872,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5872,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5871,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5870,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2402,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2492,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2531,
											"end": 2559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2619,
											"end": 2631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2673,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2741,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2751,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2737,
											"end": 2752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2737,
											"end": 2752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2752,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2752,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2775,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2799,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2771,
											"end": 2800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2771,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2972,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2957,
											"end": 2961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3126,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3126,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3126,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3149,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3155,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3178,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3209,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3203,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3265,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3285,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5116,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5150,
											"end": 5171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5258,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5279,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5299,
											"end": 5314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5320,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5299,
											"end": 5320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5320,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5336,
											"end": 5369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5404,
											"end": 5407,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5396,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5422,
											"end": 5446,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5422,
											"end": 5446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5322,
											"end": 5457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5513,
											"end": 5521,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5509,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5486,
											"end": 5492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5482,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5477,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5477,
											"end": 5504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5476,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5475,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5593,
											"end": 5601,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4607,
											"end": 4629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4784,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4780,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 4793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4816,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4803,
											"end": 4822,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4803,
											"end": 4822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4890,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4861,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4861,
											"end": 4890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4923,
											"end": 4937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4939,
											"end": 4945,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4915,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4909,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4987,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5013,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 5015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3900,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3883,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3982,
											"end": 3996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4062,
											"end": 4086,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4062,
											"end": 4086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4109,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4105,
											"end": 4115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4115,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4138,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4144,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4183,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4171,
											"end": 4183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4205,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4197,
											"end": 4210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4210,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4250,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4235,
											"end": 4250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4301,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4366,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4352,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4436,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4456,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1654,
											"end": 1655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1806,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1908,
											"end": 1937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1947,
											"end": 1975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2048,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2036,
											"end": 2048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2048,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2113,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2090,
											"end": 2113,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2158,
											"end": 2162,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 2164,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2154,
											"end": 2169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2192,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2200,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2188,
											"end": 2206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2188,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2206,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4298,
											"end": 4318,
											"name": "MULMOD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4412,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4396,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4397,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4413,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4838,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4996,
											"end": 5001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4993,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 5001,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4974,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5429,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "MULMOD",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5552,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5553,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5952,
											"end": 5963,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 5963,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 5967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 5947,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 5968,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6086,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6093,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6056,
											"end": 6093,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 6056,
											"end": 6093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6185,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6335,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6436,
											"end": 6440,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 6433,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 6440,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6781,
											"end": 6792,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6777,
											"end": 6792,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6797,
											"name": "XOR",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7043,
											"end": 7050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7029,
											"end": 7040,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7029,
											"end": 7050,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7025,
											"end": 7050,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7109,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7119,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7094,
											"end": 7119,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7189,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7179,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7189,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7164,
											"end": 7189,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7249,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7259,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7234,
											"end": 7235,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7234,
											"end": 7259,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7329,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7304,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7390,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7375,
											"end": 7400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 7848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 7858,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 7858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 7902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 834,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 975,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1099,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1501,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1379,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1452,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1477,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1634,
											"end": 1639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1607,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1862,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1744,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1815,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1838,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1842,
											"end": 1854,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1991,
											"end": 1996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1966,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2148,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2160,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2170,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2285,
											"end": 2289,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2269,
											"end": 2290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2390,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2372,
											"end": 2388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2365,
											"end": 2440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2598,
											"end": 2601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2555,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2548,
											"end": 2552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2546,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2461,
											"end": 2614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2810,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2819,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2964,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3047,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 3057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3122,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3305,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3431,
											"end": 3436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3415,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3751,
											"end": 3755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3734,
											"end": 3757,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3818,
											"end": 3832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3770,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3935,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4001,
											"end": 4005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 3999,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3948,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 4017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4234,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4519,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 4522,
											"end": 4601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4731,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4718,
											"end": 4740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4667,
											"end": 4750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4914,
											"end": 4923,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4901,
											"end": 4924,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4897,
											"end": 4929,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 4932,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 5152,
											"end": 5159,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5143,
											"end": 5149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5141,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5077,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5160,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5235,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 5303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5408,
											"end": 5413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5392,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5415,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5655,
											"end": 5656,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5637,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5591,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5730,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5668,
											"end": 5736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5929,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5749,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5797,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5884,
											"end": 5899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5922,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5915,
											"end": 5916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5975,
											"end": 5979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5995,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6029,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6049,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6088,
											"end": 6099,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6102,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6217,
											"end": 6230,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6135,
											"end": 6237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6384,
											"end": 6392,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6396,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6489,
											"end": 6493,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6484,
											"end": 6487,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6494,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6495,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6498,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6549,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6538,
											"end": 6546,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6534,
											"end": 6550,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 6961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6952,
											"end": 6968,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7013,
											"end": 7017,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7018,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 7066,
											"end": 7074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 7043,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7075,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 7091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7151,
											"end": 7156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7364,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7354,
											"end": 7364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7526,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7538,
											"end": 7539,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7529,
											"end": 7539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7601,
											"end": 7604,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7591,
											"end": 7599,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7605,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7608,
											"end": 7626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7655,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7650,
											"end": 7666,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7695,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7685,
											"end": 7690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7682,
											"end": 7696,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7699,
											"end": 7717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7846,
											"end": 7854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 7831,
											"end": 7835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7841,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7860,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 7796,
											"end": 7804,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7793,
											"end": 7809,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7788,
											"end": 7790,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7791,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7810,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7759,
											"end": 7870,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 7910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7921,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7950,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7937,
											"end": 7951,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7954,
											"end": 7972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7987,
											"end": 7992,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8065,
											"end": 8068,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8063,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 8027,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8101,
											"end": 8105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8099,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8107,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 8110,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 8170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8234,
											"end": 8239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 8276,
											"end": 8280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8258,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 8318,
											"end": 8326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 8302,
											"end": 8327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8327,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8383,
											"end": 8449,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8373,
											"end": 8381,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8346,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8450,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8503,
											"end": 8510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8544,
											"end": 8545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8526,
											"end": 8546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 8546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 8546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8578,
											"end": 8579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8560,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8608,
											"end": 8617,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8655,
											"end": 8666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8637,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8626,
											"end": 8667,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8626,
											"end": 8667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8803,
											"end": 8818,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8801,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8819,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8833,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 8846,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8511,
											"end": 8873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8463,
											"end": 8873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8879,
											"end": 9059,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 8879,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 9004,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 9005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9024,
											"end": 9028,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9014,
											"end": 9029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9052,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9053,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9122,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9142,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 9174,
											"end": 9175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9156,
											"end": 9176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9151,
											"end": 9176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9151,
											"end": 9176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 9200,
											"end": 9218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9243,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9235,
											"end": 9244,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9315,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9367,
											"end": 9368,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9349,
											"end": 9369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9369,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9410,
											"end": 9411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9407,
											"end": 9417,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 9420,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9578,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9587,
											"end": 9616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9587,
											"end": 9616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9799,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 9628,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "PUSH",
											"source": 10,
											"value": "4D6174683A206D756C446976206F766572666C6F770000000000000000000000"
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9752,
											"end": 9766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9947,
											"end": 9950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10032,
											"end": 10034,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10027,
											"end": 10030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9968,
											"end": 10035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9961,
											"end": 10035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9961,
											"end": 10035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 10044,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10164,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10157,
											"end": 10160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10146,
											"end": 10165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10146,
											"end": 10165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9805,
											"end": 10171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10343,
											"end": 10347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10424,
											"end": 10428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10394,
											"end": 10441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10584,
											"end": 10588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 10458,
											"end": 10589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10450,
											"end": 10589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10450,
											"end": 10589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"code/contract/sol/native/shared/FixedPointValue.sol",
								"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
								"code/contract/sol/native/utils/math/FixedPointMath.sol",
								"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol",
								"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"add((uint256,uint8),(uint256,uint8))": "58633635",
							"asEther((uint256,uint8))": "3e60d8e0",
							"asNewDecimals((uint256,uint8),uint8)": "7d02ebf4",
							"div((uint256,uint8),(uint256,uint8))": "8444b813",
							"mul((uint256,uint8),(uint256,uint8))": "a7e7c9f9",
							"scale((uint256,uint8),(uint256,uint8))": "e51356e8",
							"slice((uint256,uint8),(uint256,uint8))": "4b602c6d",
							"sub((uint256,uint8),(uint256,uint8))": "2833d1f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals1\",\"type\":\"uint8\"}],\"name\":\"IncompatibleDecimals\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"add\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"}],\"name\":\"asEther\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"asNewDecimals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"div\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"mul\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"scale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"basisPoints\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"sliceBasisPoints\",\"type\":\"tuple\"}],\"name\":\"slice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"sub\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/native/utils/math/FixedPointMath.sol\":\"FixedPointMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/native/shared/FixedPointValue.sol\":{\"keccak256\":\"0x762107b189c4e0c6638f84522dbe67dd3ed25afc8c0b2e0cb316721cb00fb642\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6200988009dac6133149f410e0e3f70db0e0bc614a8aa03b9c7d243db2620111\",\"dweb:/ipfs/QmeSdveNxCMcg9bQvtXSbvxVut3oAtBo3JndkF7Rt16Qkx\"]},\"code/contract/sol/native/utils/math/FixedPointMath.sol\":{\"keccak256\":\"0x9dff9cd63c09e4070acff8f9e1f8023ae1d8485f370c19dc57872a9d816cb27b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://652b75ea5ce7e49651d8e805177f58e90e1e3ea3e409aa6edec1b94593e36cae\",\"dweb:/ipfs/QmdSyeiz79HR8uvBEys38BBFUnP4gXksZX8hea7GxTDHKS\"]},\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFixedPointMath": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "add",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								}
							],
							"name": "asEther",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "asNewDecimals",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "div",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "mul",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "scale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "basisPoints",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "slice",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "sub",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"add((uint256,uint8),(uint256,uint8))": "58633635",
							"asEther((uint256,uint8))": "3e60d8e0",
							"asNewDecimals((uint256,uint8),uint8)": "7d02ebf4",
							"div((uint256,uint8),(uint256,uint8))": "8444b813",
							"mul((uint256,uint8),(uint256,uint8))": "a7e7c9f9",
							"scale((uint256,uint8),(uint256,uint8))": "e51356e8",
							"slice((uint256,uint8),(uint256,uint8))": "4b602c6d",
							"sub((uint256,uint8),(uint256,uint8))": "2833d1f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"add\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"}],\"name\":\"asEther\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"asNewDecimals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"div\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"mul\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"scale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"basisPoints\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"slice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"sub\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/native/utils/math/FixedPointMath.sol\":\"IFixedPointMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/native/shared/FixedPointValue.sol\":{\"keccak256\":\"0x762107b189c4e0c6638f84522dbe67dd3ed25afc8c0b2e0cb316721cb00fb642\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6200988009dac6133149f410e0e3f70db0e0bc614a8aa03b9c7d243db2620111\",\"dweb:/ipfs/QmeSdveNxCMcg9bQvtXSbvxVut3oAtBo3JndkF7Rt16Qkx\"]},\"code/contract/sol/native/utils/math/FixedPointMath.sol\":{\"keccak256\":\"0x9dff9cd63c09e4070acff8f9e1f8023ae1d8485f370c19dc57872a9d816cb27b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://652b75ea5ce7e49651d8e805177f58e90e1e3ea3e409aa6edec1b94593e36cae\",\"dweb:/ipfs/QmdSyeiz79HR8uvBEys38BBFUnP4gXksZX8hea7GxTDHKS\"]},\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":203:14806  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":203:14806  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD7 0x49 PUSH10 0x40FD3549EF34F3A03CFC LOG4 0x29 0xEB PREVRANDAO CREATE GASLIMIT PUSH22 0x53C82DC67C6466B0F046E964736F6C63430008130033 ",
							"sourceMap": "203:14603:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD7 0x49 PUSH10 0x40FD3549EF34F3A03CFC LOG4 0x29 0xEB PREVRANDAO CREATE GASLIMIT PUSH22 0x53C82DC67C6466B0F046E964736F6C63430008130033 ",
							"sourceMap": "203:14603:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033",
									".code": [
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"code/contract/sol/native/shared/FixedPointValue.sol",
								"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
								"code/contract/sol/native/utils/math/FixedPointMath.sol",
								"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol",
								"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol",
								"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x7f6769ef721e9595460b08bf5291fe15d2631fc64a46f5b81f19ccd973b3251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29709b519d7eeefd0d77dfe0f8b6ba1bf701d57d333802f3860f54ba1674945d\",\"dweb:/ipfs/Qmc7uijgQptKJwta1bnhhwTSdbAhHgmjtZsg2jBwbdo1iA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x3beed1619839a5ba08240cec87d35f2bda61004c71602c6c49fa80d8791d9beb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6757cdc17b00cd6a7ed6036eda37e620266d53bfefe7aa37d262512fabf51ffa\",\"dweb:/ipfs/QmdXmsZxsKQ2FAeyzmaTjVcnVjBoAVZqKHgaX8tbMVDSsp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xbecc169999b4c3aaed2aa429fb09d0aad8f78e4f6c3ab460820f5d4d8ba2ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://741731c883ee363111bd4d57a80335cb349908ff32ddefdb2f642db7aecb972c\",\"dweb:/ipfs/QmYUtoe3yghcUokPyvGxbFSh5CYwjhRmvXE2WtEmTG4a6t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xbecc169999b4c3aaed2aa429fb09d0aad8f78e4f6c3ab460820f5d4d8ba2ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://741731c883ee363111bd4d57a80335cb349908ff32ddefdb2f642db7aecb972c\",\"dweb:/ipfs/QmYUtoe3yghcUokPyvGxbFSh5CYwjhRmvXE2WtEmTG4a6t\"]},\"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x27c46e7acb0cba4035be66e0214ff08dd8f16e795187743e36c8324f4b0ea69f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f050951197356a91c8858be6bf55225275165438bdf9b3f2b111fc06616f7acb\",\"dweb:/ipfs/Qmf9QRAJhQXcs21iing29aEazaWTKMxb2ueZ9vNKdFWHgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:35:9:\n   |\n35 |         FixedPointValue memory scale;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:31:5:\n   |\n31 |     function scale(FixedPointValue memo ... xedPointValue memory basisPoints) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2236,
						"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
						"message": "The shadowed declaration is here:",
						"start": 1668
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1975,
					"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
					"start": 1947
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:48:9:\n   |\n48 |         FixedPointValue memory scale;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:31:5:\n   |\n31 |     function scale(FixedPointValue memo ... xedPointValue memory basisPoints) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2236,
						"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
						"message": "The shadowed declaration is here:",
						"start": 1668
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2559,
					"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
					"start": 2531
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:16:17:\n   |\n16 |     constructor(address fixedPointMath, address factory, address router) {\n   |                 ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:22:5:\n   |\n22 |     function fixedPointMath() public view returns (IFixedPointMath) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1172,
						"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
						"message": "The shadowed declaration is here:",
						"start": 1069
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 869,
					"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
					"start": 847
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:16:41:\n   |\n16 |     constructor(address fixedPointMath, address factory, address router) {\n   |                                         ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:26:5:\n   |\n26 |     function factory() public view returns (IUniswapV2Factory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1269,
						"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
						"message": "The shadowed declaration is here:",
						"start": 1178
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 886,
					"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
					"start": 871
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:16:58:\n   |\n16 |     constructor(address fixedPointMath, address factory, address router) {\n   |                                                          ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:30:5:\n   |\n30 |     function router() public view returns (IUniswapV2Router02) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1365,
						"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
						"message": "The shadowed declaration is here:",
						"start": 1275
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 902,
					"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
					"start": 888
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:95:9:\n   |\n95 |         FixedPointValue memory amountOut;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol:88:5:\n   |\n88 |     function amountOut(address[] memory path, FixedPointValue memory amountIn) public view returns (FixedPointValue memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 4299,
						"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
						"message": "The shadowed declaration is here:",
						"start": 3461
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3779,
					"file": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
					"start": 3747
				},
				"type": "Warning"
			}
		],
		"sources": {
			"code/contract/sol/native/shared/FixedPointValue.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/native/shared/FixedPointValue.sol",
					"exportedSymbols": {
						"FixedPointValue": [
							6
						]
					},
					"id": 7,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:0"
						},
						{
							"canonicalName": "FixedPointValue",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "103:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "95:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "120:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "114:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 4,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "114:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "FixedPointValue",
							"nameLocation": "73:15:0",
							"nodeType": "StructDefinition",
							"scope": 7,
							"src": "66:65:0",
							"visibility": "public"
						}
					],
					"src": "39:92:0"
				},
				"id": 0
			},
			"code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/native/utils/adaptor/UniswapV2Adaptor.sol",
					"exportedSymbols": {
						"FixedPointValue": [
							6
						],
						"IERC20": [
							1309
						],
						"IERC20Metadata": [
							1334
						],
						"IFixedPointMath": [
							652
						],
						"IUniswapV2Factory": [
							2421
						],
						"IUniswapV2Pair": [
							2663
						],
						"IUniswapV2Router02": [
							3059
						],
						"UniswapV2Adaptor": [
							553
						]
					},
					"id": 554,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 8,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:1"
						},
						{
							"absolutePath": "code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol",
							"file": "../../../non-native/openzeppelin/token/ERC20/IERC20.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 1310,
							"src": "65:81:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 9,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1309,
										"src": "74:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "../../../non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 12,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 1335,
							"src": "147:108:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 11,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1334,
										"src": "156:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol",
							"file": "../../../non-native/uniswap/interfaces/IUniswapV2Factory.sol",
							"id": 14,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 2422,
							"src": "256:97:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 13,
										"name": "IUniswapV2Factory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2421,
										"src": "265:17:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol",
							"file": "../../../non-native/uniswap/interfaces/IUniswapV2Router02.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 3060,
							"src": "354:99:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 15,
										"name": "IUniswapV2Router02",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3059,
										"src": "363:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol",
							"file": "../../../non-native/uniswap/interfaces/IUniswapV2Pair.sol",
							"id": 18,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 2664,
							"src": "454:91:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 17,
										"name": "IUniswapV2Pair",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2663,
										"src": "463:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/native/shared/FixedPointValue.sol",
							"file": "../../shared/FixedPointValue.sol",
							"id": 20,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 7,
							"src": "546:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 19,
										"name": "FixedPointValue",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 6,
										"src": "555:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/native/utils/math/FixedPointMath.sol",
							"file": "../math/FixedPointMath.sol",
							"id": 22,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 554,
							"sourceUnit": 1232,
							"src": "614:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 21,
										"name": "IFixedPointMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 652,
										"src": "623:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UniswapV2Adaptor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 553,
							"linearizedBaseContracts": [
								553
							],
							"name": "UniswapV2Adaptor",
							"nameLocation": "686:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "fixedPointMath_",
									"nameLocation": "733:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 553,
									"src": "709:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFixedPointMath_$652",
										"typeString": "contract IFixedPointMath"
									},
									"typeName": {
										"id": 24,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 23,
											"name": "IFixedPointMath",
											"nameLocations": [
												"709:15:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 652,
											"src": "709:15:1"
										},
										"referencedDeclaration": 652,
										"src": "709:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFixedPointMath_$652",
											"typeString": "contract IFixedPointMath"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "factory_",
									"nameLocation": "780:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 553,
									"src": "754:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
										"typeString": "contract IUniswapV2Factory"
									},
									"typeName": {
										"id": 27,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 26,
											"name": "IUniswapV2Factory",
											"nameLocations": [
												"754:17:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2421,
											"src": "754:17:1"
										},
										"referencedDeclaration": 2421,
										"src": "754:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
											"typeString": "contract IUniswapV2Factory"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "router_",
									"nameLocation": "821:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 553,
									"src": "794:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 30,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 29,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"794:18:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3059,
											"src": "794:18:1"
										},
										"referencedDeclaration": 3059,
										"src": "794:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "904:159:1",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "fixedPointMath_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "914:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFixedPointMath_$652",
															"typeString": "contract IFixedPointMath"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 42,
																"name": "fixedPointMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "948:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 41,
															"name": "IFixedPointMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "932:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFixedPointMath_$652_$",
																"typeString": "type(contract IFixedPointMath)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "932:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFixedPointMath_$652",
															"typeString": "contract IFixedPointMath"
														}
													},
													"src": "914:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFixedPointMath_$652",
														"typeString": "contract IFixedPointMath"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "914:49:1"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "973:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 48,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "1002:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 47,
															"name": "IUniswapV2Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "984:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$2421_$",
																"typeString": "type(contract IUniswapV2Factory)"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "984:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"src": "973:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "973:37:1"
											},
											{
												"expression": {
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 52,
														"name": "router_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 54,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1049:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 53,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "1030:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$3059_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1030:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "1020:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1020:36:1"
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "fixedPointMath",
												"nameLocation": "855:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "847:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "879:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "871:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "896:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "888:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:57:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:1"
									},
									"scope": 553,
									"src": "835:228:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1133:39:1",
										"statements": [
											{
												"expression": {
													"id": 65,
													"name": "fixedPointMath_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "1150:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFixedPointMath_$652",
														"typeString": "contract IFixedPointMath"
													}
												},
												"functionReturnParameters": 64,
												"id": 66,
												"nodeType": "Return",
												"src": "1143:22:1"
											}
										]
									},
									"functionSelector": "14c758d9",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fixedPointMath",
									"nameLocation": "1078:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1092:2:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1116:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFixedPointMath_$652",
													"typeString": "contract IFixedPointMath"
												},
												"typeName": {
													"id": 62,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 61,
														"name": "IFixedPointMath",
														"nameLocations": [
															"1116:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 652,
														"src": "1116:15:1"
													},
													"referencedDeclaration": 652,
													"src": "1116:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFixedPointMath_$652",
														"typeString": "contract IFixedPointMath"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:17:1"
									},
									"scope": 553,
									"src": "1069:103:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1237:32:1",
										"statements": [
											{
												"expression": {
													"id": 74,
													"name": "factory_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1254:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"functionReturnParameters": 73,
												"id": 75,
												"nodeType": "Return",
												"src": "1247:15:1"
											}
										]
									},
									"functionSelector": "c45a0155",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1187:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1194:2:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1218:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
													"typeString": "contract IUniswapV2Factory"
												},
												"typeName": {
													"id": 71,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 70,
														"name": "IUniswapV2Factory",
														"nameLocations": [
															"1218:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2421,
														"src": "1218:17:1"
													},
													"referencedDeclaration": 2421,
													"src": "1218:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:19:1"
									},
									"scope": 553,
									"src": "1178:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1334:31:1",
										"statements": [
											{
												"expression": {
													"id": 83,
													"name": "router_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "1351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "1344:14:1"
											}
										]
									},
									"functionSelector": "f887ea40",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "router",
									"nameLocation": "1284:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1314:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 80,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 79,
														"name": "IUniswapV2Router02",
														"nameLocations": [
															"1314:18:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3059,
														"src": "1314:18:1"
													},
													"referencedDeclaration": 3059,
													"src": "1314:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:20:1"
									},
									"scope": 553,
									"src": "1275:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1454:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 97,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1488:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1496:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 95,
															"name": "factory_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1471:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$2421",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1480:7:1",
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2389,
														"src": "1471:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 100,
												"nodeType": "Return",
												"src": "1464:39:1"
											}
										]
									},
									"functionSelector": "ceca05ab",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairAddress",
									"nameLocation": "1380:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1400:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1392:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1416:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1408:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:32:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1445:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:9:1"
									},
									"scope": 553,
									"src": "1371:139:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1608:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 114,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "1652:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 115,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "1660:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 113,
																"name": "pairAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1640:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$",
																	"typeString": "function (address,address) view returns (address)"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1640:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 112,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2663,
														"src": "1625:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2663_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$2663",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"functionReturnParameters": 111,
												"id": 118,
												"nodeType": "Return",
												"src": "1618:50:1"
											}
										]
									},
									"functionSelector": "be83cb79",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairInterface",
									"nameLocation": "1525:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1547:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1539:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1563:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1555:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:32:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1592:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Pair_$2663",
													"typeString": "contract IUniswapV2Pair"
												},
												"typeName": {
													"id": 109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 108,
														"name": "IUniswapV2Pair",
														"nameLocations": [
															"1592:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2663,
														"src": "1592:14:1"
													},
													"referencedDeclaration": 2663,
													"src": "1592:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$2663",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:16:1"
									},
									"scope": 553,
									"src": "1516:159:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1774:221:1",
										"statements": [
											{
												"assignments": [
													134
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"mutability": "mutable",
														"name": "reserves",
														"nameLocation": "1801:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "1784:25:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 132,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1784:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 133,
															"nodeType": "ArrayTypeName",
															"src": "1784:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:25:1"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1819:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1844:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1830:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 137,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1834:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 138,
																"nodeType": "ArrayTypeName",
																"src": "1834:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1830:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "1819:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1819:27:1"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"baseExpression": {
																	"id": 144,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "1870:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 146,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1879:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1870:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 147,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "1895:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 149,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1904:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1895:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null
														],
														"id": 150,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1856:61:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
															"typeString": "tuple(uint256,uint256,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 152,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1934:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 153,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "1942:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 151,
																	"name": "pairInterface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "1920:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_contract$_IUniswapV2Pair_$2663_$",
																		"typeString": "function (address,address) view returns (contract IUniswapV2Pair)"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1920:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$2663",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1950:11:1",
															"memberName": "getReserves",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2605,
															"src": "1920:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
																"typeString": "function () view external returns (uint112,uint112,uint32)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1920:43:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "tuple(uint112,uint112,uint32)"
														}
													},
													"src": "1856:107:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1856:107:1"
											},
											{
												"expression": {
													"id": 159,
													"name": "reserves",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 134,
													"src": "1980:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 129,
												"id": 160,
												"nodeType": "Return",
												"src": "1973:15:1"
											}
										]
									},
									"functionSelector": "7dd92787",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairReserves",
									"nameLocation": "1690:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1711:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1703:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:32:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1756:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 126,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1756:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 127,
													"nodeType": "ArrayTypeName",
													"src": "1756:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:18:1"
									},
									"scope": 553,
									"src": "1681:314:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2087:65:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 172,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2116:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 173,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2124:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 171,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2104:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) view returns (address)"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2104:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2143:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 175,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2135:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2135:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2104:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 180,
												"nodeType": "Return",
												"src": "2097:48:1"
											}
										]
									},
									"functionSelector": "b09cd0c3",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairIsZeroAddress",
									"nameLocation": "2010:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2036:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2028:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2052:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2044:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:32:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2081:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2081:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:6:1"
									},
									"scope": 553,
									"src": "2001:151:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "2256:72:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 191,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2273:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 193,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "2297:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 194,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "2305:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 192,
																	"name": "pairInterface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2283:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_contract$_IUniswapV2Pair_$2663_$",
																		"typeString": "function (address,address) view returns (contract IUniswapV2Pair)"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2283:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$2663",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2313:6:1",
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2591,
															"src": "2283:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2283:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2273:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 190,
												"id": 199,
												"nodeType": "Return",
												"src": "2266:55:1"
											}
										]
									},
									"functionSelector": "41b29895",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairIsSameLayoutAsGivenTokens",
									"nameLocation": "2167:29:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2197:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2221:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2213:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:32:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2250:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2250:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2249:6:1"
									},
									"scope": 553,
									"src": "2158:170:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2426:1029:1",
										"statements": [
											{
												"assignments": [
													212
												],
												"declarations": [
													{
														"constant": false,
														"id": 212,
														"mutability": "mutable",
														"name": "decimals0",
														"nameLocation": "2442:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "2436:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 211,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2436:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"nodeType": "VariableDeclarationStatement",
												"src": "2436:15:1"
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "decimals1",
														"nameLocation": "2467:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "2461:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 214,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2461:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"nodeType": "VariableDeclarationStatement",
												"src": "2461:15:1"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2494:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "2486:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2486:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"nodeType": "VariableDeclarationStatement",
												"src": "2486:14:1"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "quote",
														"nameLocation": "2533:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "2510:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 221,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 220,
																"name": "FixedPointValue",
																"nameLocations": [
																	"2510:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "2510:15:1"
															},
															"referencedDeclaration": 6,
															"src": "2510:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"nodeType": "VariableDeclarationStatement",
												"src": "2510:28:1"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 224,
														"name": "decimals0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2548:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 226,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "2575:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 225,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "2560:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1334_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2560:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$1334",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2583:8:1",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1333,
															"src": "2560:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2560:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2548:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2548:45:1"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "decimals1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2603:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 234,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2630:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 233,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "2615:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1334_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2615:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$1334",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2638:8:1",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1333,
															"src": "2615:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2615:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2603:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "2603:45:1"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 241,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2680:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2688:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 240,
														"name": "pairIsZeroAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2662:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
															"typeString": "function (address,address) view returns (bool)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2662:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "2658:87:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "3138",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2741:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																}
															],
															"id": 244,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "2704:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2721:5:1",
															"2731:8:1"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "2704:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"functionReturnParameters": 210,
													"id": 248,
													"nodeType": "Return",
													"src": "2697:48:1"
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 251,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2789:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2797:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 250,
														"name": "pairIsSameLayoutAsGivenTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2759:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
															"typeString": "function (address,address) view returns (bool)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2759:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "2755:394:1",
												"trueBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "2806:343:1",
													"statements": [
														{
															"expression": {
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 254,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "2820:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2860:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 258,
																				"name": "decimals0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 212,
																				"src": "2864:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2860:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"arguments": [
																					{
																						"id": 261,
																						"name": "token0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 203,
																						"src": "2904:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 262,
																						"name": "token1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 205,
																						"src": "2912:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 260,
																					"name": "pairReserves",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 162,
																					"src": "2891:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																						"typeString": "function (address,address) view returns (uint256[] memory)"
																					}
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2891:28:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 265,
																			"indexExpression": {
																				"hexValue": "30",
																				"id": 264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2920:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2891:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"arguments": [
																					{
																						"id": 267,
																						"name": "token0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 203,
																						"src": "2953:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 268,
																						"name": "token1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 205,
																						"src": "2961:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 266,
																					"name": "pairReserves",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 162,
																					"src": "2940:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																						"typeString": "function (address,address) view returns (uint256[] memory)"
																					}
																				},
																				"id": 269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2940:28:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 271,
																			"indexExpression": {
																				"hexValue": "31",
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2969:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2940:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 255,
																			"name": "router_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "2829:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
																				"typeString": "contract IUniswapV2Router02"
																			}
																		},
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2837:5:1",
																		"memberName": "quote",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2926,
																		"src": "2829:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2829:156:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2820:165:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 274,
															"nodeType": "ExpressionStatement",
															"src": "2820:165:1"
														},
														{
															"expression": {
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 275,
																	"name": "quote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "2999:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 277,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "3031:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 278,
																			"name": "decimals1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "3049:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 276,
																		"name": "FixedPointValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "3007:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																			"typeString": "type(struct FixedPointValue storage pointer)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"3024:5:1",
																		"3039:8:1"
																	],
																	"names": [
																		"value",
																		"decimals"
																	],
																	"nodeType": "FunctionCall",
																	"src": "3007:53:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"src": "2999:61:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "2999:61:1"
														},
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 282,
																	"name": "quote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3074:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 285,
																			"name": "quote",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "3106:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																				"typeString": "struct FixedPointValue memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																				"typeString": "struct FixedPointValue memory"
																			}
																		],
																		"expression": {
																			"id": 283,
																			"name": "fixedPointMath_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "3082:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																				"typeString": "contract IFixedPointMath"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3098:7:1",
																		"memberName": "asEther",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 651,
																		"src": "3082:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																			"typeString": "function (struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3082:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"src": "3074:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "3074:38:1"
														},
														{
															"expression": {
																"id": 289,
																"name": "quote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "3133:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"functionReturnParameters": 210,
															"id": 290,
															"nodeType": "Return",
															"src": "3126:12:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "3158:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3194:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 297,
																	"name": "decimals1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3198:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3194:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"arguments": [
																		{
																			"id": 300,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 203,
																			"src": "3234:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 301,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "3242:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 299,
																		"name": "pairReserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3221:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (address,address) view returns (uint256[] memory)"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3221:28:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 304,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3250:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3221:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"arguments": [
																		{
																			"id": 306,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 203,
																			"src": "3279:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 307,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "3287:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 305,
																		"name": "pairReserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "3266:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (address,address) view returns (uint256[] memory)"
																		}
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3266:28:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 310,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3295:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3266:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 294,
																"name": "router_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "3167:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3175:5:1",
															"memberName": "quote",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2926,
															"src": "3167:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure external returns (uint256)"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3167:140:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3158:149:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3158:149:1"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "quote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3317:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 316,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "3349:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 317,
																"name": "decimals1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "3367:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 315,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "3325:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3342:5:1",
															"3357:8:1"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "3325:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "3317:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3317:61:1"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 321,
														"name": "quote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3388:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 324,
																"name": "quote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "3420:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"expression": {
																"id": 322,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "3396:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3412:7:1",
															"memberName": "asEther",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "3396:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3396:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "3388:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "3388:38:1"
											},
											{
												"expression": {
													"id": 328,
													"name": "quote",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "3443:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 210,
												"id": 329,
												"nodeType": "Return",
												"src": "3436:12:1"
											}
										]
									},
									"functionSelector": "2b00490d",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "2343:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2357:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2349:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2373:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2365:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:32:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2402:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 207,
														"name": "FixedPointValue",
														"nameLocations": [
															"2402:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2402:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2402:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:24:1"
									},
									"scope": 553,
									"src": "2334:1121:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3581:718:1",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "3599:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3591:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3591:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"nodeType": "VariableDeclarationStatement",
												"src": "3591:14:1"
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "3623:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3615:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 346,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3615:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 348,
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:14:1"
											},
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "decimals0",
														"nameLocation": "3645:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3639:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 349,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3639:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"nodeType": "VariableDeclarationStatement",
												"src": "3639:15:1"
											},
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "decimals1",
														"nameLocation": "3670:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3664:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 352,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3664:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"nodeType": "VariableDeclarationStatement",
												"src": "3664:15:1"
											},
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "3706:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3689:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 357,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3689:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 358,
															"nodeType": "ArrayTypeName",
															"src": "3689:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"nodeType": "VariableDeclarationStatement",
												"src": "3689:24:1"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3731:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3723:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3723:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"nodeType": "VariableDeclarationStatement",
												"src": "3723:14:1"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "3770:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3747:32:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 365,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 364,
																"name": "FixedPointValue",
																"nameLocations": [
																	"3747:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "3747:15:1"
															},
															"referencedDeclaration": 6,
															"src": "3747:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"nodeType": "VariableDeclarationStatement",
												"src": "3747:32:1"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "3789:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 369,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "3798:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 371,
														"indexExpression": {
															"hexValue": "30",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3789:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "3789:16:1"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3815:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 375,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "3824:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 380,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 376,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "3829:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3834:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3829:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3843:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3829:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3824:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3815:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "3815:30:1"
											},
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "decimals0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "3855:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 385,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "3882:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 384,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "3867:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1334_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3867:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$1334",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3890:8:1",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1333,
															"src": "3867:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3867:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3855:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "3855:45:1"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 391,
														"name": "decimals1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3910:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 393,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "3937:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 392,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "3922:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1334_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3922:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$1334",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3945:8:1",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1333,
															"src": "3922:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3922:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3910:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "3910:45:1"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 399,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3965:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 402,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 403,
																"name": "decimals0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "4016:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 400,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "3976:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3992:13:1",
															"memberName": "asNewDecimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 642,
															"src": "3976:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_uint8_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,uint8) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3976:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "3965:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "3965:61:1"
											},
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 407,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4036:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 410,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "4068:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4077:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "4068:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 412,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "4084:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 408,
																"name": "router_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "4046:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$3059",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4054:13:1",
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2959,
															"src": "4046:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4046:43:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4036:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "4036:53:1"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 416,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "4099:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 417,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "4108:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 422,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 418,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4116:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4124:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4116:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4133:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4116:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4108:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4099:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "4099:36:1"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 425,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4145:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 427,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "4181:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 428,
																"name": "decimals1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "4199:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 426,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "4157:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4174:5:1",
															"4189:8:1"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "4157:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "4145:65:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "4145:65:1"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4220:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 435,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "4256:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"expression": {
																"id": 433,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "4232:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4248:7:1",
															"memberName": "asEther",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "4232:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4232:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "4220:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "4220:46:1"
											},
											{
												"expression": {
													"id": 439,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 366,
													"src": "4283:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 342,
												"id": 440,
												"nodeType": "Return",
												"src": "4276:16:1"
											}
										]
									},
									"functionSelector": "f6162317",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amountOut",
									"nameLocation": "3470:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3497:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3480:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 332,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3480:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 333,
													"nodeType": "ArrayTypeName",
													"src": "3480:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3526:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3503:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 335,
														"name": "FixedPointValue",
														"nameLocations": [
															"3503:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3503:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3503:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:56:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3557:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "FixedPointValue",
														"nameLocations": [
															"3557:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3557:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3557:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:24:1"
									},
									"scope": 553,
									"src": "3461:838:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "4433:776:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "4451:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "4443:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 454,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4443:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"nodeType": "VariableDeclarationStatement",
												"src": "4443:14:1"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "4475:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "4467:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 457,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4467:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"nodeType": "VariableDeclarationStatement",
												"src": "4467:14:1"
											},
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "bestAmountOut",
														"nameLocation": "4514:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "4491:36:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 461,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 460,
																"name": "FixedPointValue",
																"nameLocations": [
																	"4491:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "4491:15:1"
															},
															"referencedDeclaration": 6,
															"src": "4491:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"nodeType": "VariableDeclarationStatement",
												"src": "4491:36:1"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "realAmountOut",
														"nameLocation": "4560:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "4537:36:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 465,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 464,
																"name": "FixedPointValue",
																"nameLocations": [
																	"4537:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "4537:15:1"
															},
															"referencedDeclaration": 6,
															"src": "4537:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 467,
												"nodeType": "VariableDeclarationStatement",
												"src": "4537:36:1"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "scale",
														"nameLocation": "4606:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "4583:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 469,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 468,
																"name": "FixedPointValue",
																"nameLocations": [
																	"4583:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "4583:15:1"
															},
															"referencedDeclaration": 6,
															"src": "4583:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"nodeType": "VariableDeclarationStatement",
												"src": "4583:28:1"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "4621:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 473,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4630:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 475,
														"indexExpression": {
															"hexValue": "30",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4635:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4630:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4621:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "4621:16:1"
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "4647:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 479,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4656:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 484,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 480,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "4661:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4666:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4661:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4675:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4661:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4656:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4647:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "4647:30:1"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 487,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "4687:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 490,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "4722:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"expression": {
																"id": 488,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "4698:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4714:7:1",
															"memberName": "asEther",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "4698:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4698:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "4687:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "4687:44:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "bestAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "4741:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 497,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "4777:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"arguments": [
																	{
																		"id": 499,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "4793:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 500,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "4801:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4787:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																		"typeString": "function (address,address) view returns (struct FixedPointValue memory)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"expression": {
																"id": 495,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "4757:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4773:3:1",
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 619,
															"src": "4757:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4757:52:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "4741:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "4741:68:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 505,
														"name": "realAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "4819:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 507,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "4845:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															{
																"id": 508,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "4851:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 506,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "4835:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (address[] memory,struct FixedPointValue memory) view returns (struct FixedPointValue memory)"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4835:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "4819:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4819:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 512,
																"name": "bestAmountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "4874:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4888:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "4874:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4897:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4874:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 516,
																"name": "realAmountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "4902:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4916:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "4902:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4902:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4874:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "4870:106:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4959:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "3138",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4972:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																}
															],
															"id": 521,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "4935:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4952:5:1",
															"4962:8:1"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "4935:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"functionReturnParameters": 453,
													"id": 525,
													"nodeType": "Return",
													"src": "4928:48:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 527,
															"name": "realAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4990:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5004:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4990:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 529,
															"name": "bestAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "5013:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5027:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "5013:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4990:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "IfStatement",
												"src": "4986:125:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "31305f303030",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5089:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10_000"
																	},
																	{
																		"hexValue": "30",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5107:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"name": "FixedPointValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "5065:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																		"typeString": "type(struct FixedPointValue storage pointer)"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"5082:5:1",
																	"5097:8:1"
																],
																"names": [
																	"value",
																	"decimals"
																],
																"nodeType": "FunctionCall",
																"src": "5065:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"expression": {
																"id": 532,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5041:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5057:7:1",
															"memberName": "asEther",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "5041:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5041:70:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"functionReturnParameters": 453,
													"id": 539,
													"nodeType": "Return",
													"src": "5034:77:1"
												}
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "scale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "5121:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 544,
																"name": "realAmountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "5151:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 545,
																"name": "bestAmountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "5166:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"expression": {
																"id": 542,
																"name": "fixedPointMath_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5129:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFixedPointMath_$652",
																	"typeString": "contract IFixedPointMath"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5145:5:1",
															"memberName": "scale",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 571,
															"src": "5129:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure external returns (struct FixedPointValue memory)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5129:51:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "5121:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5121:59:1"
											},
											{
												"expression": {
													"id": 549,
													"name": "scale",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "5197:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 453,
												"id": 550,
												"nodeType": "Return",
												"src": "5190:12:1"
											}
										]
									},
									"functionSelector": "0d186819",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "yield",
									"nameLocation": "4314:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4337:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4320:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4320:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "4320:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4366:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4343:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 446,
														"name": "FixedPointValue",
														"nameLocations": [
															"4343:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4343:15:1"
													},
													"referencedDeclaration": 6,
													"src": "4343:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4319:56:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "4420:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4397:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "FixedPointValue",
														"nameLocations": [
															"4397:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4397:15:1"
													},
													"referencedDeclaration": 6,
													"src": "4397:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:36:1"
									},
									"scope": 553,
									"src": "4305:904:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 554,
							"src": "677:4534:1",
							"usedErrors": []
						}
					],
					"src": "39:5172:1"
				},
				"id": 1
			},
			"code/contract/sol/native/utils/math/FixedPointMath.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/native/utils/math/FixedPointMath.sol",
					"exportedSymbols": {
						"FixedPointMath": [
							1231
						],
						"FixedPointValue": [
							6
						],
						"IFixedPointMath": [
							652
						],
						"Math": [
							2358
						]
					},
					"id": 1232,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 555,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:2"
						},
						{
							"absolutePath": "code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
							"file": "../../../non-native/openzeppelin/utils/math/Math.sol",
							"id": 557,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1232,
							"sourceUnit": 2359,
							"src": "65:76:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 556,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2358,
										"src": "74:4:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/native/shared/FixedPointValue.sol",
							"file": "../../shared/FixedPointValue.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1232,
							"sourceUnit": 7,
							"src": "142:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 558,
										"name": "FixedPointValue",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 6,
										"src": "151:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFixedPointMath",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 652,
							"linearizedBaseContracts": [
								652
							],
							"name": "IFixedPointMath",
							"nameLocation": "221:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e51356e8",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scale",
									"nameLocation": "252:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "258:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 560,
														"name": "FixedPointValue",
														"nameLocations": [
															"258:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "258:15:2"
													},
													"referencedDeclaration": 6,
													"src": "258:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "310:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "287:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 563,
														"name": "FixedPointValue",
														"nameLocations": [
															"287:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "287:15:2"
													},
													"referencedDeclaration": 6,
													"src": "287:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:58:2"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "362:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "339:34:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 568,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 567,
														"name": "FixedPointValue",
														"nameLocations": [
															"339:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "339:15:2"
													},
													"referencedDeclaration": 6,
													"src": "339:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:36:2"
									},
									"scope": 652,
									"src": "243:132:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b602c6d",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nameLocation": "389:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "418:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "395:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "FixedPointValue",
														"nameLocations": [
															"395:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "395:15:2"
													},
													"referencedDeclaration": 6,
													"src": "395:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "447:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "424:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "FixedPointValue",
														"nameLocations": [
															"424:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "424:15:2"
													},
													"referencedDeclaration": 6,
													"src": "424:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:58:2"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "476:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 580,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 579,
														"name": "FixedPointValue",
														"nameLocations": [
															"476:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "476:15:2"
													},
													"referencedDeclaration": 6,
													"src": "476:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:24:2"
									},
									"scope": 652,
									"src": "380:120:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "58633635",
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "514:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "541:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "518:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 585,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 584,
														"name": "FixedPointValue",
														"nameLocations": [
															"518:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "518:15:2"
													},
													"referencedDeclaration": 6,
													"src": "518:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "570:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "547:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 587,
														"name": "FixedPointValue",
														"nameLocations": [
															"547:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "547:15:2"
													},
													"referencedDeclaration": 6,
													"src": "547:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:58:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "599:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "FixedPointValue",
														"nameLocations": [
															"599:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "599:15:2"
													},
													"referencedDeclaration": 6,
													"src": "599:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:24:2"
									},
									"scope": 652,
									"src": "505:118:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2833d1f0",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "637:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "664:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "641:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 596,
														"name": "FixedPointValue",
														"nameLocations": [
															"641:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "641:15:2"
													},
													"referencedDeclaration": 6,
													"src": "641:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "693:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "670:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 599,
														"name": "FixedPointValue",
														"nameLocations": [
															"670:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "670:15:2"
													},
													"referencedDeclaration": 6,
													"src": "670:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:58:2"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "722:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 603,
														"name": "FixedPointValue",
														"nameLocations": [
															"722:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "722:15:2"
													},
													"referencedDeclaration": 6,
													"src": "722:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:24:2"
									},
									"scope": 652,
									"src": "628:118:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a7e7c9f9",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "760:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "764:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "FixedPointValue",
														"nameLocations": [
															"764:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "764:15:2"
													},
													"referencedDeclaration": 6,
													"src": "764:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "816:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "793:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 611,
														"name": "FixedPointValue",
														"nameLocations": [
															"793:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "793:15:2"
													},
													"referencedDeclaration": 6,
													"src": "793:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:58:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "845:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "FixedPointValue",
														"nameLocations": [
															"845:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "845:15:2"
													},
													"referencedDeclaration": 6,
													"src": "845:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:24:2"
									},
									"scope": 652,
									"src": "751:118:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8444b813",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "883:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "887:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "FixedPointValue",
														"nameLocations": [
															"887:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "887:15:2"
													},
													"referencedDeclaration": 6,
													"src": "887:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "939:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "916:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 623,
														"name": "FixedPointValue",
														"nameLocations": [
															"916:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "916:15:2"
													},
													"referencedDeclaration": 6,
													"src": "916:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:58:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "968:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 627,
														"name": "FixedPointValue",
														"nameLocations": [
															"968:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "968:15:2"
													},
													"referencedDeclaration": 6,
													"src": "968:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:2"
									},
									"scope": 652,
									"src": "874:118:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d02ebf4",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asNewDecimals",
									"nameLocation": "1006:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1043:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1020:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "FixedPointValue",
														"nameLocations": [
															"1020:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1020:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1020:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "1054:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1048:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 635,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1048:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:44:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1087:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 638,
														"name": "FixedPointValue",
														"nameLocations": [
															"1087:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1087:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1087:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:24:2"
									},
									"scope": 652,
									"src": "997:114:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e60d8e0",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asEther",
									"nameLocation": "1125:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1156:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "1133:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 643,
														"name": "FixedPointValue",
														"nameLocations": [
															"1133:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1133:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1133:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:28:2"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "1184:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 647,
														"name": "FixedPointValue",
														"nameLocations": [
															"1184:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1184:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1184:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:24:2"
									},
									"scope": 652,
									"src": "1116:92:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1232,
							"src": "211:999:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPointMath",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1231,
							"linearizedBaseContracts": [
								1231
							],
							"name": "FixedPointMath",
							"nameLocation": "1221:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 655,
									"libraryName": {
										"id": 653,
										"name": "Math",
										"nameLocations": [
											"1248:4:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2358,
										"src": "1248:4:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1242:23:2",
									"typeName": {
										"id": 654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1257:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"errorSelector": "5bc47486",
									"id": 661,
									"name": "IncompatibleDecimals",
									"nameLocation": "1277:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "decimals0",
												"nameLocation": "1304:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "1298:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 656,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1298:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "decimals1",
												"nameLocation": "1321:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "1315:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 658,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1315:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:34:2"
									},
									"src": "1271:61:2"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "1437:225:2",
										"statements": [
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "decimals0",
														"nameLocation": "1453:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "1447:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 669,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1447:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"nodeType": "VariableDeclarationStatement",
												"src": "1447:15:2"
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "decimals1",
														"nameLocation": "1478:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "1472:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 672,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1472:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"nodeType": "VariableDeclarationStatement",
												"src": "1472:15:2"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 675,
														"name": "decimals0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1497:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 676,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1509:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1514:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1509:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1497:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "1497:25:2"
											},
											{
												"expression": {
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 680,
														"name": "decimals1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1532:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 681,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1544:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1549:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1544:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1532:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "1532:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "decimals0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1571:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 686,
														"name": "decimals1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1584:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1571:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "1567:77:2",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 689,
																"name": "decimals0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "1623:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 690,
																"name": "decimals1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "1634:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 688,
															"name": "IncompatibleDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "1602:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint8_$returns$__$",
																"typeString": "function (uint8,uint8) pure"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1602:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 692,
													"nodeType": "RevertStatement",
													"src": "1595:49:2"
												}
											},
											{
												"id": 694,
												"nodeType": "PlaceholderStatement",
												"src": "1654:1:2"
											}
										]
									},
									"id": 696,
									"name": "onlyMatchingFixedPointValueType",
									"nameLocation": "1347:31:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "1402:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1379:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 662,
														"name": "FixedPointValue",
														"nameLocations": [
															"1379:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1379:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1379:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "1431:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1408:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "FixedPointValue",
														"nameLocations": [
															"1408:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1408:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1408:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:58:2"
									},
									"src": "1338:324:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "1842:394:2",
										"statements": [
											{
												"assignments": [
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "1858:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "1852:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 712,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1852:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"nodeType": "VariableDeclarationStatement",
												"src": "1852:14:2"
											},
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "1884:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "1876:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:22:2"
											},
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1931:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "1908:29:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 719,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 718,
																"name": "FixedPointValue",
																"nameLocations": [
																	"1908:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "1908:15:2"
															},
															"referencedDeclaration": 6,
															"src": "1908:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"nodeType": "VariableDeclarationStatement",
												"src": "1908:29:2"
											},
											{
												"assignments": [
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "scale",
														"nameLocation": "1970:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "1947:28:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 723,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 722,
																"name": "FixedPointValue",
																"nameLocations": [
																	"1947:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "1947:15:2"
															},
															"referencedDeclaration": 6,
															"src": "1947:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"nodeType": "VariableDeclarationStatement",
												"src": "1947:28:2"
											},
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1985:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 727,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "1996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2001:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1996:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1985:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "1985:24:2"
											},
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "2019:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2036:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 733,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "2040:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2036:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2019:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "2019:29:2"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 737,
														"name": "scale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2058:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31305f303030",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2090:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10_000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 740,
																	"name": "representation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "2099:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2090:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 742,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "2125:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 738,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "2066:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2083:5:2",
															"2115:8:2"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "2066:69:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2058:77:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2058:77:2"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2145:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 748,
																"name": "num0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "2158:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 749,
																"name": "num1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "2164:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 747,
															"name": "div",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2154:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2154:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2145:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "2145:24:2"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 753,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2179:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "2192:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 756,
																"name": "scale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "2200:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 754,
															"name": "mul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2188:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2188:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2179:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "2179:27:2"
											},
											{
												"expression": {
													"id": 760,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "2223:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 711,
												"id": 761,
												"nodeType": "Return",
												"src": "2216:13:2"
											}
										]
									},
									"functionSelector": "e51356e8",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 705,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "1785:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 706,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "1791:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 704,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"1753:31:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "1753:31:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1753:43:2"
										}
									],
									"name": "scale",
									"nameLocation": "1677:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "1706:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1683:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 697,
														"name": "FixedPointValue",
														"nameLocations": [
															"1683:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1683:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1683:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "1735:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1712:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 701,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 700,
														"name": "FixedPointValue",
														"nameLocations": [
															"1712:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1712:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1712:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:58:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "1829:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1806:34:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "FixedPointValue",
														"nameLocations": [
															"1806:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1806:15:2"
													},
													"referencedDeclaration": 6,
													"src": "1806:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:36:2"
									},
									"scope": 1231,
									"src": "1668:568:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2426:404:2",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "2442:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "2436:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 779,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2436:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"nodeType": "VariableDeclarationStatement",
												"src": "2436:14:2"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "2468:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "2460:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2460:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"nodeType": "VariableDeclarationStatement",
												"src": "2460:22:2"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2515:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "2492:29:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 786,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 785,
																"name": "FixedPointValue",
																"nameLocations": [
																	"2492:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "2492:15:2"
															},
															"referencedDeclaration": 6,
															"src": "2492:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"nodeType": "VariableDeclarationStatement",
												"src": "2492:29:2"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "scale",
														"nameLocation": "2554:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "2531:28:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 790,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 789,
																"name": "FixedPointValue",
																"nameLocations": [
																	"2531:15:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "2531:15:2"
															},
															"referencedDeclaration": 6,
															"src": "2531:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"nodeType": "VariableDeclarationStatement",
												"src": "2531:28:2"
											},
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 793,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2569:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 794,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "2580:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2584:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2580:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2569:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "2569:23:2"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2602:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2619:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 800,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "2623:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2619:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2602:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "2602:29:2"
											},
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 804,
														"name": "scale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2641:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31305f303030",
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2673:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10_000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 807,
																	"name": "representation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "2682:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2673:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 809,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2708:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 805,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "2649:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2666:5:2",
															"2698:8:2"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "2649:69:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2641:77:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2641:77:2"
											},
											{
												"expression": {
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "2728:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 815,
																"name": "num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "2741:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 816,
																"name": "scale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "2746:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 814,
															"name": "div",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2737:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2737:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2728:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "2728:24:2"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "2762:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 822,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "2775:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 823,
																"name": "sliceBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2783:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 821,
															"name": "mul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2771:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2771:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2762:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "2762:38:2"
											},
											{
												"expression": {
													"id": 827,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 787,
													"src": "2817:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 778,
												"id": 828,
												"nodeType": "Return",
												"src": "2810:13:2"
											}
										]
									},
									"functionSelector": "4b602c6d",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 772,
													"name": "num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "2370:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 773,
													"name": "sliceBasisPoints",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 769,
													"src": "2375:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 774,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 771,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"2338:31:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "2338:31:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:54:2"
										}
									],
									"name": "slice",
									"nameLocation": "2251:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "2280:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2257:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "FixedPointValue",
														"nameLocations": [
															"2257:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2257:15:2"
													},
													"referencedDeclaration": 6,
													"src": "2257:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "sliceBasisPoints",
												"nameLocation": "2308:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2285:39:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 767,
														"name": "FixedPointValue",
														"nameLocations": [
															"2285:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2285:15:2"
													},
													"referencedDeclaration": 6,
													"src": "2285:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:69:2"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2402:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 775,
														"name": "FixedPointValue",
														"nameLocations": [
															"2402:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2402:15:2"
													},
													"referencedDeclaration": 6,
													"src": "2402:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:24:2"
									},
									"scope": 1231,
									"src": "2242:588:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2996:298:2",
										"statements": [
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3012:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "3006:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 846,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:14:2"
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "3038:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "3030:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3030:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 851,
												"nodeType": "VariableDeclarationStatement",
												"src": "3030:14:2"
											},
											{
												"assignments": [
													853
												],
												"declarations": [
													{
														"constant": false,
														"id": 853,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "3062:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "3054:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 854,
												"nodeType": "VariableDeclarationStatement",
												"src": "3054:14:2"
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3086:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "3078:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"nodeType": "VariableDeclarationStatement",
												"src": "3078:14:2"
											},
											{
												"expression": {
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 858,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "3102:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 859,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3113:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3118:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "3113:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3102:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "3102:24:2"
											},
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3136:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 864,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3145:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3150:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3145:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3136:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "3136:19:2"
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 868,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "3165:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 869,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "3174:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3179:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3174:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3165:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "3165:19:2"
											},
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 873,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3194:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 874,
															"name": "value0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "3203:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 875,
															"name": "value1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3212:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3203:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3194:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "3194:24:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "3259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 881,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3277:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 879,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3235:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3252:5:2",
														"3267:8:2"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "3235:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 845,
												"id": 883,
												"nodeType": "Return",
												"src": "3228:59:2"
											}
										]
									},
									"functionSelector": "58633635",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 839,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "2951:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 840,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "2957:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 841,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 838,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"2919:31:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "2919:31:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2919:43:2"
										}
									],
									"name": "add",
									"nameLocation": "2845:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "2872:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2849:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 831,
														"name": "FixedPointValue",
														"nameLocations": [
															"2849:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2849:15:2"
													},
													"referencedDeclaration": 6,
													"src": "2849:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "2901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2878:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 834,
														"name": "FixedPointValue",
														"nameLocations": [
															"2878:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2878:15:2"
													},
													"referencedDeclaration": 6,
													"src": "2878:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2848:58:2"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2972:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 843,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 842,
														"name": "FixedPointValue",
														"nameLocations": [
															"2972:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2972:15:2"
													},
													"referencedDeclaration": 6,
													"src": "2972:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:24:2"
									},
									"scope": 1231,
									"src": "2836:458:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "3460:298:2",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3476:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3470:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 901,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3470:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"nodeType": "VariableDeclarationStatement",
												"src": "3470:14:2"
											},
											{
												"assignments": [
													905
												],
												"declarations": [
													{
														"constant": false,
														"id": 905,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "3502:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3494:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3494:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"nodeType": "VariableDeclarationStatement",
												"src": "3494:14:2"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "3526:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3518:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3518:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"nodeType": "VariableDeclarationStatement",
												"src": "3518:14:2"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3550:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3542:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"nodeType": "VariableDeclarationStatement",
												"src": "3542:14:2"
											},
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "3566:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 914,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "3577:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3582:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "3577:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3566:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "3566:24:2"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 918,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "3600:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 919,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "3609:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3614:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3609:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3600:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "3600:19:2"
											},
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3629:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 924,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "3638:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3643:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3638:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3629:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "3629:19:2"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 928,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "3658:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 929,
															"name": "value0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 930,
															"name": "value1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3676:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3667:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3658:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "3658:24:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "3723:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 936,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "3741:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 934,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3699:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3716:5:2",
														"3731:8:2"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "3699:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 900,
												"id": 938,
												"nodeType": "Return",
												"src": "3692:59:2"
											}
										]
									},
									"functionSelector": "2833d1f0",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 894,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 888,
													"src": "3415:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 895,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 891,
													"src": "3421:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 896,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 893,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"3383:31:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "3383:31:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3383:43:2"
										}
									],
									"name": "sub",
									"nameLocation": "3309:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "3336:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3313:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 886,
														"name": "FixedPointValue",
														"nameLocations": [
															"3313:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3313:15:2"
													},
													"referencedDeclaration": 6,
													"src": "3313:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "3365:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3342:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 890,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 889,
														"name": "FixedPointValue",
														"nameLocations": [
															"3342:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3342:15:2"
													},
													"referencedDeclaration": 6,
													"src": "3342:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:58:2"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3436:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "FixedPointValue",
														"nameLocations": [
															"3436:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3436:15:2"
													},
													"referencedDeclaration": 6,
													"src": "3436:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:24:2"
									},
									"scope": 1231,
									"src": "3300:458:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "3924:541:2",
										"statements": [
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3940:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "3934:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 956,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3934:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"nodeType": "VariableDeclarationStatement",
												"src": "3934:14:2"
											},
											{
												"assignments": [
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "3966:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "3958:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3958:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"nodeType": "VariableDeclarationStatement",
												"src": "3958:14:2"
											},
											{
												"assignments": [
													963
												],
												"declarations": [
													{
														"constant": false,
														"id": 963,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "3990:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "3982:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3982:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"nodeType": "VariableDeclarationStatement",
												"src": "3982:14:2"
											},
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4014:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "4006:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"nodeType": "VariableDeclarationStatement",
												"src": "4006:14:2"
											},
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "4038:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "4030:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4030:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"nodeType": "VariableDeclarationStatement",
												"src": "4030:22:2"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4062:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 972,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4073:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4062:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "4062:24:2"
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 976,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4096:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 977,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4110:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4105:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4096:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "4096:19:2"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 981,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4125:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 982,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4134:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4139:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4134:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4125:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "4125:19:2"
											},
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "4154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4171:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 988,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4175:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "4171:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4154:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "4154:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4197:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4209:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4197:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "4193:141:2",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "4212:122:2",
													"statements": [
														{
															"expression": {
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "4226:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 996,
																		"name": "value0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "4235:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 997,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "4244:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4235:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4226:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "4226:24:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1002,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "4295:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "4313:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1001,
																	"name": "FixedPointValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4271:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																		"typeString": "type(struct FixedPointValue storage pointer)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"4288:5:2",
																	"4303:8:2"
																],
																"names": [
																	"value",
																	"decimals"
																],
																"nodeType": "FunctionCall",
																"src": "4271:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"functionReturnParameters": 955,
															"id": 1005,
															"nodeType": "Return",
															"src": "4264:59:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4343:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1011,
																"name": "value1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "4366:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1012,
																"name": "representation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "4374:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1009,
																"name": "value0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "4352:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4359:6:2",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1706,
															"src": "4352:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4352:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4343:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "4343:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "4430:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1018,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4448:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1016,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4406:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4423:5:2",
														"4438:8:2"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "4406:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 955,
												"id": 1020,
												"nodeType": "Return",
												"src": "4399:59:2"
											}
										]
									},
									"functionSelector": "a7e7c9f9",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 949,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "3879:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 950,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "3885:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 948,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"3847:31:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "3847:31:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3847:43:2"
										}
									],
									"name": "mul",
									"nameLocation": "3773:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "3800:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3777:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 942,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 941,
														"name": "FixedPointValue",
														"nameLocations": [
															"3777:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3777:15:2"
													},
													"referencedDeclaration": 6,
													"src": "3777:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "3829:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3806:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "FixedPointValue",
														"nameLocations": [
															"3806:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3806:15:2"
													},
													"referencedDeclaration": 6,
													"src": "3806:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:58:2"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3900:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 952,
														"name": "FixedPointValue",
														"nameLocations": [
															"3900:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3900:15:2"
													},
													"referencedDeclaration": 6,
													"src": "3900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:24:2"
									},
									"scope": 1231,
									"src": "3764:701:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "4631:391:2",
										"statements": [
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "4647:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4641:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1038,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4641:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"nodeType": "VariableDeclarationStatement",
												"src": "4641:14:2"
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "4673:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4665:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4665:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"nodeType": "VariableDeclarationStatement",
												"src": "4665:14:2"
											},
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "4697:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4689:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"nodeType": "VariableDeclarationStatement",
												"src": "4689:14:2"
											},
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4721:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4713:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4713:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"nodeType": "VariableDeclarationStatement",
												"src": "4713:14:2"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "4745:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "4737:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4737:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"nodeType": "VariableDeclarationStatement",
												"src": "4737:22:2"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4769:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1054,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "4780:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4785:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4780:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4769:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "4769:24:2"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "4803:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1059,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "4812:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4817:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4812:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4803:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "4803:19:2"
											},
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1063,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "4832:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1064,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "4841:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4846:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4841:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4832:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "4832:19:2"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "4861:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 1070,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "4882:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "4878:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4861:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "4861:29:2"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1074,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "4900:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1077,
																"name": "representation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "4923:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1078,
																"name": "value1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "4939:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1075,
																"name": "value0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "4909:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4916:6:2",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1706,
															"src": "4909:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4909:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4900:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "4900:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "4987:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1084,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "5005:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1082,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4963:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4980:5:2",
														"4995:8:2"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "4963:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1086,
												"nodeType": "Return",
												"src": "4956:59:2"
											}
										]
									},
									"functionSelector": "8444b813",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1031,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "4586:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 1032,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1028,
													"src": "4592:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 1033,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1030,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"4554:31:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "4554:31:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4554:43:2"
										}
									],
									"name": "div",
									"nameLocation": "4480:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "4507:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4484:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1023,
														"name": "FixedPointValue",
														"nameLocations": [
															"4484:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4484:15:2"
													},
													"referencedDeclaration": 6,
													"src": "4484:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "4536:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4513:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1026,
														"name": "FixedPointValue",
														"nameLocations": [
															"4513:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4513:15:2"
													},
													"referencedDeclaration": 6,
													"src": "4513:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4483:58:2"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4607:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "FixedPointValue",
														"nameLocations": [
															"4607:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4607:15:2"
													},
													"referencedDeclaration": 6,
													"src": "4607:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:24:2"
									},
									"scope": 1231,
									"src": "4471:551:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "5140:470:2",
										"statements": [
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "currentDecimals",
														"nameLocation": "5156:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "5150:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1099,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"nodeType": "VariableDeclarationStatement",
												"src": "5150:21:2"
											},
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5189:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "5181:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5181:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"nodeType": "VariableDeclarationStatement",
												"src": "5181:13:2"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5212:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "5204:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"nodeType": "VariableDeclarationStatement",
												"src": "5204:14:2"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1108,
														"name": "currentDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "5228:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1109,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5246:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5250:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "5246:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5228:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "5228:30:2"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1113,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "5268:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1114,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5276:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5280:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "5276:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5268:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "5268:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "currentDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "5299:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5318:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "5299:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "IfStatement",
												"src": "5295:162:2",
												"trueBody": {
													"id": 1136,
													"nodeType": "Block",
													"src": "5322:135:2",
													"statements": [
														{
															"assignments": [
																1123
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1123,
																	"mutability": "mutable",
																	"name": "numAsEther",
																	"nameLocation": "5359:10:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1136,
																	"src": "5336:33:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue"
																	},
																	"typeName": {
																		"id": 1122,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1121,
																			"name": "FixedPointValue",
																			"nameLocations": [
																				"5336:15:2"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 6,
																			"src": "5336:15:2"
																		},
																		"referencedDeclaration": 6,
																		"src": "5336:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																			"typeString": "struct FixedPointValue"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1124,
															"nodeType": "VariableDeclarationStatement",
															"src": "5336:33:2"
														},
														{
															"expression": {
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1125,
																	"name": "numAsEther",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "5383:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1127,
																			"name": "num",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "5404:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																				"typeString": "struct FixedPointValue memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																				"typeString": "struct FixedPointValue memory"
																			}
																		],
																		"id": 1126,
																		"name": "asEther",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "5396:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																			"typeString": "function (struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5396:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"src": "5383:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "5383:25:2"
														},
														{
															"expression": {
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "5422:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1132,
																		"name": "numAsEther",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "5430:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																			"typeString": "struct FixedPointValue memory"
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5441:5:2",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "5430:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5422:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1135,
															"nodeType": "ExpressionStatement",
															"src": "5422:24:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1138,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "5466:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1144,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1139,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1103,
																						"src": "5477:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"id": 1142,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1140,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5486:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 1141,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5490:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "5486:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							}
																						],
																						"id": 1143,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5485:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "5477:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"id": 1147,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5497:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"hexValue": "3138",
																								"id": 1146,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5501:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"src": "5497:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						}
																					],
																					"id": 1148,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5496:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				},
																				"src": "5477:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1150,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5476:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5509:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 1152,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "5513:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5509:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1154,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5508:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5476:46:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5475:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5527:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5531:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "5527:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1160,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5526:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "5475:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5466:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "5466:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "5575:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1166,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5593:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1164,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "5551:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5568:5:2",
														"5583:8:2"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "5551:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1168,
												"nodeType": "Return",
												"src": "5544:59:2"
											}
										]
									},
									"functionSelector": "7d02ebf4",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asNewDecimals",
									"nameLocation": "5037:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "5074:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5051:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "FixedPointValue",
														"nameLocations": [
															"5051:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5051:15:2"
													},
													"referencedDeclaration": 6,
													"src": "5051:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "5085:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5079:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1092,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5079:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5050:44:2"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5116:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1095,
														"name": "FixedPointValue",
														"nameLocations": [
															"5116:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5116:15:2"
													},
													"referencedDeclaration": 6,
													"src": "5116:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:24:2"
									},
									"scope": 1231,
									"src": "5028:582:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "5706:300:2",
										"statements": [
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "currentDecimals",
														"nameLocation": "5722:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "5716:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1179,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5716:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"nodeType": "VariableDeclarationStatement",
												"src": "5716:21:2"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5755:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "5747:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"nodeType": "VariableDeclarationStatement",
												"src": "5747:13:2"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5778:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "5770:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5770:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"nodeType": "VariableDeclarationStatement",
												"src": "5770:14:2"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1188,
														"name": "currentDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "5794:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1189,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5812:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5816:8:2",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "5812:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5794:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "5794:30:2"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1193,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "5834:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1194,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5842:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5846:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "5842:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5834:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "5834:17:2"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "5861:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1199,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1183,
																						"src": "5872:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"id": 1202,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1200,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5881:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 1201,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5885:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "5881:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							}
																						],
																						"id": 1203,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5880:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "5872:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1207,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1205,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5892:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"id": 1206,
																								"name": "currentDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1180,
																								"src": "5896:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "5892:19:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1208,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5891:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5872:40:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1210,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5871:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5917:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "3138",
																					"id": 1212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5921:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18_by_1",
																						"typeString": "int_const 18"
																					},
																					"value": "18"
																				},
																				"src": "5917:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			}
																		],
																		"id": 1214,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5916:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	},
																	"src": "5871:53:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1216,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5870:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5929:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5933:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "5929:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1220,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5928:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "5870:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5861:75:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "5861:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "5977:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3138",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5995:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															}
														],
														"id": 1224,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "5953:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5970:5:2",
														"5985:8:2"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "5953:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1228,
												"nodeType": "Return",
												"src": "5946:53:2"
											}
										]
									},
									"functionSelector": "3e60d8e0",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asEther",
									"nameLocation": "5625:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "5656:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5633:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1171,
														"name": "FixedPointValue",
														"nameLocations": [
															"5633:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5633:15:2"
													},
													"referencedDeclaration": 6,
													"src": "5633:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5632:28:2"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5682:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 1176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1175,
														"name": "FixedPointValue",
														"nameLocations": [
															"5682:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5682:15:2"
													},
													"referencedDeclaration": 6,
													"src": "5682:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:24:2"
									},
									"scope": 1231,
									"src": "5616:390:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1232,
							"src": "1212:4796:2",
							"usedErrors": [
								661
							]
						}
					],
					"src": "39:5969:2"
				},
				"id": 2
			},
			"code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1309
						]
					},
					"id": 1310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1233,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1234,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1309,
							"linearizedBaseContracts": [
								1309
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1243,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1252,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "704:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 1309,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "836:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 1309,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "987:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1203:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1220:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1212:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1224:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:28:3"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1258:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:3"
									},
									"scope": 1309,
									"src": "1194:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "1270:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1548:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1566:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1558:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1581:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1573:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:32:3"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1613:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:3"
									},
									"scope": 1309,
									"src": "1539:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1628:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2284:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "2292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "2309:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:33:3"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "2343:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:6:3"
									},
									"scope": 1309,
									"src": "2275:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "2355:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2669:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2683:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2695:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:3"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2729:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:3"
									},
									"scope": 1309,
									"src": "2647:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1310,
							"src": "203:2534:3",
							"usedErrors": []
						}
					],
					"src": "106:2632:3"
				},
				"id": 3
			},
			"code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1309
						],
						"IERC20Metadata": [
							1334
						]
					},
					"id": 1335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "code/contract/sol/non-native/openzeppelin/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 1310,
							"src": "136:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1314,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1309,
										"src": "306:6:4"
									},
									"id": 1315,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1313,
								"nodeType": "StructuredDocumentation",
								"src": "161:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1334,
							"linearizedBaseContracts": [
								1334,
								1309
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 1334,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 1334,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1330,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 1334,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1335,
							"src": "278:405:4",
							"usedErrors": []
						}
					],
					"src": "110:574:4"
				},
				"id": 4
			},
			"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2358
						]
					},
					"id": 2359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1337,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:5",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2358,
							"linearizedBaseContracts": [
								2358
							],
							"name": "Math",
							"nameLocation": "211:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1341,
									"members": [
										{
											"id": 1338,
											"name": "Down",
											"nameLocation": "246:4:5",
											"nodeType": "EnumValue",
											"src": "246:4:5"
										},
										{
											"id": 1339,
											"name": "Up",
											"nameLocation": "288:2:5",
											"nodeType": "EnumValue",
											"src": "288:2:5"
										},
										{
											"id": 1340,
											"name": "Zero",
											"nameLocation": "319:4:5",
											"nodeType": "EnumValue",
											"src": "319:4:5"
										}
									],
									"name": "Rounding",
									"nameLocation": "227:8:5",
									"nodeType": "EnumDefinition",
									"src": "222:122:5"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "562:140:5",
										"statements": [
											{
												"id": 1371,
												"nodeType": "UncheckedBlock",
												"src": "572:124:5",
												"statements": [
													{
														"assignments": [
															1354
														],
														"declarations": [
															{
																"constant": false,
																"id": 1354,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "604:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1371,
																"src": "596:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1353,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "596:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1358,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1355,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "608:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "612:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "608:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "596:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "631:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1360,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "635:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "631:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1366,
														"nodeType": "IfStatement",
														"src": "627:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "653:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1352,
															"id": 1365,
															"nodeType": "Return",
															"src": "638:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "677:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1368,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "683:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1369,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "676:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1352,
														"id": 1370,
														"nodeType": "Return",
														"src": "669:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "350:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "495:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "502:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "513:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:22:5"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "547:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "547:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "553:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:15:5"
									},
									"scope": 2358,
									"src": "486:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "923:113:5",
										"statements": [
											{
												"id": 1399,
												"nodeType": "UncheckedBlock",
												"src": "933:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1385,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "961:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1386,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "965:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "961:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1392,
														"nodeType": "IfStatement",
														"src": "957:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "976:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "983:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1390,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "975:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1384,
															"id": 1391,
															"nodeType": "Return",
															"src": "968:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1007:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1394,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "1013:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1395,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "1017:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1013:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1397,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1006:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1384,
														"id": 1398,
														"nodeType": "Return",
														"src": "999:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "708:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "856:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:22:5"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "908:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "914:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:15:5"
									},
									"scope": 2358,
									"src": "847:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "1260:417:5",
										"statements": [
											{
												"id": 1441,
												"nodeType": "UncheckedBlock",
												"src": "1270:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1413,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "1528:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1533:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1528:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1420,
														"nodeType": "IfStatement",
														"src": "1524:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1544:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1550:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1418,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1543:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1412,
															"id": 1419,
															"nodeType": "Return",
															"src": "1536:16:5"
														}
													},
													{
														"assignments": [
															1422
														],
														"declarations": [
															{
																"constant": false,
																"id": 1422,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1574:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1441,
																"src": "1566:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1421,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1566:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1426,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "1578:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1582:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1578:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1566:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1427,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "1601:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1428,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "1605:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1430,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1610:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1436,
														"nodeType": "IfStatement",
														"src": "1597:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1621:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1628:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1434,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1620:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1412,
															"id": 1435,
															"nodeType": "Return",
															"src": "1613:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1652:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1438,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "1658:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1439,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1651:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1412,
														"id": 1440,
														"nodeType": "Return",
														"src": "1644:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "1042:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1193:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1208:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1200:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1219:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1211:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:22:5"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1245:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1245:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "1251:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:15:5"
									},
									"scope": 2358,
									"src": "1184:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "1902:114:5",
										"statements": [
											{
												"id": 1469,
												"nodeType": "UncheckedBlock",
												"src": "1912:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1455,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "1940:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1945:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1940:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1462,
														"nodeType": "IfStatement",
														"src": "1936:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1963:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1460,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1955:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1454,
															"id": 1461,
															"nodeType": "Return",
															"src": "1948:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1987:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1464,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "1993:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1465,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "1997:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1993:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1467,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1986:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1454,
														"id": 1468,
														"nodeType": "Return",
														"src": "1979:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "1683:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1835:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1850:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1842:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1861:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1853:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:22:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1887:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1887:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1893:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:15:5"
									},
									"scope": 2358,
									"src": "1826:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "2251:114:5",
										"statements": [
											{
												"id": 1497,
												"nodeType": "UncheckedBlock",
												"src": "2261:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "2289:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2294:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2289:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "2285:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2305:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2312:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2304:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1482,
															"id": 1489,
															"nodeType": "Return",
															"src": "2297:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2336:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1492,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "2342:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1493,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "2346:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2342:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1495,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2335:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1482,
														"id": 1496,
														"nodeType": "Return",
														"src": "2328:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "2022:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2184:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2199:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2191:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2210:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2202:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:22:5"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2236:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2242:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:15:5"
									},
									"scope": 2358,
									"src": "2175:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "2502:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "2519:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "2523:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2519:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "2531:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2519:13:5",
													"trueExpression": {
														"id": 1512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "2527:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1515,
												"nodeType": "Return",
												"src": "2512:20:5"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "2371:59:5",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2444:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2456:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2448:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2467:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2459:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:22:5"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2493:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:9:5"
									},
									"scope": 2358,
									"src": "2435:104:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2677:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1527,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "2694:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1528,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "2698:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2694:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1531,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2706:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2694:13:5",
													"trueExpression": {
														"id": 1530,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "2702:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1533,
												"nodeType": "Return",
												"src": "2687:20:5"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "2545:60:5",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2619:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2631:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2623:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2642:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2634:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:22:5"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2668:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:9:5"
									},
									"scope": 2358,
									"src": "2610:104:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "2898:82:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1545,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "2953:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1546,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "2957:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2952:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1549,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "2963:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1550,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1540,
																		"src": "2967:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2963:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1552,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2962:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2962:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1556,
												"nodeType": "Return",
												"src": "2945:28:5"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2720:102:5",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2836:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2852:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2863:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2855:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:22:5"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2889:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2889:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:9:5"
									},
									"scope": 2358,
									"src": "2827:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "3250:123:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1568,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "3338:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3343:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3338:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1572,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "3352:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3356:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3352:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1575,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3351:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "3361:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3351:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3365:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3351:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3338:28:5",
													"trueExpression": {
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3347:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1581,
												"nodeType": "Return",
												"src": "3331:35:5"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "2986:188:5",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3188:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3204:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "3196:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3215:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "3207:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:22:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "3241:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:9:5"
									},
									"scope": 2358,
									"src": "3179:194:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "3787:4115:5",
										"statements": [
											{
												"id": 1704,
												"nodeType": "UncheckedBlock",
												"src": "3797:4099:5",
												"statements": [
													{
														"assignments": [
															1596
														],
														"declarations": [
															{
																"constant": false,
																"id": 1596,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4126:5:5",
																"nodeType": "VariableDeclaration",
																"scope": 1704,
																"src": "4118:13:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4118:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1597,
														"nodeType": "VariableDeclarationStatement",
														"src": "4118:13:5"
													},
													{
														"assignments": [
															1599
														],
														"declarations": [
															{
																"constant": false,
																"id": 1599,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4198:5:5",
																"nodeType": "VariableDeclaration",
																"scope": 1704,
																"src": "4190:13:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1598,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4190:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1600,
														"nodeType": "VariableDeclarationStatement",
														"src": "4190:13:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4270:157:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4288:30:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4305:1:5"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4308:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4315:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4311:6:5"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:20:5"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4292:2:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4335:18:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4348:1:5"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4351:1:5"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:9:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4335:5:5"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4370:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4387:2:5"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4391:5:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4383:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4383:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4402:2:5"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4406:5:5"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4399:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4399:13:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:34:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4370:5:5"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "4335:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "4391:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "4406:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "4370:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1586,
																"isOffset": false,
																"isSlot": false,
																"src": "4305:1:5",
																"valueSize": 1
															},
															{
																"declaration": 1586,
																"isOffset": false,
																"isSlot": false,
																"src": "4348:1:5",
																"valueSize": 1
															},
															{
																"declaration": 1588,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:1:5",
																"valueSize": 1
															},
															{
																"declaration": 1588,
																"isOffset": false,
																"isSlot": false,
																"src": "4351:1:5",
																"valueSize": 1
															}
														],
														"id": 1601,
														"nodeType": "InlineAssembly",
														"src": "4261:166:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1602,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "4508:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4517:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4508:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1610,
														"nodeType": "IfStatement",
														"src": "4504:368:5",
														"trueBody": {
															"id": 1609,
															"nodeType": "Block",
															"src": "4520:352:5",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1605,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "4838:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1606,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "4846:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4838:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1594,
																	"id": 1608,
																	"nodeType": "Return",
																	"src": "4831:26:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1612,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "4982:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1613,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "4996:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4982:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1611,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4974:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1617,
														"nodeType": "ExpressionStatement",
														"src": "4974:53:5"
													},
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5291:9:5",
																"nodeType": "VariableDeclaration",
																"scope": 1704,
																"src": "5283:17:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5283:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1620,
														"nodeType": "VariableDeclarationStatement",
														"src": "5283:17:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5323:291:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5392:38:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5412:1:5"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5415:1:5"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5418:11:5"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5405:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:25:5"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5392:9:5"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5512:41:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5525:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5535:9:5"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5546:5:5"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5532:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5532:20:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5521:32:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5512:5:5"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5570:30:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5583:5:5"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5590:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:21:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5570:5:5"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1590,
																"isOffset": false,
																"isSlot": false,
																"src": "5418:11:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "5546:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "5570:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "5583:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "5512:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "5525:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1619,
																"isOffset": false,
																"isSlot": false,
																"src": "5392:9:5",
																"valueSize": 1
															},
															{
																"declaration": 1619,
																"isOffset": false,
																"isSlot": false,
																"src": "5535:9:5",
																"valueSize": 1
															},
															{
																"declaration": 1619,
																"isOffset": false,
																"isSlot": false,
																"src": "5590:9:5",
																"valueSize": 1
															},
															{
																"declaration": 1586,
																"isOffset": false,
																"isSlot": false,
																"src": "5412:1:5",
																"valueSize": 1
															},
															{
																"declaration": 1588,
																"isOffset": false,
																"isSlot": false,
																"src": "5415:1:5",
																"valueSize": 1
															}
														],
														"id": 1621,
														"nodeType": "InlineAssembly",
														"src": "5314:300:5"
													},
													{
														"assignments": [
															1623
														],
														"declarations": [
															{
																"constant": false,
																"id": 1623,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5929:4:5",
																"nodeType": "VariableDeclaration",
																"scope": 1704,
																"src": "5921:12:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5921:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1631,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "5936:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "5951:12:5",
																			"subExpression": {
																				"id": 1625,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1590,
																				"src": "5952:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5966:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5951:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5950:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5936:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5921:47:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5991:362:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6056:37:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6075:11:5"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6088:4:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:22:5"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6056:11:5"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6160:25:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6173:5:5"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6180:4:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:16:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6160:5:5"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6300:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6320:1:5",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6323:4:5"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6316:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6316:12:5"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6330:4:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6312:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6312:23:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6337:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6308:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6308:31:5"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6300:4:5"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1590,
																"isOffset": false,
																"isSlot": false,
																"src": "6056:11:5",
																"valueSize": 1
															},
															{
																"declaration": 1590,
																"isOffset": false,
																"isSlot": false,
																"src": "6075:11:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "6160:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1596,
																"isOffset": false,
																"isSlot": false,
																"src": "6173:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "6088:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "6180:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "6300:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "6323:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1623,
																"isOffset": false,
																"isSlot": false,
																"src": "6330:4:5",
																"valueSize": 1
															}
														],
														"id": 1632,
														"nodeType": "InlineAssembly",
														"src": "5982:371:5"
													},
													{
														"expression": {
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1633,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "6419:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1634,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "6428:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1635,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "6436:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6428:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6419:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1638,
														"nodeType": "ExpressionStatement",
														"src": "6419:21:5"
													},
													{
														"assignments": [
															1640
														],
														"declarations": [
															{
																"constant": false,
																"id": 1640,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6766:7:5",
																"nodeType": "VariableDeclaration",
																"scope": 1704,
																"src": "6758:15:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1639,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6758:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1647,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6777:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1642,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "6781:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6777:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6776:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6796:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6776:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6758:39:5"
													},
													{
														"expression": {
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1648,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7014:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7025:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1650,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "7029:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1651,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7043:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7029:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7025:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7014:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1655,
														"nodeType": "ExpressionStatement",
														"src": "7014:36:5"
													},
													{
														"expression": {
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1656,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7083:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7094:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1658,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "7098:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1659,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7112:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7098:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7094:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7083:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1663,
														"nodeType": "ExpressionStatement",
														"src": "7083:36:5"
													},
													{
														"expression": {
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1664,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7153:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7164:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1666,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "7168:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1667,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7182:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7168:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7164:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7153:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1671,
														"nodeType": "ExpressionStatement",
														"src": "7153:36:5"
													},
													{
														"expression": {
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1672,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7223:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1674,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "7238:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1675,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7252:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7238:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7234:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7223:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1679,
														"nodeType": "ExpressionStatement",
														"src": "7223:36:5"
													},
													{
														"expression": {
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1680,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7293:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7304:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1682,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "7308:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1683,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7322:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7308:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7304:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7293:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1687,
														"nodeType": "ExpressionStatement",
														"src": "7293:36:5"
													},
													{
														"expression": {
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1688,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7364:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7375:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1690,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "7379:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1691,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7393:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7379:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7375:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7364:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1695,
														"nodeType": "ExpressionStatement",
														"src": "7364:36:5"
													},
													{
														"expression": {
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "7834:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7843:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1698,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "7851:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7843:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7834:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1701,
														"nodeType": "ExpressionStatement",
														"src": "7834:24:5"
													},
													{
														"expression": {
															"id": 1702,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "7879:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1594,
														"id": 1703,
														"nodeType": "Return",
														"src": "7872:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "3379:305:5",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3698:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3713:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "3705:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3724:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "3716:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3735:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "3727:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3727:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:43:5"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3779:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "3771:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:16:5"
									},
									"scope": 2358,
									"src": "3689:4213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "8144:189:5",
										"statements": [
											{
												"assignments": [
													1722
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8162:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1749,
														"src": "8154:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8154:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1728,
												"initialValue": {
													"arguments": [
														{
															"id": 1724,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "8178:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1725,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "8181:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1726,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "8184:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1723,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1706,
															1750
														],
														"referencedDeclaration": 1706,
														"src": "8171:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8171:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8154:42:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1341",
															"typeString": "enum Math.Rounding"
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1729,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "8210:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1341",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1730,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "8222:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1341_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8231:2:5",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1339,
															"src": "8222:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1341",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8210:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1734,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "8244:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1735,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "8247:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1736,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "8250:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1733,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8237:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8237:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8265:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8237:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8210:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"nodeType": "IfStatement",
												"src": "8206:98:5",
												"trueBody": {
													"id": 1745,
													"nodeType": "Block",
													"src": "8268:36:5",
													"statements": [
														{
															"expression": {
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1741,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "8282:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8292:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8282:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "8282:11:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1747,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1722,
													"src": "8320:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1748,
												"nodeType": "Return",
												"src": "8313:13:5"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "7908:121:5",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8043:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8058:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8050:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8069:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8061:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8080:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8072:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8102:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1341",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1714,
														"name": "Rounding",
														"nameLocations": [
															"8093:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1341,
														"src": "8093:8:5"
													},
													"referencedDeclaration": 1341,
													"src": "8093:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1341",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8049:62:5"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "8135:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:9:5"
									},
									"scope": 2358,
									"src": "8034:299:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "8609:1585:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "8623:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8628:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8623:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1764,
												"nodeType": "IfStatement",
												"src": "8619:45:5",
												"trueBody": {
													"id": 1763,
													"nodeType": "Block",
													"src": "8631:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8652:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1757,
															"id": 1762,
															"nodeType": "Return",
															"src": "8645:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9351:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "9343:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9343:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9360:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1769,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "9371:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1768,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2030,
																			2066
																		],
																		"referencedDeclaration": 2030,
																		"src": "9366:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9366:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9377:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9366:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1773,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9365:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9360:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9343:36:5"
											},
											{
												"id": 1860,
												"nodeType": "UncheckedBlock",
												"src": "9780:408:5",
												"statements": [
													{
														"expression": {
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1776,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "9804:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1777,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "9814:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1778,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "9823:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1779,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "9827:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9823:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9814:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1782,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9813:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9813:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9804:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1786,
														"nodeType": "ExpressionStatement",
														"src": "9804:35:5"
													},
													{
														"expression": {
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1787,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "9853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1788,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "9863:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1789,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "9872:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1790,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "9876:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9872:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9863:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1793,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9862:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9887:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9862:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9853:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1797,
														"nodeType": "ExpressionStatement",
														"src": "9853:35:5"
													},
													{
														"expression": {
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "9902:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1799,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "9912:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1800,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "9921:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1801,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "9925:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9921:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9912:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1804,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9911:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9936:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9911:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9902:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1808,
														"nodeType": "ExpressionStatement",
														"src": "9902:35:5"
													},
													{
														"expression": {
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1809,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "9951:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1810,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "9961:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1811,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "9970:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1812,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "9974:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9970:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9961:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9960:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9960:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9951:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"nodeType": "ExpressionStatement",
														"src": "9951:35:5"
													},
													{
														"expression": {
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1820,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10000:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1821,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "10010:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1822,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "10019:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1823,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "10023:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10019:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10010:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10009:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10034:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10009:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10000:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1830,
														"nodeType": "ExpressionStatement",
														"src": "10000:35:5"
													},
													{
														"expression": {
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1831,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10049:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1832,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "10059:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1833,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "10068:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1834,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "10072:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10068:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10059:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10058:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10083:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10058:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10049:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1841,
														"nodeType": "ExpressionStatement",
														"src": "10049:35:5"
													},
													{
														"expression": {
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1842,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10098:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1843,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "10108:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1844,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "10117:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1845,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "10121:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10117:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10108:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1848,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10107:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10132:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10107:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10098:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1852,
														"nodeType": "ExpressionStatement",
														"src": "10098:35:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "10158:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1855,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1753,
																		"src": "10166:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1856,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "10170:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10166:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1853,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "10154:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10154:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1757,
														"id": 1859,
														"nodeType": "Return",
														"src": "10147:30:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "8339:208:5",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8561:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8574:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "8566:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8565:11:5"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "8600:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:9:5"
									},
									"scope": 2358,
									"src": "8552:1642:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "10370:161:5",
										"statements": [
											{
												"id": 1896,
												"nodeType": "UncheckedBlock",
												"src": "10380:145:5",
												"statements": [
													{
														"assignments": [
															1874
														],
														"declarations": [
															{
																"constant": false,
																"id": 1874,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10412:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1896,
																"src": "10404:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1873,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10404:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1878,
														"initialValue": {
															"arguments": [
																{
																	"id": 1876,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "10426:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1875,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1862,
																	1898
																],
																"referencedDeclaration": 1862,
																"src": "10421:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10421:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10404:24:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1879,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "10449:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1341",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1880,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1868,
																					"src": "10459:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1881,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1341,
																						"src": "10471:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1341_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "10480:2:5",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1339,
																					"src": "10471:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10459:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1884,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1874,
																						"src": "10486:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1885,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1874,
																						"src": "10495:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10486:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1887,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1865,
																					"src": "10504:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10486:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10459:46:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10512:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10459:54:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10508:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10458:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10449:65:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1872,
														"id": 1895,
														"nodeType": "Return",
														"src": "10442:72:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "10200:89:5",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10303:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10316:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "10308:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10328:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "10319:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1341",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1866,
														"name": "Rounding",
														"nameLocations": [
															"10319:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1341,
														"src": "10319:8:5"
													},
													"referencedDeclaration": 1341,
													"src": "10319:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1341",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10307:30:5"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "10361:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10361:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10360:9:5"
									},
									"scope": 2358,
									"src": "10294:237:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "10716:922:5",
										"statements": [
											{
												"assignments": [
													1907
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10734:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "10726:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10726:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"hexValue": "30",
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10743:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10726:18:5"
											},
											{
												"id": 2026,
												"nodeType": "UncheckedBlock",
												"src": "10754:855:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1910,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "10782:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10791:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10782:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10782:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1924,
														"nodeType": "IfStatement",
														"src": "10778:99:5",
														"trueBody": {
															"id": 1923,
															"nodeType": "Block",
															"src": "10800:77:5",
															"statements": [
																{
																	"expression": {
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1915,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "10818:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10828:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10818:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1918,
																	"nodeType": "ExpressionStatement",
																	"src": "10818:13:5"
																},
																{
																	"expression": {
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1919,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "10849:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10859:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10849:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1922,
																	"nodeType": "ExpressionStatement",
																	"src": "10849:13:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "10894:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10903:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10894:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10908:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10894:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1939,
														"nodeType": "IfStatement",
														"src": "10890:96:5",
														"trueBody": {
															"id": 1938,
															"nodeType": "Block",
															"src": "10911:75:5",
															"statements": [
																{
																	"expression": {
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1930,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "10929:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10939:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10929:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1933,
																	"nodeType": "ExpressionStatement",
																	"src": "10929:12:5"
																},
																{
																	"expression": {
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1934,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "10959:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10969:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10959:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1937,
																	"nodeType": "ExpressionStatement",
																	"src": "10959:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1940,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "11003:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11012:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11003:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11003:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1954,
														"nodeType": "IfStatement",
														"src": "10999:96:5",
														"trueBody": {
															"id": 1953,
															"nodeType": "Block",
															"src": "11020:75:5",
															"statements": [
																{
																	"expression": {
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1945,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "11038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11048:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11038:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1948,
																	"nodeType": "ExpressionStatement",
																	"src": "11038:12:5"
																},
																{
																	"expression": {
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1949,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "11068:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11078:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11068:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1952,
																	"nodeType": "ExpressionStatement",
																	"src": "11068:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1955,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "11112:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11121:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11112:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11126:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11112:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1969,
														"nodeType": "IfStatement",
														"src": "11108:96:5",
														"trueBody": {
															"id": 1968,
															"nodeType": "Block",
															"src": "11129:75:5",
															"statements": [
																{
																	"expression": {
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1960,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "11147:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11157:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11147:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1963,
																	"nodeType": "ExpressionStatement",
																	"src": "11147:12:5"
																},
																{
																	"expression": {
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1964,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "11177:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11187:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11177:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1967,
																	"nodeType": "ExpressionStatement",
																	"src": "11177:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "11221:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11230:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11221:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11234:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11221:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1984,
														"nodeType": "IfStatement",
														"src": "11217:93:5",
														"trueBody": {
															"id": 1983,
															"nodeType": "Block",
															"src": "11237:73:5",
															"statements": [
																{
																	"expression": {
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1975,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "11255:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11265:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11255:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1978,
																	"nodeType": "ExpressionStatement",
																	"src": "11255:11:5"
																},
																{
																	"expression": {
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1979,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "11284:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11294:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11284:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1982,
																	"nodeType": "ExpressionStatement",
																	"src": "11284:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1985,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "11327:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11336:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11327:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11340:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11327:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1999,
														"nodeType": "IfStatement",
														"src": "11323:93:5",
														"trueBody": {
															"id": 1998,
															"nodeType": "Block",
															"src": "11343:73:5",
															"statements": [
																{
																	"expression": {
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "11361:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11361:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1993,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:11:5"
																},
																{
																	"expression": {
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1994,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "11390:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11400:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11390:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1997,
																	"nodeType": "ExpressionStatement",
																	"src": "11390:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2000,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "11433:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11442:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11433:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11433:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2014,
														"nodeType": "IfStatement",
														"src": "11429:93:5",
														"trueBody": {
															"id": 2013,
															"nodeType": "Block",
															"src": "11449:73:5",
															"statements": [
																{
																	"expression": {
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2005,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "11467:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11477:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11467:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2008,
																	"nodeType": "ExpressionStatement",
																	"src": "11467:11:5"
																},
																{
																	"expression": {
																		"id": 2011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2009,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "11496:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11506:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11496:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2012,
																	"nodeType": "ExpressionStatement",
																	"src": "11496:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2015,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "11539:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11548:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11539:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11552:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11539:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2025,
														"nodeType": "IfStatement",
														"src": "11535:64:5",
														"trueBody": {
															"id": 2024,
															"nodeType": "Block",
															"src": "11555:44:5",
															"statements": [
																{
																	"expression": {
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "11573:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11583:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11573:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2023,
																	"nodeType": "ExpressionStatement",
																	"src": "11573:11:5"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2027,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1907,
													"src": "11625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1905,
												"id": 2028,
												"nodeType": "Return",
												"src": "11618:13:5"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "10537:113:5",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10664:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10677:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "10669:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10669:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10668:15:5"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "10707:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10706:9:5"
									},
									"scope": 2358,
									"src": "10655:983:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "11871:165:5",
										"statements": [
											{
												"id": 2064,
												"nodeType": "UncheckedBlock",
												"src": "11881:149:5",
												"statements": [
													{
														"assignments": [
															2042
														],
														"declarations": [
															{
																"constant": false,
																"id": 2042,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11913:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 2064,
																"src": "11905:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2041,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11905:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2046,
														"initialValue": {
															"arguments": [
																{
																	"id": 2044,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "11927:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2043,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2030,
																	2066
																],
																"referencedDeclaration": 2030,
																"src": "11922:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11922:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11905:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2047,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "11954:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1341",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2048,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2036,
																					"src": "11964:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2049,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1341,
																						"src": "11976:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1341_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11985:2:5",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1339,
																					"src": "11976:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11964:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2052,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11991:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2053,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2042,
																						"src": "11996:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11991:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2055,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2033,
																					"src": "12005:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11991:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11964:46:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12017:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11964:54:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12013:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2061,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11963:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11954:65:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2040,
														"id": 2063,
														"nodeType": "Return",
														"src": "11947:72:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "11644:142:5",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11800:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11813:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "11805:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11829:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "11820:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1341",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2034,
														"name": "Rounding",
														"nameLocations": [
															"11820:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1341,
														"src": "11820:8:5"
													},
													"referencedDeclaration": 1341,
													"src": "11820:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1341",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11804:34:5"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "11862:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11861:9:5"
									},
									"scope": 2358,
									"src": "11791:245:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "12223:854:5",
										"statements": [
											{
												"assignments": [
													2075
												],
												"declarations": [
													{
														"constant": false,
														"id": 2075,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12241:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "12233:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2074,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12233:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2077,
												"initialValue": {
													"hexValue": "30",
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12250:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12233:18:5"
											},
											{
												"id": 2191,
												"nodeType": "UncheckedBlock",
												"src": "12261:787:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2078,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12289:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12298:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12304:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12298:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12289:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2094,
														"nodeType": "IfStatement",
														"src": "12285:103:5",
														"trueBody": {
															"id": 2093,
															"nodeType": "Block",
															"src": "12308:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2083,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "12326:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12335:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12341:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12335:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12326:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2088,
																	"nodeType": "ExpressionStatement",
																	"src": "12326:17:5"
																},
																{
																	"expression": {
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2089,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "12361:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12371:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12361:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2092,
																	"nodeType": "ExpressionStatement",
																	"src": "12361:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2095,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12405:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12414:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12420:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12414:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12405:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2111,
														"nodeType": "IfStatement",
														"src": "12401:103:5",
														"trueBody": {
															"id": 2110,
															"nodeType": "Block",
															"src": "12424:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2100,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "12442:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12451:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12457:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12451:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12442:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2105,
																	"nodeType": "ExpressionStatement",
																	"src": "12442:17:5"
																},
																{
																	"expression": {
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2106,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "12477:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12487:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12477:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2109,
																	"nodeType": "ExpressionStatement",
																	"src": "12477:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12521:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12530:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12536:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12530:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12521:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2128,
														"nodeType": "IfStatement",
														"src": "12517:103:5",
														"trueBody": {
															"id": 2127,
															"nodeType": "Block",
															"src": "12540:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "12558:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12567:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12573:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12567:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12558:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2122,
																	"nodeType": "ExpressionStatement",
																	"src": "12558:17:5"
																},
																{
																	"expression": {
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "12593:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12603:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12593:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2126,
																	"nodeType": "ExpressionStatement",
																	"src": "12593:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12637:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12646:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12652:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12646:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12637:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2145,
														"nodeType": "IfStatement",
														"src": "12633:100:5",
														"trueBody": {
															"id": 2144,
															"nodeType": "Block",
															"src": "12655:78:5",
															"statements": [
																{
																	"expression": {
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "12673:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12682:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12688:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12682:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12673:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2139,
																	"nodeType": "ExpressionStatement",
																	"src": "12673:16:5"
																},
																{
																	"expression": {
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "12707:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12717:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12707:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2143,
																	"nodeType": "ExpressionStatement",
																	"src": "12707:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12750:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12759:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12765:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12759:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12750:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2162,
														"nodeType": "IfStatement",
														"src": "12746:100:5",
														"trueBody": {
															"id": 2161,
															"nodeType": "Block",
															"src": "12768:78:5",
															"statements": [
																{
																	"expression": {
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "12786:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12795:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12801:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12795:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12786:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2156,
																	"nodeType": "ExpressionStatement",
																	"src": "12786:16:5"
																},
																{
																	"expression": {
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "12820:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12830:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12820:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2160,
																	"nodeType": "ExpressionStatement",
																	"src": "12820:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12863:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12872:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12878:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12872:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12863:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2179,
														"nodeType": "IfStatement",
														"src": "12859:100:5",
														"trueBody": {
															"id": 2178,
															"nodeType": "Block",
															"src": "12881:78:5",
															"statements": [
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2069,
																			"src": "12899:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12908:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12914:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12908:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12899:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "12899:16:5"
																},
																{
																	"expression": {
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2174,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "12933:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12943:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12933:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2177,
																	"nodeType": "ExpressionStatement",
																	"src": "12933:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "12976:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12985:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12991:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12985:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "12976:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2190,
														"nodeType": "IfStatement",
														"src": "12972:66:5",
														"trueBody": {
															"id": 2189,
															"nodeType": "Block",
															"src": "12994:44:5",
															"statements": [
																{
																	"expression": {
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2185,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "13012:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13022:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13012:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2188,
																	"nodeType": "ExpressionStatement",
																	"src": "13012:11:5"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2192,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2075,
													"src": "13064:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2193,
												"nodeType": "Return",
												"src": "13057:13:5"
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "12042:114:5",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12170:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "12176:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12175:15:5"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "12214:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12214:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12213:9:5"
									},
									"scope": 2358,
									"src": "12161:916:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "13312:167:5",
										"statements": [
											{
												"id": 2229,
												"nodeType": "UncheckedBlock",
												"src": "13322:151:5",
												"statements": [
													{
														"assignments": [
															2207
														],
														"declarations": [
															{
																"constant": false,
																"id": 2207,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13354:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 2229,
																"src": "13346:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2206,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13346:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2211,
														"initialValue": {
															"arguments": [
																{
																	"id": 2209,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2198,
																	"src": "13369:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2208,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2195,
																	2231
																],
																"referencedDeclaration": 2195,
																"src": "13363:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13363:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13346:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "13396:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1341",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2213,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2201,
																					"src": "13406:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2214,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1341,
																						"src": "13418:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1341_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13427:2:5",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1339,
																					"src": "13418:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13406:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13433:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2218,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2207,
																						"src": "13439:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13433:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2220,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "13448:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13433:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13406:47:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13460:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13406:55:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13456:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13405:57:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13396:66:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2205,
														"id": 2228,
														"nodeType": "Return",
														"src": "13389:73:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "13083:143:5",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13240:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "13246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13270:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "13261:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1341",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2199,
														"name": "Rounding",
														"nameLocations": [
															"13261:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1341,
														"src": "13261:8:5"
													},
													"referencedDeclaration": 1341,
													"src": "13261:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1341",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13245:34:5"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "13303:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13303:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:9:5"
									},
									"scope": 2358,
									"src": "13231:248:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "13793:600:5",
										"statements": [
											{
												"assignments": [
													2240
												],
												"declarations": [
													{
														"constant": false,
														"id": 2240,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13811:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2317,
														"src": "13803:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13803:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"hexValue": "30",
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13820:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13803:18:5"
											},
											{
												"id": 2314,
												"nodeType": "UncheckedBlock",
												"src": "13831:533:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2243,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "13859:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13868:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13859:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13859:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2257,
														"nodeType": "IfStatement",
														"src": "13855:98:5",
														"trueBody": {
															"id": 2256,
															"nodeType": "Block",
															"src": "13877:76:5",
															"statements": [
																{
																	"expression": {
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2248,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "13895:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13905:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13895:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2251,
																	"nodeType": "ExpressionStatement",
																	"src": "13895:13:5"
																},
																{
																	"expression": {
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2252,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "13926:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13936:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13926:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2255,
																	"nodeType": "ExpressionStatement",
																	"src": "13926:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2258,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "13970:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13979:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13970:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13984:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13970:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2272,
														"nodeType": "IfStatement",
														"src": "13966:95:5",
														"trueBody": {
															"id": 2271,
															"nodeType": "Block",
															"src": "13987:74:5",
															"statements": [
																{
																	"expression": {
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2263,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "14005:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14015:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14005:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2266,
																	"nodeType": "ExpressionStatement",
																	"src": "14005:12:5"
																},
																{
																	"expression": {
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "14035:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14035:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2270,
																	"nodeType": "ExpressionStatement",
																	"src": "14035:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2273,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "14078:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14087:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14078:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14092:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14078:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2287,
														"nodeType": "IfStatement",
														"src": "14074:95:5",
														"trueBody": {
															"id": 2286,
															"nodeType": "Block",
															"src": "14095:74:5",
															"statements": [
																{
																	"expression": {
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2278,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "14113:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14123:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14113:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2281,
																	"nodeType": "ExpressionStatement",
																	"src": "14113:12:5"
																},
																{
																	"expression": {
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2282,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "14143:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14153:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14143:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2285,
																	"nodeType": "ExpressionStatement",
																	"src": "14143:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2288,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "14186:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14195:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14186:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14200:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14186:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2302,
														"nodeType": "IfStatement",
														"src": "14182:95:5",
														"trueBody": {
															"id": 2301,
															"nodeType": "Block",
															"src": "14203:74:5",
															"statements": [
																{
																	"expression": {
																		"id": 2295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2293,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "14221:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14231:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14221:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2296,
																	"nodeType": "ExpressionStatement",
																	"src": "14221:12:5"
																},
																{
																	"expression": {
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2297,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "14251:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14261:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14251:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2300,
																	"nodeType": "ExpressionStatement",
																	"src": "14251:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "14294:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14303:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14294:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14307:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14294:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2313,
														"nodeType": "IfStatement",
														"src": "14290:64:5",
														"trueBody": {
															"id": 2312,
															"nodeType": "Block",
															"src": "14310:44:5",
															"statements": [
																{
																	"expression": {
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "14328:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14338:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14328:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2311,
																	"nodeType": "ExpressionStatement",
																	"src": "14328:11:5"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2315,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2240,
													"src": "14380:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2316,
												"nodeType": "Return",
												"src": "14373:13:5"
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "13485:240:5",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13739:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13754:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "13746:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13746:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13745:15:5"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "13784:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13783:9:5"
									},
									"scope": 2358,
									"src": "13730:663:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "14630:174:5",
										"statements": [
											{
												"id": 2355,
												"nodeType": "UncheckedBlock",
												"src": "14640:158:5",
												"statements": [
													{
														"assignments": [
															2330
														],
														"declarations": [
															{
																"constant": false,
																"id": 2330,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14672:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 2355,
																"src": "14664:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14664:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2334,
														"initialValue": {
															"arguments": [
																{
																	"id": 2332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "14688:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2331,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2318,
																	2357
																],
																"referencedDeclaration": 2318,
																"src": "14681:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14681:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14664:30:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2335,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "14715:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1341",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2336,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2324,
																					"src": "14725:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2337,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1341,
																						"src": "14737:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1341_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2338,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14746:2:5",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1339,
																					"src": "14737:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1341",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "14725:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14752:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2343,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2341,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2330,
																									"src": "14758:6:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2342,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14768:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14758:11:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2344,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14757:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14752:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2346,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2321,
																					"src": "14773:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14752:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14725:53:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14785:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14725:61:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14781:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2352,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14724:63:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14715:72:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2328,
														"id": 2354,
														"nodeType": "Return",
														"src": "14708:79:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2319,
										"nodeType": "StructuredDocumentation",
										"src": "14399:144:5",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14557:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14572:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "14564:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14564:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14588:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "14579:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1341",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2322,
														"name": "Rounding",
														"nameLocations": [
															"14579:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1341,
														"src": "14579:8:5"
													},
													"referencedDeclaration": 1341,
													"src": "14579:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1341",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14563:34:5"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "14621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14620:9:5"
									},
									"scope": 2358,
									"src": "14548:256:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2359,
							"src": "203:14603:5",
							"usedErrors": []
						}
					],
					"src": "103:14704:5"
				},
				"id": 5
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							2421
						]
					},
					"id": 2422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2421,
							"linearizedBaseContracts": [
								2421
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "67:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 2370,
									"name": "PairCreated",
									"nameLocation": "97:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "134:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "118:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "166:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "150:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "190:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "182:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "204:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:109:6"
									},
									"src": "91:127:6"
								},
								{
									"functionSelector": "017e7e58",
									"id": 2375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "233:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:2:6"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "264:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:9:6"
									},
									"scope": 2421,
									"src": "224:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 2380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "288:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:6"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "325:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:6"
									},
									"scope": 2421,
									"src": "279:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 2389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "349:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "365:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "357:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "381:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "373:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:32:6"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "444:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "436:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:14:6"
									},
									"scope": 2421,
									"src": "340:110:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 2396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "465:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "474:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:9:6"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "514:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "506:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:14:6"
									},
									"scope": 2421,
									"src": "456:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 2401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "535:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:2:6"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "575:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:9:6"
									},
									"scope": 2421,
									"src": "526:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 2410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "599:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "618:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "610:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "634:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "626:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:32:6"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "684:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "676:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:14:6"
									},
									"scope": 2421,
									"src": "590:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 2415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "705:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "714:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:9:6"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:0:6"
									},
									"scope": 2421,
									"src": "696:36:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 2420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "747:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "762:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:9:6"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:6"
									},
									"scope": 2421,
									"src": "738:42:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2422,
							"src": "57:725:6",
							"usedErrors": []
						}
					],
					"src": "32:750:6"
				},
				"id": 6
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							2663
						]
					},
					"id": 2664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2663,
							"linearizedBaseContracts": [
								2663
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "67:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2431,
									"name": "Approval",
									"nameLocation": "94:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "128:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "112:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "159:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "143:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "176:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:93:7"
									},
									"src": "88:108:7"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2439,
									"name": "Transfer",
									"nameLocation": "207:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "232:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "216:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "254:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "238:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "266:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "258:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:57:7"
									},
									"src": "201:72:7"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "288:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:7"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "318:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "318:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:15:7"
									},
									"scope": 2663,
									"src": "279:54:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:2:7"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "380:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:15:7"
									},
									"scope": 2663,
									"src": "339:56:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 2454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "410:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:2:7"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "444:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2451,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "444:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:7:7"
									},
									"scope": 2663,
									"src": "401:50:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "466:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:2:7"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "503:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:9:7"
									},
									"scope": 2663,
									"src": "457:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "527:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:15:7"
									},
									"returnParameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "575:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:9:7"
									},
									"scope": 2663,
									"src": "518:66:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "599:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "617:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "609:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "632:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "624:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:32:7"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "688:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:9:7"
									},
									"scope": 2663,
									"src": "590:107:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 2484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "712:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "728:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "720:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "745:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "737:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:32:7"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "770:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:6:7"
									},
									"scope": 2663,
									"src": "703:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "791:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "808:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "800:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "820:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "812:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:27:7"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "845:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:7"
									},
									"scope": 2663,
									"src": "782:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "866:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "888:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "918:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "910:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "938:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "930:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:71:7"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "968:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "968:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:6:7"
									},
									"scope": 2663,
									"src": "857:117:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 2509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "989:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:7"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1031:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:9:7"
									},
									"scope": 2663,
									"src": "980:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 2514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "1055:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:2:7"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "1096:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2511,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:9:7"
									},
									"scope": 2663,
									"src": "1046:59:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 2521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1120:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1135:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "1127:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:15:7"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "1165:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:9:7"
									},
									"scope": 2663,
									"src": "1111:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 2538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1189:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1213:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1205:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1228:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1261:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1253:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1284:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1276:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1308:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1302:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1302:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1327:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1319:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1346:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "1338:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:158:7"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:0:7"
									},
									"scope": 2663,
									"src": "1180:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 2546,
									"name": "Mint",
									"nameLocation": "1375:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1396:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "1380:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1412:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "1404:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1429:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "1421:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:58:7"
									},
									"src": "1369:69:7"
								},
								{
									"anonymous": false,
									"eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
									"id": 2556,
									"name": "Burn",
									"nameLocation": "1449:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1479:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "1463:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1503:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "1495:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1528:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "1520:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1561:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "1545:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:116:7"
									},
									"src": "1443:127:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
									"id": 2570,
									"name": "Swap",
									"nameLocation": "1581:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1611:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "1595:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2560,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1635:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "1627:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1662:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "1654:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1689:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "1681:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1717:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "1709:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1753:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "1737:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:176:7"
									},
									"src": "1575:187:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
									"id": 2576,
									"name": "Sync",
									"nameLocation": "1773:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1786:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "1778:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2571,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2574,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1804:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "1796:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2573,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:36:7"
									},
									"src": "1767:47:7"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 2581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1829:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1846:2:7"
									},
									"returnParameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "1872:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:9:7"
									},
									"scope": 2663,
									"src": "1820:61:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 2586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1896:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:7"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "1929:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:9:7"
									},
									"scope": 2663,
									"src": "1887:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 2591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1953:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:2:7"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "1985:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:9:7"
									},
									"scope": 2663,
									"src": "1944:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 2596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "2009:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2015:2:7"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2041:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:9:7"
									},
									"scope": 2663,
									"src": "2000:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 2605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "2065:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:2:7"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "2147:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "2139:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2598,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "2177:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "2169:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2600,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "2206:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "2199:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2602,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2199:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2125:109:7"
									},
									"scope": 2663,
									"src": "2056:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 2610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "2250:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2270:2:7"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "2296:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2296:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:9:7"
									},
									"scope": 2663,
									"src": "2241:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 2615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "2320:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:7"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "2366:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2365:9:7"
									},
									"scope": 2663,
									"src": "2311:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 2620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2390:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2395:2:7"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "2421:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:9:7"
									},
									"scope": 2663,
									"src": "2381:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 2627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2445:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2458:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2450:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2449:12:7"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2488:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2480:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:19:7"
									},
									"scope": 2663,
									"src": "2436:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 2636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2514:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2527:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "2519:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:12:7"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2573:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "2565:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "2582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:34:7"
									},
									"scope": 2663,
									"src": "2505:94:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 2647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2614:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2636:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "2628:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2664:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "2656:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2692:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "2684:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2719:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "2704:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2704:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:111:7"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2738:0:7"
									},
									"scope": 2663,
									"src": "2605:134:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 2652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2754:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2767:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "2759:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:12:7"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2779:0:7"
									},
									"scope": 2663,
									"src": "2745:35:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 2655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2795:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2799:2:7"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2810:0:7"
									},
									"scope": 2663,
									"src": "2786:25:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 2662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2826:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "2837:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "2846:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2836:18:7"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2863:0:7"
									},
									"scope": 2663,
									"src": "2817:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2664,
							"src": "57:2809:7",
							"usedErrors": []
						}
					],
					"src": "32:2834:7"
				},
				"id": 7
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2971
						]
					},
					"id": 2972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2971,
							"linearizedBaseContracts": [
								2971
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "67:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "101:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:2:8"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "134:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:9:8"
									},
									"scope": 2971,
									"src": "92:51:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "158:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:8"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "188:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:9:8"
									},
									"scope": 2971,
									"src": "149:48:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 2700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "212:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "242:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "234:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "266:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "258:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "290:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "282:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "322:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "314:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "354:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "346:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "382:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "374:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "410:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "402:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "430:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "422:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:220:8"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "500:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "492:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "529:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "521:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "558:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "550:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:99:8"
									},
									"scope": 2971,
									"src": "203:375:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 2721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "593:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "626:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "618:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "649:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "641:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "685:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "677:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "717:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "709:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "747:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "739:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "767:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "759:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:173:8"
									},
									"returnParameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "853:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "845:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "886:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "878:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "917:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "909:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:105:8"
									},
									"scope": 2971,
									"src": "584:353:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 2742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "952:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "985:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "977:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1009:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1001:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1033:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1025:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1060:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1052:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1088:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1080:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1116:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1108:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1136:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1128:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:183:8"
									},
									"returnParameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1177:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1169:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1194:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1186:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:34:8"
									},
									"scope": 2971,
									"src": "943:260:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 2761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1218:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1277:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1269:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1304:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1296:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1336:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1328:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1366:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1358:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1386:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1378:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:164:8"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1427:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1419:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1448:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1440:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:40:8"
									},
									"scope": 2971,
									"src": "1209:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1474:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1517:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1509:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1541:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1533:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1565:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1557:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1592:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1584:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1620:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1612:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1648:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1640:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1668:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1660:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1660:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1691:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1686:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1686:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1717:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1711:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2778,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1711:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1736:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1728:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2780,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1755:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1747:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:263:8"
									},
									"returnParameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1789:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1781:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1806:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1798:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:34:8"
									},
									"scope": 2971,
									"src": "1465:350:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 2817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1830:28:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1876:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "1868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1899:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "1891:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1926:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "1918:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1958:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "1950:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1988:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "1980:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2008:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2000:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "2031:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2026:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2026:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2057:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2051:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2805,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2051:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2076:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2068:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2095:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2087:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2809,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:244:8"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "2129:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2121:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "2150:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "2142:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:40:8"
									},
									"scope": 2971,
									"src": "1821:340:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "2176:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2218:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "2210:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2244:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "2236:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2285:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "2266:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2822,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2266:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2823,
													"nodeType": "ArrayTypeName",
													"src": "2266:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2307:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "2299:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2327:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "2319:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:141:8"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2377:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "2360:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2830,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2360:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2831,
													"nodeType": "ArrayTypeName",
													"src": "2360:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:26:8"
									},
									"scope": 2971,
									"src": "2167:219:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2401:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2443:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2435:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2470:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2462:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2510:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2491:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2839,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2491:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2840,
													"nodeType": "ArrayTypeName",
													"src": "2491:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2532:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2524:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2552:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2544:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:141:8"
									},
									"returnParameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2602:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2585:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2847,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2585:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2848,
													"nodeType": "ArrayTypeName",
													"src": "2585:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:26:8"
									},
									"scope": 2971,
									"src": "2392:219:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2626:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2665:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "2657:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2706:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "2687:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2854,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2687:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2855,
													"nodeType": "ArrayTypeName",
													"src": "2687:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2728:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "2720:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2748:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "2740:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:115:8"
									},
									"returnParameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2806:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "2789:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2862,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2789:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2863,
													"nodeType": "ArrayTypeName",
													"src": "2789:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:26:8"
									},
									"scope": 2971,
									"src": "2617:198:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 2883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2830:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2869:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2861:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2896:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2888:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2936:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2917:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2871,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2917:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2872,
													"nodeType": "ArrayTypeName",
													"src": "2917:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2958:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2950:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2950:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2978:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2970:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2851:141:8"
									},
									"returnParameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3028:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "3011:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3011:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2880,
													"nodeType": "ArrayTypeName",
													"src": "3011:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3010:26:8"
									},
									"scope": 2971,
									"src": "2821:216:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "3052:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3091:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "3083:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3117:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "3109:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3109:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3158:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "3139:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2888,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3139:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2889,
													"nodeType": "ArrayTypeName",
													"src": "3139:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3180:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "3172:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3200:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "3192:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3192:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:141:8"
									},
									"returnParameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3250:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2900,
												"src": "3233:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2896,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3233:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2897,
													"nodeType": "ArrayTypeName",
													"src": "3233:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:26:8"
									},
									"scope": 2971,
									"src": "3043:216:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 2915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "3274:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3313:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3305:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3351:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3332:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2903,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3332:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2904,
													"nodeType": "ArrayTypeName",
													"src": "3332:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3373:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3365:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3393:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3385:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3295:112:8"
									},
									"returnParameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3451:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3434:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2911,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3434:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2912,
													"nodeType": "ArrayTypeName",
													"src": "3434:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:26:8"
									},
									"scope": 2971,
									"src": "3265:195:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3475:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3498:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "3490:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3523:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "3515:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3549:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "3541:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:83:8"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3595:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "3587:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3586:17:8"
									},
									"scope": 2971,
									"src": "3466:138:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3619:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3649:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "3641:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3675:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "3667:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3702:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "3694:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3631:87:8"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3750:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "3742:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3741:19:8"
									},
									"scope": 2971,
									"src": "3610:151:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3776:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3805:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "3797:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3832:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "3824:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3859:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "3851:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:88:8"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3907:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "3899:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:18:8"
									},
									"scope": 2971,
									"src": "3767:150:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3932:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3954:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "3946:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3983:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "3964:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2951,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3964:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2952,
													"nodeType": "ArrayTypeName",
													"src": "3964:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:43:8"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4053:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "4036:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2955,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4036:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2956,
													"nodeType": "ArrayTypeName",
													"src": "4036:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4035:26:8"
									},
									"scope": 2971,
									"src": "3923:139:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "4077:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4098:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "4090:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4090:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4128:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "4109:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2962,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4109:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2963,
													"nodeType": "ArrayTypeName",
													"src": "4109:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:44:8"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4198:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "4181:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2966,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4181:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2967,
													"nodeType": "ArrayTypeName",
													"src": "4181:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4180:26:8"
									},
									"scope": 2971,
									"src": "4068:139:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2972,
							"src": "57:4152:8",
							"usedErrors": []
						}
					],
					"src": "32:4177:8"
				},
				"id": 8
			},
			"code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2971
						],
						"IUniswapV2Router02": [
							3059
						]
					},
					"id": 3060,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "code/contract/sol/non-native/uniswap/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3060,
							"sourceUnit": 2972,
							"src": "56:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2975,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"124:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2971,
										"src": "124:18:9"
									},
									"id": 2976,
									"nodeType": "InheritanceSpecifier",
									"src": "124:18:9"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3059,
							"linearizedBaseContracts": [
								3059,
								2971
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "102:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "158:47:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "223:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "215:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "246:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "238:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "273:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "265:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "305:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "297:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "335:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "327:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "355:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "347:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:164:9"
									},
									"returnParameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "396:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "388:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:19:9"
									},
									"scope": 3059,
									"src": "149:258:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 3018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "422:57:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "497:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "489:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "520:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "512:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "547:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "539:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "579:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "571:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "609:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "601:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "629:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "621:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3007,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "652:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "647:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "678:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "672:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3008,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "697:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "689:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3010,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "716:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "708:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3012,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:244:9"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "750:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "742:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:19:9"
									},
									"scope": 3059,
									"src": "413:348:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 3032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "776:53:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "847:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "839:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "873:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "865:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "914:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "895:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3023,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3024,
													"nodeType": "ArrayTypeName",
													"src": "895:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "936:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "928:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "956:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "948:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:141:9"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:0:9"
									},
									"scope": 3059,
									"src": "767:213:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 3044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "995:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1063:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "1055:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1104:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "1085:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3035,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1085:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3036,
													"nodeType": "ArrayTypeName",
													"src": "1085:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1126:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "1118:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1146:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "1138:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:115:9"
									},
									"returnParameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:9"
									},
									"scope": 3059,
									"src": "986:192:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 3058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1193:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1261:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "1253:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1287:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "1279:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1328:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "1309:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3049,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1309:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3050,
													"nodeType": "ArrayTypeName",
													"src": "1309:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1350:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "1342:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1370:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "1362:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:141:9"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:0:9"
									},
									"scope": 3059,
									"src": "1184:210:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3060,
							"src": "92:1304:9",
							"usedErrors": []
						}
					],
					"src": "32:1364:9"
				},
				"id": 9
			}
		}
	}
}