{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D02EBF4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7D02EBF4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8444B813 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA7E7C9F9 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE51356E8 EQ PUSH2 0x1DD JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x2833D1F0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3E60D8E0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4B602C6D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x58633635 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x21F DUP4 DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x238 DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x251 DUP4 DUP4 PUSH2 0x41C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x261 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x26B DUP4 DUP4 PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x285 DUP4 DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x295 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x29F DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x2B9 DUP4 DUP4 PUSH2 0x737 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x2D3 DUP4 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x342 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x339 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39B PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH1 0xA PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x483 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48E PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x496 PUSH2 0xA39 JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x4DD DUP12 DUP3 PUSH2 0x664 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E9 DUP3 DUP12 PUSH2 0x737 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x504 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x563 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55A SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BC PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH1 0x12 DUP4 PUSH1 0xFF AND EQ PUSH2 0x5F6 JUMPI PUSH2 0x5E2 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x5EB DUP8 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0xA PUSH2 0x60C SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP6 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x63F SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66C PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x6CB JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP5 DUP7 PUSH2 0x928 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73F PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x79E JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x795 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xFF AND SUB PUSH2 0x807 JUMPI DUP3 DUP5 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP PUSH2 0x83E JUMP JUMPDEST PUSH2 0x81C DUP4 DUP3 DUP7 PUSH2 0x928 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x8AF JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8BA PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0xA39 JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x909 DUP12 DUP12 PUSH2 0x664 JUMP JUMPDEST SWAP2 POP PUSH2 0x915 DUP3 DUP3 PUSH2 0x737 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x963 JUMPI DUP4 DUP3 DUP2 PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0xF25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xA32 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAB3 DUP3 PUSH2 0xA6A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0xA7B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE5 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF1 DUP3 DUP3 PUSH2 0xAAA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB09 DUP2 PUSH2 0xAF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB26 DUP2 PUSH2 0xB00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xA65 JUMP JUMPDEST JUMPDEST PUSH2 0xB85 PUSH1 0x40 PUSH2 0xADB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB95 DUP5 DUP3 DUP6 ADD PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDA DUP6 DUP3 DUP7 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBEB DUP6 DUP3 DUP7 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFE DUP2 PUSH2 0xAF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC0D DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xC29 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xBF5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC3C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC04 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC72 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC81 DUP5 DUP3 DUP6 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA0 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCAF DUP6 DUP3 DUP7 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC0 DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCEE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xCFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD3C DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD47 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0xD02 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xDBC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xD98 JUMPI PUSH2 0xD97 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xDA7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xDB5 DUP6 PUSH2 0xD65 JUMP JUMPDEST SWAP5 POP PUSH2 0xD7C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDD5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST DUP2 PUSH2 0xDE3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDF9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE03 JUMPI PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE91 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0xD02 JUMP JUMPDEST JUMPDEST POP PUSH2 0xE91 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE67 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xE62 JUMPI PUSH2 0xE61 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xE74 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xD72 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xE8B JUMPI PUSH2 0xE8A PUSH2 0xD02 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAE DUP4 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP PUSH2 0xEDB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF07 DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xD02 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6A DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0xF25 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF90 DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9B DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFB3 JUMPI PUSH2 0xFB2 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6174683A206D756C446976206F766572666C6F770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1000 PUSH1 0x15 DUP4 PUSH2 0xFB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x100B DUP3 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x102F DUP2 PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP7 0xE5 GASLIMIT 0xEE 0xC2 0x22 0xDF SHR 0x4E 0x25 0xEA 0xCD DUP8 0x4C 0xD9 PUSH30 0x2E6DBA3E0B87736F93CFB84076ED2864736F6C6343000813003300000000 ",
			"sourceMap": "207:6129:1:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@add_110": {
					"entryPoint": 601,
					"id": 110,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@add__384": {
					"entryPoint": 1276,
					"id": 384,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@asEther_195": {
					"entryPoint": 551,
					"id": 195,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@asEther__729": {
					"entryPoint": 915,
					"id": 729,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@asNewDecimals_181": {
					"entryPoint": 627,
					"id": 181,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@asNewDecimals__669": {
					"entryPoint": 1460,
					"id": 669,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@div_164": {
					"entryPoint": 653,
					"id": 164,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@div__587": {
					"entryPoint": 1636,
					"id": 587,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@mulDiv_1102": {
					"entryPoint": 2344,
					"id": 1102,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"@mul_146": {
					"entryPoint": 679,
					"id": 146,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@mul__521": {
					"entryPoint": 1847,
					"id": 521,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@scale_74": {
					"entryPoint": 705,
					"id": 74,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@scale__262": {
					"entryPoint": 2120,
					"id": 262,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@slice_92": {
					"entryPoint": 575,
					"id": 92,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@slice__329": {
					"entryPoint": 1052,
					"id": 329,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@sub_128": {
					"entryPoint": 525,
					"id": 128,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@sub__439": {
					"entryPoint": 731,
					"id": 439,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_struct$_FixedPointValue_$6_memory_ptr": {
					"entryPoint": 2917,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256": {
					"entryPoint": 2839,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint8": {
					"entryPoint": 2896,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr": {
					"entryPoint": 3165,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr": {
					"entryPoint": 2997,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8": {
					"entryPoint": 3210,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack": {
					"entryPoint": 4083,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack": {
					"entryPoint": 3091,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint256_to_t_uint256": {
					"entryPoint": 3061,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint8_to_t_uint8": {
					"entryPoint": 3076,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint8_to_t_uint8_fromStack": {
					"entryPoint": 3274,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed": {
					"entryPoint": 4118,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed": {
					"entryPoint": 3138,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed": {
					"entryPoint": 3289,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"allocate_memory": {
					"entryPoint": 2779,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": 2646,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
					"entryPoint": 4025,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_add_t_uint256": {
					"entryPoint": 3973,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
					"entryPoint": 3924,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_helper": {
					"entryPoint": 3442,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 2
				},
				"checked_exp_t_uint256_t_uint8": {
					"entryPoint": 3736,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_unsigned": {
					"entryPoint": 3525,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 3811,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_sub_t_uint256": {
					"entryPoint": 3377,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 2806,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint8": {
					"entryPoint": 2860,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"finalize_allocation": {
					"entryPoint": 2730,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"panic_error_0x11": {
					"entryPoint": 3330,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
					"entryPoint": 3877,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x41": {
					"entryPoint": 2683,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
					"entryPoint": 2661,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 2656,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"round_up_to_mul_of_32": {
					"entryPoint": 2666,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"shift_right_1_unsigned": {
					"entryPoint": 3429,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851": {
					"entryPoint": 4042,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 2816,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint8": {
					"entryPoint": 2873,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:10599:3",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:3",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:3"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:3"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:3",
										"type": ""
									}
								],
								"src": "7:75:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:3",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:3"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:3",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:3"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "423:28:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "440:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "443:1:3",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "433:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "433:12:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "433:12:3"
										}
									]
								},
								"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
								"nodeType": "YulFunctionDefinition",
								"src": "334:117:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "505:54:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "515:38:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "533:5:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "540:2:3",
																"type": "",
																"value": "31"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "529:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "529:14:3"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "549:2:3",
																"type": "",
																"value": "31"
															}
														],
														"functionName": {
															"name": "not",
															"nodeType": "YulIdentifier",
															"src": "545:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "545:7:3"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "525:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "525:28:3"
											},
											"variableNames": [
												{
													"name": "result",
													"nodeType": "YulIdentifier",
													"src": "515:6:3"
												}
											]
										}
									]
								},
								"name": "round_up_to_mul_of_32",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "488:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "result",
										"nodeType": "YulTypedName",
										"src": "498:6:3",
										"type": ""
									}
								],
								"src": "457:102:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "593:152:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "610:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "613:77:3",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "603:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "603:88:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "603:88:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "707:1:3",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "710:4:3",
														"type": "",
														"value": "0x41"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "700:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "700:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "700:15:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "731:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "734:4:3",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "724:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "724:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "724:15:3"
										}
									]
								},
								"name": "panic_error_0x41",
								"nodeType": "YulFunctionDefinition",
								"src": "565:180:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "794:238:3",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "804:58:3",
											"value": {
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "826:6:3"
													},
													{
														"arguments": [
															{
																"name": "size",
																"nodeType": "YulIdentifier",
																"src": "856:4:3"
															}
														],
														"functionName": {
															"name": "round_up_to_mul_of_32",
															"nodeType": "YulIdentifier",
															"src": "834:21:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "834:27:3"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "822:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "822:40:3"
											},
											"variables": [
												{
													"name": "newFreePtr",
													"nodeType": "YulTypedName",
													"src": "808:10:3",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "973:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x41",
																"nodeType": "YulIdentifier",
																"src": "975:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "975:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "975:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "newFreePtr",
																"nodeType": "YulIdentifier",
																"src": "916:10:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "928:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "913:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "913:34:3"
													},
													{
														"arguments": [
															{
																"name": "newFreePtr",
																"nodeType": "YulIdentifier",
																"src": "952:10:3"
															},
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "964:6:3"
															}
														],
														"functionName": {
															"name": "lt",
															"nodeType": "YulIdentifier",
															"src": "949:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "949:22:3"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "910:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "910:62:3"
											},
											"nodeType": "YulIf",
											"src": "907:88:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1011:2:3",
														"type": "",
														"value": "64"
													},
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "1015:10:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1004:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1004:22:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1004:22:3"
										}
									]
								},
								"name": "finalize_allocation",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "780:6:3",
										"type": ""
									},
									{
										"name": "size",
										"nodeType": "YulTypedName",
										"src": "788:4:3",
										"type": ""
									}
								],
								"src": "751:281:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1079:88:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1089:30:3",
											"value": {
												"arguments": [],
												"functionName": {
													"name": "allocate_unbounded",
													"nodeType": "YulIdentifier",
													"src": "1099:18:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1099:20:3"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "1089:6:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "1148:6:3"
													},
													{
														"name": "size",
														"nodeType": "YulIdentifier",
														"src": "1156:4:3"
													}
												],
												"functionName": {
													"name": "finalize_allocation",
													"nodeType": "YulIdentifier",
													"src": "1128:19:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1128:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1128:33:3"
										}
									]
								},
								"name": "allocate_memory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "size",
										"nodeType": "YulTypedName",
										"src": "1063:4:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1072:6:3",
										"type": ""
									}
								],
								"src": "1038:129:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1262:28:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1279:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1282:1:3",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1272:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1272:12:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1272:12:3"
										}
									]
								},
								"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
								"nodeType": "YulFunctionDefinition",
								"src": "1173:117:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1341:32:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1351:16:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1362:5:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1351:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1323:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1333:7:3",
										"type": ""
									}
								],
								"src": "1296:77:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1422:79:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1479:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1488:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1491:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1481:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1481:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1481:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1445:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1470:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1452:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1452:24:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1442:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1442:35:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1435:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1435:43:3"
											},
											"nodeType": "YulIf",
											"src": "1432:63:3"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1415:5:3",
										"type": ""
									}
								],
								"src": "1379:122:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1559:87:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1569:29:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1591:6:3"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "1578:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1578:20:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1569:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1634:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1607:26:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1607:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1607:33:3"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "1537:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "1545:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1553:5:3",
										"type": ""
									}
								],
								"src": "1507:139:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1695:43:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1705:27:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1720:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1727:4:3",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1716:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1716:16:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1705:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1677:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1687:7:3",
										"type": ""
									}
								],
								"src": "1652:86:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1785:77:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1840:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1849:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1852:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1842:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1842:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1842:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1808:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1815:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:22:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1805:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1805:33:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1798:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1798:41:3"
											},
											"nodeType": "YulIf",
											"src": "1795:61:3"
										}
									]
								},
								"name": "validator_revert_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1778:5:3",
										"type": ""
									}
								],
								"src": "1744:118:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1918:85:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1928:29:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1950:6:3"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "1937:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1937:20:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1928:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1991:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "1966:24:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1966:31:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1966:31:3"
										}
									]
								},
								"name": "abi_decode_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "1896:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "1904:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1912:5:3",
										"type": ""
									}
								],
								"src": "1868:135:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2124:497:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2168:83:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																"nodeType": "YulIdentifier",
																"src": "2170:77:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2170:79:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2170:79:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "2145:3:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2150:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2141:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2141:19:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2162:4:3",
														"type": "",
														"value": "0x40"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2137:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2137:30:3"
											},
											"nodeType": "YulIf",
											"src": "2134:117:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2260:30:3",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2285:4:3",
														"type": "",
														"value": "0x40"
													}
												],
												"functionName": {
													"name": "allocate_memory",
													"nodeType": "YulIdentifier",
													"src": "2269:15:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2269:21:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2260:5:3"
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "2300:151:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2336:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2350:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2340:6:3",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2376:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2383:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:16:3"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2426:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:22:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2390:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:49:3"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "2365:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2365:75:3"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2365:75:3"
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "2461:153:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2500:16:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2514:2:3",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2504:6:3",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2541:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:16:3"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2578:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2589:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:22:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2598:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2555:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:47:3"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "2530:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2530:73:3"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2530:73:3"
												}
											]
										}
									]
								},
								"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2099:9:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2110:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2118:5:3",
										"type": ""
									}
								],
								"src": "2039:582:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2770:452:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2817:83:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "2819:77:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2819:79:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2819:79:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2791:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2800:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2787:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2787:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2812:3:3",
														"type": "",
														"value": "128"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2783:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2783:33:3"
											},
											"nodeType": "YulIf",
											"src": "2780:120:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "2910:147:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2925:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2939:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2929:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2954:93:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3019:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3030:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3015:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3039:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
															"nodeType": "YulIdentifier",
															"src": "2964:50:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2964:83:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2954:6:3"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "3067:148:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3082:16:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3096:2:3",
														"type": "",
														"value": "64"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3086:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3112:93:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3177:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3188:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3197:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
															"nodeType": "YulIdentifier",
															"src": "3122:50:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3122:83:3"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "3112:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2732:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2743:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2755:6:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "2763:6:3",
										"type": ""
									}
								],
								"src": "2627:595:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3283:53:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3300:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3323:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "3305:17:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3305:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3293:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3293:37:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3293:37:3"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3271:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3278:3:3",
										"type": ""
									}
								],
								"src": "3228:108:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3393:51:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3410:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3431:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "3415:15:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3415:22:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3403:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3403:35:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3403:35:3"
										}
									]
								},
								"name": "abi_encode_t_uint8_to_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3381:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3388:3:3",
										"type": ""
									}
								],
								"src": "3342:102:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3632:392:3",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3642:26:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3658:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3663:4:3",
														"type": "",
														"value": "0x40"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3654:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3654:14:3"
											},
											"variables": [
												{
													"name": "tail",
													"nodeType": "YulTypedName",
													"src": "3646:4:3",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "3678:165:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3714:43:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3744:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3740:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:16:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "3734:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3734:23:3"
													},
													"variables": [
														{
															"name": "memberValue0",
															"nodeType": "YulTypedName",
															"src": "3718:12:3",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "memberValue0",
																"nodeType": "YulIdentifier",
																"src": "3804:12:3"
															},
															{
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3822:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3818:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:14:3"
															}
														],
														"functionName": {
															"name": "abi_encode_t_uint256_to_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "3770:33:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3770:63:3"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3770:63:3"
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "3853:164:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3892:43:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3922:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3929:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:16:3"
															}
														],
														"functionName": {
															"name": "mload",
															"nodeType": "YulIdentifier",
															"src": "3912:5:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3912:23:3"
													},
													"variables": [
														{
															"name": "memberValue0",
															"nodeType": "YulTypedName",
															"src": "3896:12:3",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "memberValue0",
																"nodeType": "YulIdentifier",
																"src": "3978:12:3"
															},
															{
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3996:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4001:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3992:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:14:3"
															}
														],
														"functionName": {
															"name": "abi_encode_t_uint8_to_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "3948:29:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3948:59:3"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3948:59:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3619:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3626:3:3",
										"type": ""
									}
								],
								"src": "3506:518:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4188:184:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4198:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4210:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4221:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4206:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4206:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4198:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4338:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4351:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4362:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4347:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4347:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4234:103:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4234:131:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4234:131:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4160:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4172:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4183:4:3",
										"type": ""
									}
								],
								"src": "4030:342:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4474:293:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4520:83:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4522:77:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4522:79:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4522:79:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4495:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4504:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4491:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4491:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4516:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4487:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4487:32:3"
											},
											"nodeType": "YulIf",
											"src": "4484:119:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "4613:147:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "4628:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4642:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "4632:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "4657:93:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4722:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4733:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4718:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4742:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
															"nodeType": "YulIdentifier",
															"src": "4667:50:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4667:83:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "4657:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4444:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4455:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4467:6:3",
										"type": ""
									}
								],
								"src": "4378:389:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4884:419:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4930:83:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4932:77:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "4932:79:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4932:79:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4905:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4914:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4901:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4901:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4926:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4897:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4897:32:3"
											},
											"nodeType": "YulIf",
											"src": "4894:119:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "5023:147:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5038:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5052:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "5042:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5067:93:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5132:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5143:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5128:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5128:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "5152:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
															"nodeType": "YulIdentifier",
															"src": "5077:50:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5077:83:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5067:6:3"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "5180:116:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5195:16:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5209:2:3",
														"type": "",
														"value": "64"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "5199:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5225:61:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5258:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5269:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "5278:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "5235:18:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5235:51:3"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "5225:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4846:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4857:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4869:6:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4877:6:3",
										"type": ""
									}
								],
								"src": "4773:530:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5370:51:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "5387:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5408:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "5392:15:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5392:22:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5380:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5380:35:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5380:35:3"
										}
									]
								},
								"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "5358:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "5365:3:3",
										"type": ""
									}
								],
								"src": "5309:112:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5545:198:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5555:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5567:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5578:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5563:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5563:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "5555:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5631:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5644:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5655:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5640:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5640:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5591:39:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5591:67:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5591:67:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "5708:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5721:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5732:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5717:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5717:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5668:39:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5668:68:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5668:68:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5509:9:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "5521:6:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "5529:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "5540:4:3",
										"type": ""
									}
								],
								"src": "5427:316:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5777:152:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5794:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5797:77:3",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5787:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5787:88:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5787:88:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5891:1:3",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5894:4:3",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5884:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5884:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5884:15:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5915:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5918:4:3",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "5908:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5908:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5908:15:3"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "5749:180:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5980:149:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5990:25:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "6013:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "5995:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5995:20:3"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "5990:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "6024:25:3",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "6047:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "6029:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6029:20:3"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "6024:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "6058:17:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "6070:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "6073:1:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6066:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6066:9:3"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "6058:4:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6100:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "6102:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "6102:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "6102:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "diff",
														"nodeType": "YulIdentifier",
														"src": "6091:4:3"
													},
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "6097:1:3"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "6088:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6088:11:3"
											},
											"nodeType": "YulIf",
											"src": "6085:37:3"
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "5966:1:3",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "5969:1:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "5975:4:3",
										"type": ""
									}
								],
								"src": "5935:194:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6186:51:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6196:34:3",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6221:1:3",
														"type": "",
														"value": "1"
													},
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6224:5:3"
													}
												],
												"functionName": {
													"name": "shr",
													"nodeType": "YulIdentifier",
													"src": "6217:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6217:13:3"
											},
											"variableNames": [
												{
													"name": "newValue",
													"nodeType": "YulIdentifier",
													"src": "6196:8:3"
												}
											]
										}
									]
								},
								"name": "shift_right_1_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6167:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "newValue",
										"nodeType": "YulTypedName",
										"src": "6177:8:3",
										"type": ""
									}
								],
								"src": "6135:102:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6316:775:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6326:15:3",
											"value": {
												"name": "_power",
												"nodeType": "YulIdentifier",
												"src": "6335:6:3"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "6326:5:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "6350:14:3",
											"value": {
												"name": "_base",
												"nodeType": "YulIdentifier",
												"src": "6359:5:3"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "6350:4:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6408:677:3",
												"statements": [
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "6496:22:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "6498:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:18:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6498:18:3"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6474:4:3"
																},
																{
																	"arguments": [
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "6484:3:3"
																		},
																		{
																			"name": "base",
																			"nodeType": "YulIdentifier",
																			"src": "6489:4:3"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nodeType": "YulIdentifier",
																		"src": "6480:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6480:14:3"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "6471:2:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "6471:24:3"
														},
														"nodeType": "YulIf",
														"src": "6468:50:3"
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "6563:419:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6943:25:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6956:5:3"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6963:4:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6952:16:3"
																	},
																	"variableNames": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "6943:5:3"
																		}
																	]
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6538:8:3"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6548:1:3",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "6534:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "6534:16:3"
														},
														"nodeType": "YulIf",
														"src": "6531:451:3"
													},
													{
														"nodeType": "YulAssignment",
														"src": "6995:23:3",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7007:4:3"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7013:4:3"
																}
															],
															"functionName": {
																"name": "mul",
																"nodeType": "YulIdentifier",
																"src": "7003:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7003:15:3"
														},
														"variableNames": [
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6995:4:3"
															}
														]
													},
													{
														"nodeType": "YulAssignment",
														"src": "7031:44:3",
														"value": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7066:8:3"
																}
															],
															"functionName": {
																"name": "shift_right_1_unsigned",
																"nodeType": "YulIdentifier",
																"src": "7043:22:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7043:32:3"
														},
														"variableNames": [
															{
																"name": "exponent",
																"nodeType": "YulIdentifier",
																"src": "7031:8:3"
															}
														]
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "6384:8:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6394:1:3",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "6381:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6381:15:3"
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
												"src": "6397:2:3",
												"statements": []
											},
											"pre": {
												"nodeType": "YulBlock",
												"src": "6377:3:3",
												"statements": []
											},
											"src": "6373:712:3"
										}
									]
								},
								"name": "checked_exp_helper",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "_power",
										"nodeType": "YulTypedName",
										"src": "6271:6:3",
										"type": ""
									},
									{
										"name": "_base",
										"nodeType": "YulTypedName",
										"src": "6279:5:3",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "6286:8:3",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "6296:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "6304:5:3",
										"type": ""
									},
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "6311:4:3",
										"type": ""
									}
								],
								"src": "6243:848:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7157:1013:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7352:20:3",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "7354:10:3",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7363:1:3",
															"type": "",
															"value": "1"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "7354:5:3"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "7365:5:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7342:8:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7335:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7335:16:3"
											},
											"nodeType": "YulIf",
											"src": "7332:40:3"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7397:20:3",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "7399:10:3",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7408:1:3",
															"type": "",
															"value": "0"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "7399:5:3"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "7410:5:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7391:4:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7384:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7384:12:3"
											},
											"nodeType": "YulIf",
											"src": "7381:36:3"
										},
										{
											"cases": [
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "7527:20:3",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "7529:10:3",
																"value": {
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7538:1:3",
																	"type": "",
																	"value": "1"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:3"
																	}
																]
															},
															{
																"nodeType": "YulLeave",
																"src": "7540:5:3"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "7520:27:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7525:1:3",
														"type": "",
														"value": "1"
													}
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "7571:176:3",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "7606:22:3",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "7608:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7608:18:3"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "7608:18:3"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "7591:8:3"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7601:3:3",
																			"type": "",
																			"value": "255"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "7588:2:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "7588:17:3"
																},
																"nodeType": "YulIf",
																"src": "7585:43:3"
															},
															{
																"nodeType": "YulAssignment",
																"src": "7641:25:3",
																"value": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7654:1:3",
																			"type": "",
																			"value": "2"
																		},
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "7657:8:3"
																		}
																	],
																	"functionName": {
																		"name": "exp",
																		"nodeType": "YulIdentifier",
																		"src": "7650:3:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "7650:16:3"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7641:5:3"
																	}
																]
															},
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "7697:22:3",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "7699:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7699:18:3"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "7699:18:3"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "7685:5:3"
																		},
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:3"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "7682:2:3"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "7682:14:3"
																},
																"nodeType": "YulIf",
																"src": "7679:40:3"
															},
															{
																"nodeType": "YulLeave",
																"src": "7732:5:3"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "7556:191:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7561:1:3",
														"type": "",
														"value": "2"
													}
												}
											],
											"expression": {
												"name": "base",
												"nodeType": "YulIdentifier",
												"src": "7477:4:3"
											},
											"nodeType": "YulSwitch",
											"src": "7470:277:3"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7879:123:3",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "7893:28:3",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7906:4:3"
																},
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7912:8:3"
																}
															],
															"functionName": {
																"name": "exp",
																"nodeType": "YulIdentifier",
																"src": "7902:3:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7902:19:3"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "7893:5:3"
															}
														]
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "7952:22:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "7954:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7954:18:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7954:18:3"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7940:5:3"
																},
																{
																	"name": "max",
																	"nodeType": "YulIdentifier",
																	"src": "7947:3:3"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "7937:2:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7937:14:3"
														},
														"nodeType": "YulIf",
														"src": "7934:40:3"
													},
													{
														"nodeType": "YulLeave",
														"src": "7987:5:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7782:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7788:2:3",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7779:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:12:3"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7796:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7806:2:3",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7793:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7793:16:3"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "7775:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "7775:35:3"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7831:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:3:3",
																		"type": "",
																		"value": "307"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7828:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:13:3"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7846:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7843:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:16:3"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "7824:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "7824:36:3"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "7759:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7759:111:3"
											},
											"nodeType": "YulIf",
											"src": "7756:246:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8012:57:3",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8046:1:3",
														"type": "",
														"value": "1"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "8049:4:3"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "8055:8:3"
													},
													{
														"name": "max",
														"nodeType": "YulIdentifier",
														"src": "8065:3:3"
													}
												],
												"functionName": {
													"name": "checked_exp_helper",
													"nodeType": "YulIdentifier",
													"src": "8027:18:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8027:42:3"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "8012:5:3"
												},
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "8019:4:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8108:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "8110:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "8110:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8110:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "8085:5:3"
													},
													{
														"arguments": [
															{
																"name": "max",
																"nodeType": "YulIdentifier",
																"src": "8096:3:3"
															},
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "8101:4:3"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "8092:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "8092:14:3"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "8082:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8082:25:3"
											},
											"nodeType": "YulIf",
											"src": "8079:51:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8139:25:3",
											"value": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "8152:5:3"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "8159:4:3"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "8148:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8148:16:3"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "8139:5:3"
												}
											]
										}
									]
								},
								"name": "checked_exp_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "7127:4:3",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "7133:8:3",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "7143:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "7151:5:3",
										"type": ""
									}
								],
								"src": "7097:1073:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8240:217:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8250:31:3",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "8276:4:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8258:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8258:23:3"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "8250:4:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8290:37:3",
											"value": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "8318:8:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "8302:15:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8302:25:3"
											},
											"variableNames": [
												{
													"name": "exponent",
													"nodeType": "YulIdentifier",
													"src": "8290:8:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8337:113:3",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "8367:4:3"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "8373:8:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8383:66:3",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "checked_exp_unsigned",
													"nodeType": "YulIdentifier",
													"src": "8346:20:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8346:104:3"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "8337:5:3"
												}
											]
										}
									]
								},
								"name": "checked_exp_t_uint256_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "8215:4:3",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "8221:8:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "8234:5:3",
										"type": ""
									}
								],
								"src": "8176:281:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8511:362:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8521:25:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8544:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8526:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8526:20:3"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8521:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8555:25:3",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8578:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8560:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8560:20:3"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8555:1:3"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "8589:28:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8612:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8615:1:3"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "8608:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8608:9:3"
											},
											"variables": [
												{
													"name": "product_raw",
													"nodeType": "YulTypedName",
													"src": "8593:11:3",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8626:41:3",
											"value": {
												"arguments": [
													{
														"name": "product_raw",
														"nodeType": "YulIdentifier",
														"src": "8655:11:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8637:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8637:30:3"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "8626:7:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8844:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "8846:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "8846:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8846:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8777:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8770:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8770:9:3"
															},
															{
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8800:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "8807:7:3"
																			},
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "8816:1:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8803:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:15:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8797:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:22:3"
															}
														],
														"functionName": {
															"name": "or",
															"nodeType": "YulIdentifier",
															"src": "8750:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "8750:83:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "8730:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8730:113:3"
											},
											"nodeType": "YulIf",
											"src": "8727:139:3"
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "8494:1:3",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "8497:1:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "8503:7:3",
										"type": ""
									}
								],
								"src": "8463:410:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8907:152:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8924:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8927:77:3",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "8917:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "8917:88:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8917:88:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9021:1:3",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9024:4:3",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "9014:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9014:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9014:15:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9045:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9048:4:3",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "9038:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9038:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9038:15:3"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "8879:180:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9107:143:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9117:25:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9140:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9122:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9122:20:3"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "9117:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9151:25:3",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9174:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9156:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9156:20:3"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "9151:1:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9198:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "9200:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "9200:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "9200:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9195:1:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "9188:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9188:9:3"
											},
											"nodeType": "YulIf",
											"src": "9185:35:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "9230:14:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9239:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9242:1:3"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "9235:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9235:9:3"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "9230:1:3"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "9096:1:3",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "9099:1:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "9105:1:3",
										"type": ""
									}
								],
								"src": "9065:185:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9300:147:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9310:25:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9333:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9315:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9315:20:3"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "9310:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9344:25:3",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9367:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9349:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9349:20:3"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "9344:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9378:16:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9389:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9392:1:3"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "9385:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9385:9:3"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "9378:3:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9418:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "9420:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "9420:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "9420:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9410:1:3"
													},
													{
														"name": "sum",
														"nodeType": "YulIdentifier",
														"src": "9413:3:3"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "9407:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9407:10:3"
											},
											"nodeType": "YulIf",
											"src": "9404:36:3"
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "9287:1:3",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "9290:1:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "9296:3:3",
										"type": ""
									}
								],
								"src": "9256:191:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9549:73:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "9566:3:3"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "9571:6:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "9559:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9559:19:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9559:19:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "9587:29:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "9606:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9611:4:3",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "9602:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9602:14:3"
											},
											"variableNames": [
												{
													"name": "updated_pos",
													"nodeType": "YulIdentifier",
													"src": "9587:11:3"
												}
											]
										}
									]
								},
								"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "9521:3:3",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "9526:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "updated_pos",
										"nodeType": "YulTypedName",
										"src": "9537:11:3",
										"type": ""
									}
								],
								"src": "9453:169:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9734:65:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "9756:6:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9764:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "9752:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "9752:14:3"
													},
													{
														"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "9768:23:3",
														"type": "",
														"value": "Math: mulDiv overflow"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "9745:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9745:47:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9745:47:3"
										}
									]
								},
								"name": "store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "9726:6:3",
										"type": ""
									}
								],
								"src": "9628:171:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9951:220:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9961:74:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "10027:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10032:2:3",
														"type": "",
														"value": "21"
													}
												],
												"functionName": {
													"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "9968:58:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "9968:67:3"
											},
											"variableNames": [
												{
													"name": "pos",
													"nodeType": "YulIdentifier",
													"src": "9961:3:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "10133:3:3"
													}
												],
												"functionName": {
													"name": "store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
													"nodeType": "YulIdentifier",
													"src": "10044:88:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "10044:93:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "10044:93:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "10146:19:3",
											"value": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "10157:3:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10162:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "10153:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "10153:12:3"
											},
											"variableNames": [
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "10146:3:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "9939:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "9947:3:3",
										"type": ""
									}
								],
								"src": "9805:366:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "10348:248:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "10358:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "10370:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "10381:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "10366:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "10366:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "10358:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "10405:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10416:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "10401:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "10401:17:3"
													},
													{
														"arguments": [
															{
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "10424:4:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "10430:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "10420:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "10420:20:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "10394:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "10394:47:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "10394:47:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "10450:139:3",
											"value": {
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "10584:4:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack",
													"nodeType": "YulIdentifier",
													"src": "10458:124:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "10458:131:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "10450:4:3"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "10328:9:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "10343:4:3",
										"type": ""
									}
								],
								"src": "10177:419:3"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct FixedPointValue\n    function abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // value\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // decimals\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct FixedPointValue -> struct FixedPointValue\n    function abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // decimals\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851(memPtr) {\n\n        mstore(add(memPtr, 0), \"Math: mulDiv overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D02EBF4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7D02EBF4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8444B813 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA7E7C9F9 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE51356E8 EQ PUSH2 0x1DD JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x2833D1F0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3E60D8E0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4B602C6D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x58633635 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x21F DUP4 DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x238 DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x251 DUP4 DUP4 PUSH2 0x41C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x261 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x26B DUP4 DUP4 PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x285 DUP4 DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x295 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x29F DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x2B9 DUP4 DUP4 PUSH2 0x737 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x2D3 DUP4 DUP4 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x342 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x339 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39B PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH1 0xA PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x483 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48E PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x496 PUSH2 0xA39 JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x4DD DUP12 DUP3 PUSH2 0x664 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E9 DUP3 DUP12 PUSH2 0x737 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x504 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x563 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55A SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5BC PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH1 0x12 DUP4 PUSH1 0xFF AND EQ PUSH2 0x5F6 JUMPI PUSH2 0x5E2 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x5EB DUP8 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0xA PUSH2 0x60C SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP6 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x63F SWAP2 SWAP1 PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66C PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x6CB JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP5 DUP7 PUSH2 0x928 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73F PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x79E JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x795 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xFF AND SUB PUSH2 0x807 JUMPI DUP3 DUP5 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP PUSH2 0x83E JUMP JUMPDEST PUSH2 0x81C DUP4 DUP3 DUP7 PUSH2 0x928 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xA39 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x8AF JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8BA PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0xA39 JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x909 DUP12 DUP12 PUSH2 0x664 JUMP JUMPDEST SWAP2 POP PUSH2 0x915 DUP3 DUP3 PUSH2 0x737 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x963 JUMPI DUP4 DUP3 DUP2 PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0xF25 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xA32 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99C SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAB3 DUP3 PUSH2 0xA6A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0xA7B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE5 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF1 DUP3 DUP3 PUSH2 0xAAA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB09 DUP2 PUSH2 0xAF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB26 DUP2 PUSH2 0xB00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xA65 JUMP JUMPDEST JUMPDEST PUSH2 0xB85 PUSH1 0x40 PUSH2 0xADB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB95 DUP5 DUP3 DUP6 ADD PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDA DUP6 DUP3 DUP7 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBEB DUP6 DUP3 DUP7 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFE DUP2 PUSH2 0xAF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC0D DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xC29 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xBF5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xC3C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xC04 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC72 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC81 DUP5 DUP3 DUP6 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA0 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCAF DUP6 DUP3 DUP7 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC0 DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xB2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCEE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xCFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD3C DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD47 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0xD02 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xDBC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xD98 JUMPI PUSH2 0xD97 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xDA7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xDB5 DUP6 PUSH2 0xD65 JUMP JUMPDEST SWAP5 POP PUSH2 0xD7C JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDD5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST DUP2 PUSH2 0xDE3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xE91 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDF9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE03 JUMPI PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE91 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xE2C JUMPI PUSH2 0xE2B PUSH2 0xD02 JUMP JUMPDEST JUMPDEST POP PUSH2 0xE91 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE67 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xE62 JUMPI PUSH2 0xE61 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xE74 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xD72 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xE8B JUMPI PUSH2 0xE8A PUSH2 0xD02 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAE DUP4 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP PUSH2 0xEDB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF07 DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xD02 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6A DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0xF25 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF90 DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9B DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFB3 JUMPI PUSH2 0xFB2 PUSH2 0xD02 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6174683A206D756C446976206F766572666C6F770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1000 PUSH1 0x15 DUP4 PUSH2 0xFB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x100B DUP3 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x102F DUP2 PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP7 0xE5 GASLIMIT 0xEE 0xC2 0x22 0xDF SHR 0x4E 0x25 0xEA 0xCD DUP8 0x4C 0xD9 PUSH30 0x2E6DBA3E0B87736F93CFB84076ED2864736F6C6343000813003300000000 ",
			"sourceMap": "207:6129:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1175:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1840:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1011:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1667:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1503:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;663:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1175:158;1269:22;;:::i;:::-;1310:16;1315:4;1321;1310;:16::i;:::-;1303:23;;1175:158;;;;:::o;1840:129::-;1908:22;;:::i;:::-;1949:13;1958:3;1949:8;:13::i;:::-;1942:20;;1840:129;;;:::o;843:162::-;939:22;;:::i;:::-;980:18;987:4;993;980:6;:18::i;:::-;973:25;;843:162;;;;:::o;1011:158::-;1105:22;;:::i;:::-;1146:16;1151:4;1157;1146;:16::i;:::-;1139:23;;1011:158;;;;:::o;1667:167::-;1757:22;;:::i;:::-;1798:29;1813:3;1818:8;1798:14;:29::i;:::-;1791:36;;1667:167;;;;:::o;1503:158::-;1597:22;;:::i;:::-;1638:16;1643:4;1649;1638;:16::i;:::-;1631:23;;1503:158;;;;:::o;1339:::-;1433:22;;:::i;:::-;1474:16;1479:4;1485;1474;:16::i;:::-;1467:23;;1339:158;;;;:::o;663:174::-;759:34;;:::i;:::-;812:18;819:4;825;812:6;:18::i;:::-;805:25;;663:174;;;;:::o;3617:460::-;3755:22;;:::i;:::-;3734:4;3740;442:15;467;504:4;:13;;;492:25;;539:4;:13;;;527:25;;579:9;566:22;;:9;:22;;;562:77;;618:9;629;597:42;;;;;;;;;;;;:::i;:::-;;;;;;;;562:77;3789:14:::1;3813::::0;3837::::1;3861::::0;3896:4:::1;:13;;;3885:24;;3928:4;:10;;;3919:19;;3957:4;:10;;;3948:19;;3995:6;3986;:15;;;;:::i;:::-;3977:24;;4018:52;;;;;;;;4042:6;4018:52;;;;4060:8;4018:52;;;;::::0;4011:59:::1;;;;;;432:225:::0;;3617:460;;;;;;:::o;5942:392::-;6010:22;;:::i;:::-;6044:21;6075:13;6098:14;6140:3;:12;;;6122:30;;6170:3;:9;;;6162:17;;6257:6;6245;6224:15;6220:2;:19;;;;:::i;:::-;6209:6;6200:5;:16;;;;:::i;:::-;:40;;;;:::i;:::-;6199:53;;;;:::i;:::-;6198:66;;;;:::i;:::-;6189:75;;6281:46;;;;;;;;6305:6;6281:46;;;;6323:2;6281:46;;;;;6274:53;;;;;5942:392;;;:::o;2553:592::-;2715:22;;:::i;:::-;2683:3;2688:16;442:15;467;504:4;:13;;;492:25;;539:4;:13;;;527:25;;579:9;566:22;;:9;:22;;;562:77;;618:9;629;597:42;;;;;;;;;;;;:::i;:::-;;;;;;;;562:77;2749:14:::1;2773:22:::0;2805:29:::1;;:::i;:::-;2844:28;;:::i;:::-;2893:3;:12;;;2882:23;;2936:8;2932:2;:12;;;;:::i;:::-;2915:29;;2962:69;;;;;;;;2995:14;2986:6;:23;;;;:::i;:::-;2962:69;;;;3021:8;2962:69;;;;::::0;2954:77:::1;;3050:16;3055:3;3060:5;3050:4;:16::i;:::-;3041:25;;3085:30;3090:6;3098:16;3085:4;:30::i;:::-;3076:39;;3132:6;3125:13;;;;;;432:225:::0;;2553:592;;;;;;:::o;3151:460::-;3289:22;;:::i;:::-;3268:4;3274;442:15;467;504:4;:13;;;492:25;;539:4;:13;;;527:25;;579:9;566:22;;:9;:22;;;562:77;;618:9;629;597:42;;;;;;;;;;;;:::i;:::-;;;;;;;;562:77;3323:14:::1;3347::::0;3371::::1;3395::::0;3430:4:::1;:13;;;3419:24;;3462:4;:10;;;3453:19;;3491:4;:10;;;3482:19;;3529:6;3520;:15;;;;:::i;:::-;3511:24;;3552:52;;;;;;;;3576:6;3552:52;;;;3594:8;3552:52;;;;::::0;3545:59:::1;;;;;;432:225:::0;;3151:460;;;;;;:::o;5351:585::-;5441:22;;:::i;:::-;5475:21;5506:13;5529:14;5571:3;:12;;;5553:30;;5601:3;:9;;;5593:17;;5643:2;5624:15;:21;;;5620:163;;5661:33;;:::i;:::-;5721:13;5730:3;5721:8;:13::i;:::-;5708:26;;5756:10;:16;;;5748:24;;5647:136;5620:163;5853:6;5839:8;5835:2;:12;;;;:::i;:::-;5823:6;5812;5803:5;:16;;;;:::i;:::-;:27;;;;:::i;:::-;5802:46;;;;:::i;:::-;5801:59;;;;:::i;:::-;5792:68;;5877:52;;;;;;;;5901:6;5877:52;;;;5919:8;5877:52;;;;;5870:59;;;;;5351:585;;;;:::o;4792:553::-;4930:22;;:::i;:::-;4909:4;4915;442:15;467;504:4;:13;;;492:25;;539:4;:13;;;527:25;;579:9;566:22;;:9;:22;;;562:77;;618:9;629;597:42;;;;;;;;;;;;:::i;:::-;;;;;;;;562:77;4964:14:::1;4988::::0;5012::::1;5036::::0;5060:22:::1;5103:4;:13;;;5092:24;;5135:4;:10;;;5126:19;;5164:4;:10;;;5155:19;;5205:8;5201:2;:12;;;;:::i;:::-;5184:29;;5232:37;5246:14;5262:6;5232;:13;;:37;;;;;:::i;:::-;5223:46;;5286:52;;;;;;;;5310:6;5286:52;;;;5328:8;5286:52;;;;::::0;5279:59:::1;;;;;;;432:225:::0;;4792:553;;;;;;:::o;4083:703::-;4221:22;;:::i;:::-;4200:4;4206;442:15;467;504:4;:13;;;492:25;;539:4;:13;;;527:25;;579:9;566:22;;:9;:22;;;562:77;;618:9;629;597:42;;;;;;;;;;;;:::i;:::-;;;;;;;;562:77;4255:14:::1;4279::::0;4303::::1;4327::::0;4351:22:::1;4394:4;:13;;;4383:24;;4426:4;:10;;;4417:19;;4455:4;:10;;;4446:19;;4496:8;4492:2;:12;;;;:::i;:::-;4475:29;;4530:1;4518:8;:13;;::::0;4514:141:::1;;4565:6;4556;:15;;;;:::i;:::-;4547:24;;4592:52;;;;;;;;4616:6;4592:52;;;;4634:8;4592:52;;;;::::0;4585:59:::1;;;;;;;;;4514:141;4673:37;4687:6;4695:14;4673:6;:13;;:37;;;;;:::i;:::-;4664:46;;4727:52;;;;;;;;4751:6;4727:52;;;;4769:8;4727:52;;;;::::0;4720:59:::1;;;;;;;649:1;432:225:::0;;4083:703;;;;;;:::o;1975:572::-;2115:34;;:::i;:::-;2094:4;2100;442:15;467;504:4;:13;;;492:25;;539:4;:13;;;527:25;;579:9;566:22;;:9;:22;;;562:77;;618:9;629;597:42;;;;;;;;;;;;:::i;:::-;;;;;;;;562:77;2161:14:::1;2185:22:::0;2217:29:::1;;:::i;:::-;2256:28;;:::i;:::-;2305:4;:13;;;2294:24;;2349:8;2345:2;:12;;;;:::i;:::-;2328:29;;2375:69;;;;;;;;2408:14;2399:6;:23;;;;:::i;:::-;2375:69;;;;2434:8;2375:69;;;;::::0;2367:77:::1;;2463:16;2468:4;2474;2463;:16::i;:::-;2454:25;;2498:19;2503:6;2511:5;2498:4;:19::i;:::-;2489:28;;2534:6;2527:13;;;;;;432:225:::0;;1975:572;;;;;;:::o;3689:4213:2:-;3771:14;4118:13;4190;4315:1;4311:6;4308:1;4305;4298:20;4351:1;4348;4344:9;4335:18;;4406:5;4402:2;4399:13;4391:5;4387:2;4383:14;4379:34;4370:43;;4270:157;4517:1;4508:5;:10;4504:368;;4846:11;4838:5;:19;;;;;:::i;:::-;;;4831:26;;;;;;4504:368;4996:5;4982:11;:19;4974:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5283:17;5418:11;5415:1;5412;5405:25;5392:38;;5546:5;5535:9;5532:20;5525:5;5521:32;5512:41;;5590:9;5583:5;5579:21;5570:30;;5921:12;5966:1;5952:11;5951:12;:16;5936:11;:32;5921:47;;6088:4;6075:11;6071:22;6056:37;;6180:4;6173:5;6169:16;6160:25;;6337:1;6330:4;6323;6320:1;6316:12;6312:23;6308:31;6300:39;;6436:4;6428:5;:12;6419:21;;;;6758:15;6796:1;6781:11;6777:1;:15;6776:21;6758:39;;7043:7;7029:11;:21;7025:1;:25;7014:36;;;;7112:7;7098:11;:21;7094:1;:25;7083:36;;;;7182:7;7168:11;:21;7164:1;:25;7153:36;;;;7252:7;7238:11;:21;7234:1;:25;7223:36;;;;7322:7;7308:11;:21;7304:1;:25;7293:36;;;;7393:7;7379:11;:21;7375:1;:25;7364:36;;;;7851:7;7843:5;:15;7834:24;;7872:13;;;;;3689:4213;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1296:77::-;1333:7;1362:5;1351:16;;1296:77;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:63;;1491:1;1488;1481:12;1432:63;1379:122;:::o;1507:139::-;1553:5;1591:6;1578:20;1569:29;;1607:33;1634:5;1607:33;:::i;:::-;1507:139;;;;:::o;1652:86::-;1687:7;1727:4;1720:5;1716:16;1705:27;;1652:86;;;:::o;1744:118::-;1815:22;1831:5;1815:22;:::i;:::-;1808:5;1805:33;1795:61;;1852:1;1849;1842:12;1795:61;1744:118;:::o;1868:135::-;1912:5;1950:6;1937:20;1928:29;;1966:31;1991:5;1966:31;:::i;:::-;1868:135;;;;:::o;2039:582::-;2118:5;2162:4;2150:9;2145:3;2141:19;2137:30;2134:117;;;2170:79;;:::i;:::-;2134:117;2269:21;2285:4;2269:21;:::i;:::-;2260:30;;2350:1;2390:49;2435:3;2426:6;2415:9;2411:22;2390:49;:::i;:::-;2383:4;2376:5;2372:16;2365:75;2300:151;2514:2;2555:47;2598:3;2589:6;2578:9;2574:22;2555:47;:::i;:::-;2548:4;2541:5;2537:16;2530:73;2461:153;2039:582;;;;:::o;2627:595::-;2755:6;2763;2812:3;2800:9;2791:7;2787:23;2783:33;2780:120;;;2819:79;;:::i;:::-;2780:120;2939:1;2964:83;3039:7;3030:6;3019:9;3015:22;2964:83;:::i;:::-;2954:93;;2910:147;3096:2;3122:83;3197:7;3188:6;3177:9;3173:22;3122:83;:::i;:::-;3112:93;;3067:148;2627:595;;;;;:::o;3228:108::-;3305:24;3323:5;3305:24;:::i;:::-;3300:3;3293:37;3228:108;;:::o;3342:102::-;3415:22;3431:5;3415:22;:::i;:::-;3410:3;3403:35;3342:102;;:::o;3506:518::-;3663:4;3658:3;3654:14;3751:4;3744:5;3740:16;3734:23;3770:63;3827:4;3822:3;3818:14;3804:12;3770:63;:::i;:::-;3678:165;3929:4;3922:5;3918:16;3912:23;3948:59;4001:4;3996:3;3992:14;3978:12;3948:59;:::i;:::-;3853:164;3632:392;3506:518;;:::o;4030:342::-;4183:4;4221:2;4210:9;4206:18;4198:26;;4234:131;4362:1;4351:9;4347:17;4338:6;4234:131;:::i;:::-;4030:342;;;;:::o;4378:389::-;4467:6;4516:2;4504:9;4495:7;4491:23;4487:32;4484:119;;;4522:79;;:::i;:::-;4484:119;4642:1;4667:83;4742:7;4733:6;4722:9;4718:22;4667:83;:::i;:::-;4657:93;;4613:147;4378:389;;;;:::o;4773:530::-;4869:6;4877;4926:2;4914:9;4905:7;4901:23;4897:32;4894:119;;;4932:79;;:::i;:::-;4894:119;5052:1;5077:83;5152:7;5143:6;5132:9;5128:22;5077:83;:::i;:::-;5067:93;;5023:147;5209:2;5235:51;5278:7;5269:6;5258:9;5254:22;5235:51;:::i;:::-;5225:61;;5180:116;4773:530;;;;;:::o;5309:112::-;5392:22;5408:5;5392:22;:::i;:::-;5387:3;5380:35;5309:112;;:::o;5427:316::-;5540:4;5578:2;5567:9;5563:18;5555:26;;5591:67;5655:1;5644:9;5640:17;5631:6;5591:67;:::i;:::-;5668:68;5732:2;5721:9;5717:18;5708:6;5668:68;:::i;:::-;5427:316;;;;;:::o;5749:180::-;5797:77;5794:1;5787:88;5894:4;5891:1;5884:15;5918:4;5915:1;5908:15;5935:194;5975:4;5995:20;6013:1;5995:20;:::i;:::-;5990:25;;6029:20;6047:1;6029:20;:::i;:::-;6024:25;;6073:1;6070;6066:9;6058:17;;6097:1;6091:4;6088:11;6085:37;;;6102:18;;:::i;:::-;6085:37;5935:194;;;;:::o;6135:102::-;6177:8;6224:5;6221:1;6217:13;6196:34;;6135:102;;;:::o;6243:848::-;6304:5;6311:4;6335:6;6326:15;;6359:5;6350:14;;6373:712;6394:1;6384:8;6381:15;6373:712;;;6489:4;6484:3;6480:14;6474:4;6471:24;6468:50;;;6498:18;;:::i;:::-;6468:50;6548:1;6538:8;6534:16;6531:451;;;6963:4;6956:5;6952:16;6943:25;;6531:451;7013:4;7007;7003:15;6995:23;;7043:32;7066:8;7043:32;:::i;:::-;7031:44;;6373:712;;;6243:848;;;;;;;:::o;7097:1073::-;7151:5;7342:8;7332:40;;7363:1;7354:10;;7365:5;;7332:40;7391:4;7381:36;;7408:1;7399:10;;7410:5;;7381:36;7477:4;7525:1;7520:27;;;;7561:1;7556:191;;;;7470:277;;7520:27;7538:1;7529:10;;7540:5;;;7556:191;7601:3;7591:8;7588:17;7585:43;;;7608:18;;:::i;:::-;7585:43;7657:8;7654:1;7650:16;7641:25;;7692:3;7685:5;7682:14;7679:40;;;7699:18;;:::i;:::-;7679:40;7732:5;;;7470:277;;7856:2;7846:8;7843:16;7837:3;7831:4;7828:13;7824:36;7806:2;7796:8;7793:16;7788:2;7782:4;7779:12;7775:35;7759:111;7756:246;;;7912:8;7906:4;7902:19;7893:28;;7947:3;7940:5;7937:14;7934:40;;;7954:18;;:::i;:::-;7934:40;7987:5;;7756:246;8027:42;8065:3;8055:8;8049:4;8046:1;8027:42;:::i;:::-;8012:57;;;;8101:4;8096:3;8092:14;8085:5;8082:25;8079:51;;;8110:18;;:::i;:::-;8079:51;8159:4;8152:5;8148:16;8139:25;;7097:1073;;;;;;:::o;8176:281::-;8234:5;8258:23;8276:4;8258:23;:::i;:::-;8250:31;;8302:25;8318:8;8302:25;:::i;:::-;8290:37;;8346:104;8383:66;8373:8;8367:4;8346:104;:::i;:::-;8337:113;;8176:281;;;;:::o;8463:410::-;8503:7;8526:20;8544:1;8526:20;:::i;:::-;8521:25;;8560:20;8578:1;8560:20;:::i;:::-;8555:25;;8615:1;8612;8608:9;8637:30;8655:11;8637:30;:::i;:::-;8626:41;;8816:1;8807:7;8803:15;8800:1;8797:22;8777:1;8770:9;8750:83;8727:139;;8846:18;;:::i;:::-;8727:139;8511:362;8463:410;;;;:::o;8879:180::-;8927:77;8924:1;8917:88;9024:4;9021:1;9014:15;9048:4;9045:1;9038:15;9065:185;9105:1;9122:20;9140:1;9122:20;:::i;:::-;9117:25;;9156:20;9174:1;9156:20;:::i;:::-;9151:25;;9195:1;9185:35;;9200:18;;:::i;:::-;9185:35;9242:1;9239;9235:9;9230:14;;9065:185;;;;:::o;9256:191::-;9296:3;9315:20;9333:1;9315:20;:::i;:::-;9310:25;;9349:20;9367:1;9349:20;:::i;:::-;9344:25;;9392:1;9389;9385:9;9378:16;;9413:3;9410:1;9407:10;9404:36;;;9420:18;;:::i;:::-;9404:36;9256:191;;;;:::o;9453:169::-;9537:11;9571:6;9566:3;9559:19;9611:4;9606:3;9602:14;9587:29;;9453:169;;;;:::o;9628:171::-;9768:23;9764:1;9756:6;9752:14;9745:47;9628:171;:::o;9805:366::-;9947:3;9968:67;10032:2;10027:3;9968:67;:::i;:::-;9961:74;;10044:93;10133:3;10044:93;:::i;:::-;10162:2;10157:3;10153:12;10146:19;;9805:366;;;:::o;10177:419::-;10343:4;10381:2;10370:9;10366:18;10358:26;;10430:9;10424:4;10420:20;10416:1;10405:9;10401:17;10394:47;10458:131;10584:4;10458:131;:::i;:::-;10450:139;;10177:419;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "840800",
				"executionCost": "877",
				"totalCost": "841677"
			},
			"external": {
				"add((uint256,uint8),(uint256,uint8))": "infinite",
				"asEther((uint256,uint8))": "infinite",
				"asNewDecimals((uint256,uint8),uint8)": "infinite",
				"div((uint256,uint8),(uint256,uint8))": "infinite",
				"mul((uint256,uint8),(uint256,uint8))": "infinite",
				"scale((uint256,uint8),(uint256,uint8))": "infinite",
				"slice((uint256,uint8),(uint256,uint8))": "infinite",
				"sub((uint256,uint8),(uint256,uint8))": "infinite"
			},
			"internal": {
				"add_(struct FixedPointValue memory,struct FixedPointValue memory)": "infinite",
				"asEther_(struct FixedPointValue memory)": "infinite",
				"asNewDecimals_(struct FixedPointValue memory,uint8)": "infinite",
				"div_(struct FixedPointValue memory,struct FixedPointValue memory)": "infinite",
				"mul_(struct FixedPointValue memory,struct FixedPointValue memory)": "infinite",
				"scale_(struct FixedPointValue memory,struct FixedPointValue memory)": "infinite",
				"slice_(struct FixedPointValue memory,struct FixedPointValue memory)": "infinite",
				"sub_(struct FixedPointValue memory,struct FixedPointValue memory)": "infinite"
			}
		},
		"methodIdentifiers": {
			"add((uint256,uint8),(uint256,uint8))": "58633635",
			"asEther((uint256,uint8))": "3e60d8e0",
			"asNewDecimals((uint256,uint8),uint8)": "7d02ebf4",
			"div((uint256,uint8),(uint256,uint8))": "8444b813",
			"mul((uint256,uint8),(uint256,uint8))": "a7e7c9f9",
			"scale((uint256,uint8),(uint256,uint8))": "e51356e8",
			"slice((uint256,uint8),(uint256,uint8))": "4b602c6d",
			"sub((uint256,uint8),(uint256,uint8))": "2833d1f0"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "uint8",
					"name": "decimals0",
					"type": "uint8"
				},
				{
					"internalType": "uint8",
					"name": "decimals1",
					"type": "uint8"
				}
			],
			"name": "IncompatibleDecimals",
			"type": "error"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num0",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num1",
					"type": "tuple"
				}
			],
			"name": "add",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num",
					"type": "tuple"
				}
			],
			"name": "asEther",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num",
					"type": "tuple"
				},
				{
					"internalType": "uint8",
					"name": "decimals",
					"type": "uint8"
				}
			],
			"name": "asNewDecimals",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num0",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num1",
					"type": "tuple"
				}
			],
			"name": "div",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num0",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num1",
					"type": "tuple"
				}
			],
			"name": "mul",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num0",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num1",
					"type": "tuple"
				}
			],
			"name": "scale",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "basisPoints",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num0",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num1",
					"type": "tuple"
				}
			],
			"name": "slice",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num0",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "num1",
					"type": "tuple"
				}
			],
			"name": "sub",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "value",
							"type": "uint256"
						},
						{
							"internalType": "uint8",
							"name": "decimals",
							"type": "uint8"
						}
					],
					"internalType": "struct FixedPointValue",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		}
	]
}