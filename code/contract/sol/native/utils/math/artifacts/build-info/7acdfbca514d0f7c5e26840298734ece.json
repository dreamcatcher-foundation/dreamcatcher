{
	"id": "7acdfbca514d0f7c5e26840298734ece",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"code/contract/sol/native/utils/math/FixedPointMath.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.19;\nimport { Math } from \"../../../non-native/openzeppelin/utils/math/Math.sol\";\nimport { FixedPointValue } from \"../../shared/FixedPointValue.sol\";\n\ninterface IFixedPointMath {\n    function scale(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory basisPoints);\n    function slice(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function add(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function sub(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function mul(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function div(FixedPointValue memory num0, FixedPointValue memory num1) external pure returns (FixedPointValue memory);\n    function asNewDecimals(FixedPointValue memory num, uint8 decimals) external pure returns (FixedPointValue memory);\n    function asEther(FixedPointValue memory num) external pure returns (FixedPointValue memory);\n}\n\ncontract FixedPointMath {\n    using Math for uint256;\n\n    error IncompatibleDecimals(uint8 decimals0, uint8 decimals1);\n\n    modifier onlyMatchingFixedPointValueType(FixedPointValue memory num0, FixedPointValue memory num1) {\n        uint8 decimals0;\n        uint8 decimals1;\n        decimals0 = num0.decimals;\n        decimals1 = num1.decimals;\n        if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1);\n        _;\n    }\n\n    function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {\n        uint8 decimals;\n        uint256 representation;\n        FixedPointValue memory result;\n        FixedPointValue memory scale;\n        decimals = num0.decimals;\n        representation = 10**decimals;\n        scale = FixedPointValue({value: 10_000 * representation, decimals: decimals});\n        result = div(num0, num1);\n        result = mul(result, scale);\n        return result;\n    }\n\n    function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 representation;\n        FixedPointValue memory result;\n        FixedPointValue memory scale;\n        decimals = num.decimals;\n        representation = 10**decimals;\n        scale = FixedPointValue({value: 10_000 * representation, decimals: decimals});\n        result = div(num, scale);\n        result = mul(result, sliceBasisPoints);\n        return result;\n    }\n\n    function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        result = value0 + value1;\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        result = value0 - value1;\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        uint256 representation;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        representation = 10**decimals;\n        if (decimals == 0) {\n            result = value0 * value1;\n            return FixedPointValue({value: result, decimals: decimals});\n        }\n        result = value0.mulDiv(value1, representation);\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {\n        uint8 decimals;\n        uint256 value0;\n        uint256 value1;\n        uint256 result;\n        uint256 representation;\n        decimals = num0.decimals;\n        value0 = num0.value;\n        value1 = num1.value;\n        representation = 10**decimals;\n        result = value0.mulDiv(representation, value1);\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {\n        uint8 currentDecimals;\n        uint256 value;\n        uint256 result;\n        currentDecimals = num.decimals;\n        value = num.value;\n        if (currentDecimals != 18) {\n            FixedPointValue memory numAsEther;\n            numAsEther = asEther(num);\n            value = numAsEther.value;\n        }\n        result = ((value * (10**18) / (10**18)) * (10**decimals)) / (10**18);\n        return FixedPointValue({value: result, decimals: decimals});\n    }\n\n    function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {\n        uint8 currentDecimals;\n        uint256 value;\n        uint256 result;\n        currentDecimals = num.decimals;\n        value = num.value;\n        result = ((value * (10**18) / (10**currentDecimals)) * (10**18)) / (10**18);\n        return FixedPointValue({value: result, decimals: 18});\n    }\n}"
			},
			"code/contract/sol/native/shared/FixedPointValue.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.19;\n\nstruct FixedPointValue {\n    uint256 value;\n    uint8 decimals;\n}"
			},
			"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"code/contract/sol/native/utils/math/FixedPointMath.sol": {
				"FixedPointMath": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "decimals0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "decimals1",
									"type": "uint8"
								}
							],
							"name": "IncompatibleDecimals",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "add",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								}
							],
							"name": "asEther",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "asNewDecimals",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "div",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "mul",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "scale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "basisPoints",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "sliceBasisPoints",
									"type": "tuple"
								}
							],
							"name": "slice",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "sub",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1212:6008  contract FixedPointMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1212:6008  contract FixedPointMath {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d02ebf4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x7d02ebf4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8444b813\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa7e7c9f9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe51356e8\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x2833d1f0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e60d8e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4b602c6d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x58633635\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3300:3758  function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5616:6006  function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2242:2830  function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2836:3294  function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5028:5610  function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4471:5022  function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3764:4465  function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1668:2236  function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3300:3758  function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_15:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3436:3458  FixedPointValue memory */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3415:3419  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3421:3425  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_51\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_51:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3470:3484  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3494:3508  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3518:3532  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3542:3556  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3577:3581  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3577:3590  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3566:3590  decimals = num0.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3609:3613  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3609:3619  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3600:3619  value0 = num0.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3638:3642  num1 */\n      dup10\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3638:3648  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3629:3648  value1 = num1.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3676:3682  value1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3667:3673  value0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3667:3682  value0 - value1 */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3658:3682  result = value0 - value1 */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3699:3751  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3723:3729  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3699:3751  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3741:3749  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3699:3751  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3692:3751  return FixedPointValue({value: result, decimals: decimals}) */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3300:3758  function sub(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5616:6006  function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {... */\n    tag_21:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5682:5704  FixedPointValue memory */\n      tag_57\n      tag_49\n      jump\t// in\n    tag_57:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5716:5737  uint8 currentDecimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5747:5760  uint256 value */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5770:5784  uint256 result */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5812:5815  num */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5812:5824  num.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5794:5824  currentDecimals = num.decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5842:5845  num */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5842:5851  num.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5834:5851  value = num.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5929:5935  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5917:5923  10**18 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5896:5911  currentDecimals */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5892:5894  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5892:5911  10**currentDecimals */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5881:5887  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5872:5877  value */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5872:5888  value * (10**18) */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5872:5912  value * (10**18) / (10**currentDecimals) */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5871:5924  (value * (10**18) / (10**currentDecimals)) * (10**18) */\n      tag_65\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_65:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5870:5936  ((value * (10**18) / (10**currentDecimals)) * (10**18)) / (10**18) */\n      tag_66\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_66:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5861:5936  result = ((value * (10**18) / (10**currentDecimals)) * (10**18)) / (10**18) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5953:5999  FixedPointValue({value: result, decimals: 18}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5977:5983  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5953:5999  FixedPointValue({value: result, decimals: 18}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5995:5997  18 */\n      0x12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5953:5999  FixedPointValue({value: result, decimals: 18}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5946:5999  return FixedPointValue({value: result, decimals: 18}) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5616:6006  function asEther(FixedPointValue memory num) public pure returns (FixedPointValue memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2242:2830  function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {... */\n    tag_25:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2402:2424  FixedPointValue memory */\n      tag_67\n      tag_49\n      jump\t// in\n    tag_67:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2370:2373  num */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2375:2391  sliceBasisPoints */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_69\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_69:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2436:2450  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2460:2482  uint256 representation */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2492:2521  FixedPointValue memory result */\n      tag_72\n      tag_49\n      jump\t// in\n    tag_72:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2531:2559  FixedPointValue memory scale */\n      tag_73\n      tag_49\n      jump\t// in\n    tag_73:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2580:2583  num */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2580:2592  num.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2569:2592  decimals = num.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2623:2631  decimals */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2619:2621  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2619:2631  10**decimals */\n      tag_74\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_74:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2602:2631  representation = 10**decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2649:2718  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2682:2696  representation */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2673:2679  10_000 */\n      0x2710\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2673:2696  10_000 * representation */\n      tag_75\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2649:2718  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2708:2716  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2649:2718  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2641:2718  scale = FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2737:2752  div(num, scale) */\n      tag_76\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2741:2744  num */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2746:2751  scale */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2737:2740  div */\n      tag_38\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2737:2752  div(num, scale) */\n      jump\t// in\n    tag_76:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2728:2752  result = div(num, scale) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2771:2800  mul(result, sliceBasisPoints) */\n      tag_77\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2775:2781  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2783:2799  sliceBasisPoints */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2771:2774  mul */\n      tag_42\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2771:2800  mul(result, sliceBasisPoints) */\n      jump\t// in\n    tag_77:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2762:2800  result = mul(result, sliceBasisPoints) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2817:2823  result */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2810:2823  return result */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2242:2830  function slice(FixedPointValue memory num, FixedPointValue memory sliceBasisPoints) public pure onlyMatchingFixedPointValueType(num, sliceBasisPoints) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2836:3294  function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_29:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2972:2994  FixedPointValue memory */\n      tag_78\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2951:2955  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2957:2961  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_80\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_80:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3006:3020  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3030:3044  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3054:3068  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3078:3092  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3113:3117  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3113:3126  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3102:3126  decimals = num0.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3145:3149  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3145:3155  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3136:3155  value0 = num0.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3174:3178  num1 */\n      dup10\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3174:3184  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3165:3184  value1 = num1.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3212:3218  value1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3203:3209  value0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3203:3218  value0 + value1 */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3194:3218  result = value0 + value1 */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3235:3287  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3259:3265  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3235:3287  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3277:3285  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3235:3287  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3228:3287  return FixedPointValue({value: result, decimals: decimals}) */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2836:3294  function add(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5028:5610  function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {... */\n    tag_34:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5116:5138  FixedPointValue memory */\n      tag_85\n      tag_49\n      jump\t// in\n    tag_85:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5150:5171  uint8 currentDecimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5181:5194  uint256 value */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5204:5218  uint256 result */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5246:5249  num */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5246:5258  num.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5228:5258  currentDecimals = num.decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5276:5279  num */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5276:5285  num.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5268:5285  value = num.value */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5318:5320  18 */\n      0x12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5299:5314  currentDecimals */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5299:5320  currentDecimals != 18 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5295:5457  if (currentDecimals != 18) {... */\n      tag_87\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5336:5369  FixedPointValue memory numAsEther */\n      tag_88\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5396:5408  asEther(num) */\n      tag_89\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5404:5407  num */\n      dup8\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5396:5403  asEther */\n      tag_21\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5396:5408  asEther(num) */\n      jump\t// in\n    tag_89:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5383:5408  numAsEther = asEther(num) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5430:5440  numAsEther */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5430:5446  numAsEther.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5422:5446  value = numAsEther.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5322:5457  {... */\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5295:5457  if (currentDecimals != 18) {... */\n    tag_87:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5527:5533  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5513:5521  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5509:5511  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5509:5521  10**decimals */\n      tag_90\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_90:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5497:5503  10**18 */\n      0x0de0b6b3a7640000\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5486:5492  10**18 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5477:5482  value */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5477:5493  value * (10**18) */\n      tag_91\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_91:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5477:5504  value * (10**18) / (10**18) */\n      tag_92\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5476:5522  (value * (10**18) / (10**18)) * (10**decimals) */\n      tag_93\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_93:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5475:5534  ((value * (10**18) / (10**18)) * (10**decimals)) / (10**18) */\n      tag_94\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_94:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5466:5534  result = ((value * (10**18) / (10**18)) * (10**decimals)) / (10**18) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5551:5603  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5575:5581  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5551:5603  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5593:5601  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5551:5603  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5544:5603  return FixedPointValue({value: result, decimals: decimals}) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5028:5610  function asNewDecimals(FixedPointValue memory num, uint8 decimals) public pure returns (FixedPointValue memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4471:5022  function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_38:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4607:4629  FixedPointValue memory */\n      tag_95\n      tag_49\n      jump\t// in\n    tag_95:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4586:4590  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4592:4596  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_97\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_97:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4641:4655  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4665:4679  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4689:4703  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4713:4727  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4737:4759  uint256 representation */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4780:4784  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4780:4793  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4769:4793  decimals = num0.decimals */\n      swap5\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4812:4816  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4812:4822  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4803:4822  value0 = num0.value */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4841:4845  num1 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4841:4851  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4832:4851  value1 = num1.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4882:4890  decimals */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4878:4880  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4878:4890  10**decimals */\n      tag_100\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_100:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4861:4890  representation = 10**decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4946  value0.mulDiv(representation, value1) */\n      tag_101\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4923:4937  representation */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4939:4945  value1 */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4915  value0 */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4922  value0.mulDiv */\n      tag_102\n      swap1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4909:4946  value0.mulDiv(representation, value1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4900:4946  result = value0.mulDiv(representation, value1) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4963:5015  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4987:4993  result */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4963:5015  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":5005:5013  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4963:5015  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4956:5015  return FixedPointValue({value: result, decimals: decimals}) */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4471:5022  function div(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3764:4465  function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n    tag_42:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3900:3922  FixedPointValue memory */\n      tag_103\n      tag_49\n      jump\t// in\n    tag_103:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3879:3883  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3885:3889  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_105\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_105:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3934:3948  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3958:3972  uint256 value0 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3982:3996  uint256 value1 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4006:4020  uint256 result */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4030:4052  uint256 representation */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4073:4077  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4073:4086  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4062:4086  decimals = num0.decimals */\n      swap5\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4105:4109  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4105:4115  num0.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4096:4115  value0 = num0.value */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4134:4138  num1 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4134:4144  num1.value */\n      0x00\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4125:4144  value1 = num1.value */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4175:4183  decimals */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4171:4173  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4171:4183  10**decimals */\n      tag_108\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4154:4183  representation = 10**decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4209:4210  0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4197:4205  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4197:4210  decimals == 0 */\n      0xff\n      and\n      sub\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4193:4334  if (decimals == 0) {... */\n      tag_109\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4244:4250  value1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4235:4241  value0 */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4235:4250  value0 * value1 */\n      tag_110\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_110:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4226:4250  result = value0 * value1 */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4271:4323  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4295:4301  result */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4271:4323  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4313:4321  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4271:4323  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4264:4323  return FixedPointValue({value: result, decimals: decimals}) */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_107)\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4193:4334  if (decimals == 0) {... */\n    tag_109:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4389  value0.mulDiv(value1, representation) */\n      tag_111\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4366:4372  value1 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4374:4388  representation */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4358  value0 */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4365  value0.mulDiv */\n      tag_102\n      swap1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4352:4389  value0.mulDiv(value1, representation) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4343:4389  result = value0.mulDiv(value1, representation) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4406:4458  FixedPointValue({value: result, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4430:4436  result */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4406:4458  FixedPointValue({value: result, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4448:4456  decimals */\n      dup7\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4406:4458  FixedPointValue({value: result, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":4399:4458  return FixedPointValue({value: result, decimals: decimals}) */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1654:1655  _ */\n    tag_107:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":3764:4465  function mul(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1668:2236  function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {... */\n    tag_46:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1806:1840  FixedPointValue memory basisPoints */\n      tag_112\n      tag_49\n      jump\t// in\n    tag_112:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1785:1789  num0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1791:1795  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1447:1462  uint8 decimals0 */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1472:1487  uint8 decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1513  num0 */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1509:1522  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1497:1522  decimals0 = num0.decimals */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1548  num1 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1544:1557  num1.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1532:1557  decimals1 = num1.decimals */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1584:1593  decimals1 */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1580  decimals0 */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1571:1593  decimals0 != decimals1 */\n      0xff\n      and\n      eq\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n      tag_114\n      jumpi\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1623:1632  decimals0 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1634:1643  decimals1 */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1602:1644  IncompatibleDecimals(decimals0, decimals1) */\n      mload(0x40)\n      0x5bc4748600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1567:1644  if (decimals0 != decimals1) revert IncompatibleDecimals(decimals0, decimals1) */\n    tag_114:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1852:1866  uint8 decimals */\n      0x00\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1876:1898  uint256 representation */\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1908:1937  FixedPointValue memory result */\n      tag_117\n      tag_49\n      jump\t// in\n    tag_117:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1947:1975  FixedPointValue memory scale */\n      tag_118\n      tag_49\n      jump\t// in\n    tag_118:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1996:2000  num0 */\n      dup11\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1996:2009  num0.decimals */\n      0x20\n      add\n      mload\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1985:2009  decimals = num0.decimals */\n      swap4\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2040:2048  decimals */\n      dup4\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2036:2038  10 */\n      0x0a\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2036:2048  10**decimals */\n      tag_119\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_119:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2019:2048  representation = 10**decimals */\n      swap3\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2066:2135  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2099:2113  representation */\n      dup5\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2090:2096  10_000 */\n      0x2710\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2090:2113  10_000 * representation */\n      tag_120\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_120:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2066:2135  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2125:2133  decimals */\n      dup6\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2066:2135  FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2058:2135  scale = FixedPointValue({value: 10_000 * representation, decimals: decimals}) */\n      swap1\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2154:2169  div(num0, num1) */\n      tag_121\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2158:2162  num0 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2164:2168  num1 */\n      dup12\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2154:2157  div */\n      tag_38\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2154:2169  div(num0, num1) */\n      jump\t// in\n    tag_121:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2145:2169  result = div(num0, num1) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2188:2206  mul(result, scale) */\n      tag_122\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2192:2198  result */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2200:2205  scale */\n      dup3\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2188:2191  mul */\n      tag_42\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2188:2206  mul(result, scale) */\n      jump\t// in\n    tag_122:\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2179:2206  result = mul(result, scale) */\n      swap2\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2223:2229  result */\n      dup2\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":2216:2229  return result */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1437:1662  {... */\n      pop\n      pop\n        /* \"code/contract/sol/native/utils/math/FixedPointMath.sol\":1668:2236  function scale(FixedPointValue memory num0, FixedPointValue memory num1) public pure onlyMatchingFixedPointValueType(num0, num1) returns (FixedPointValue memory basisPoints) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":3689:7902  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_102:\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":3771:3785  uint256 result */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4118:4131  uint256 prod0 */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4190:4203  uint256 prod1 */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4315:4316  0 */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4311:4317  not(0) */\n      not\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4308:4309  y */\n      dup6\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4305:4306  x */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4298:4318  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4351:4352  y */\n      dup6\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4348:4349  x */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4344:4353  mul(x, y) */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4335:4353  prod0 := mul(x, y) */\n      swap3\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4406:4411  prod0 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4402:4404  mm */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4399:4412  lt(mm, prod0) */\n      lt\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4391:4396  prod0 */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4387:4389  mm */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4383:4397  sub(mm, prod0) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4379:4413  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4370:4413  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4270:4427  {... */\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4517:4518  0 */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4508:4513  prod1 */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4508:4518  prod1 == 0 */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4504:4872  if (prod1 == 0) {... */\n      tag_124\n      jumpi\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4846:4857  denominator */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4838:4843  prod0 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4838:4857  prod0 / denominator */\n      dup2\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4831:4857  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_123)\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4504:4872  if (prod1 == 0) {... */\n    tag_124:\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4996:5001  prod1 */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4982:4993  denominator */\n      dup5\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4982:5001  denominator > prod1 */\n      gt\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":4974:5027  require(denominator > prod1, \"Math: mulDiv overflow\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5283:5300  uint256 remainder */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5418:5429  denominator */\n      dup5\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5415:5416  y */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5412:5413  x */\n      dup9\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5405:5430  mulmod(x, y, denominator) */\n      mulmod\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5392:5430  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5546:5551  prod0 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5535:5544  remainder */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5532:5552  gt(remainder, prod0) */\n      gt\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5525:5530  prod1 */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5521:5553  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5512:5553  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5590:5599  remainder */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5583:5588  prod0 */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5579:5600  sub(prod0, remainder) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5570:5600  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5921:5933  uint256 twos */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5966:5967  1 */\n      0x01\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5952:5963  denominator */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5951:5963  ~denominator */\n      not\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5951:5967  ~denominator + 1 */\n      add\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5936:5947  denominator */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5936:5968  denominator & (~denominator + 1) */\n      and\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":5921:5968  uint256 twos = denominator & (~denominator + 1) */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6088:6092  twos */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6075:6086  denominator */\n      dup7\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6071:6093  div(denominator, twos) */\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6056:6093  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6180:6184  twos */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6173:6178  prod0 */\n      dup5\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6169:6185  div(prod0, twos) */\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6160:6185  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6337:6338  1 */\n      0x01\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6330:6334  twos */\n      dup2\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6323:6327  twos */\n      dup3\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6320:6321  0 */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6316:6328  sub(0, twos) */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6312:6335  div(sub(0, twos), twos) */\n      div\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6308:6339  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6300:6339  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6436:6440  twos */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6428:6433  prod1 */\n      dup4\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6428:6440  prod1 * twos */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6419:6440  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6758:6773  uint256 inverse */\n      0x00\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6796:6797  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6781:6792  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6777:6778  3 */\n      0x03\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6777:6792  3 * denominator */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6776:6797  (3 * denominator) ^ 2 */\n      xor\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":6758:6797  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7043:7050  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7029:7040  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7029:7050  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7025:7026  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7025:7050  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7014:7050  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7112:7119  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7098:7109  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7098:7119  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7094:7095  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7094:7119  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7083:7119  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7182:7189  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7168:7179  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7168:7189  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7164:7165  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7164:7189  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7153:7189  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7252:7259  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7238:7249  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7238:7259  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7234:7235  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7234:7259  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7223:7259  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7322:7329  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7308:7319  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7308:7329  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7304:7305  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7304:7329  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7293:7329  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7393:7400  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7379:7390  denominator */\n      dup8\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7379:7400  denominator * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7375:7376  2 */\n      0x02\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7375:7400  2 - denominator * inverse */\n      sub\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7364:7400  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7851:7858  inverse */\n      dup1\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7843:7848  prod0 */\n      dup6\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7843:7858  prod0 * inverse */\n      mul\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7834:7858  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":7872:7885  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":3689:7902  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_123:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_49:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_131:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_132:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_134:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_135:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_136:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_137:\n        /* \"#utility.yul\":834:861   */\n      tag_166\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_135\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_168\n      tag_136\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":907:995   */\n    tag_167:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_138:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_170\n      tag_131\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_171\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_137\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1373   */\n    tag_140:\n        /* \"#utility.yul\":1333:1340   */\n      0x00\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1351:1367   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1379:1501   */\n    tag_141:\n        /* \"#utility.yul\":1452:1476   */\n      tag_175\n        /* \"#utility.yul\":1470:1475   */\n      dup2\n        /* \"#utility.yul\":1452:1476   */\n      tag_140\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1442:1477   */\n      eq\n        /* \"#utility.yul\":1432:1495   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1491:1492   */\n      0x00\n        /* \"#utility.yul\":1488:1489   */\n      dup1\n        /* \"#utility.yul\":1481:1493   */\n      revert\n        /* \"#utility.yul\":1432:1495   */\n    tag_176:\n        /* \"#utility.yul\":1379:1501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1507:1646   */\n    tag_142:\n        /* \"#utility.yul\":1553:1558   */\n      0x00\n        /* \"#utility.yul\":1591:1597   */\n      dup2\n        /* \"#utility.yul\":1578:1598   */\n      calldataload\n        /* \"#utility.yul\":1569:1598   */\n      swap1\n      pop\n        /* \"#utility.yul\":1607:1640   */\n      tag_178\n        /* \"#utility.yul\":1634:1639   */\n      dup2\n        /* \"#utility.yul\":1607:1640   */\n      tag_141\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1507:1646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1652:1738   */\n    tag_143:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1727:1731   */\n      0xff\n        /* \"#utility.yul\":1720:1725   */\n      dup3\n        /* \"#utility.yul\":1716:1732   */\n      and\n        /* \"#utility.yul\":1705:1732   */\n      swap1\n      pop\n        /* \"#utility.yul\":1652:1738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1744:1862   */\n    tag_144:\n        /* \"#utility.yul\":1815:1837   */\n      tag_181\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1815:1837   */\n      tag_143\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1808:1813   */\n      dup2\n        /* \"#utility.yul\":1805:1838   */\n      eq\n        /* \"#utility.yul\":1795:1856   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1852:1853   */\n      0x00\n        /* \"#utility.yul\":1849:1850   */\n      dup1\n        /* \"#utility.yul\":1842:1854   */\n      revert\n        /* \"#utility.yul\":1795:1856   */\n    tag_182:\n        /* \"#utility.yul\":1744:1862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1868:2003   */\n    tag_145:\n        /* \"#utility.yul\":1912:1917   */\n      0x00\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1937:1957   */\n      calldataload\n        /* \"#utility.yul\":1928:1957   */\n      swap1\n      pop\n        /* \"#utility.yul\":1966:1997   */\n      tag_184\n        /* \"#utility.yul\":1991:1996   */\n      dup2\n        /* \"#utility.yul\":1966:1997   */\n      tag_144\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1868:2003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2039:2621   */\n    tag_146:\n        /* \"#utility.yul\":2118:2123   */\n      0x00\n        /* \"#utility.yul\":2162:2166   */\n      0x40\n        /* \"#utility.yul\":2150:2159   */\n      dup3\n        /* \"#utility.yul\":2145:2148   */\n      dup5\n        /* \"#utility.yul\":2141:2160   */\n      sub\n        /* \"#utility.yul\":2137:2167   */\n      slt\n        /* \"#utility.yul\":2134:2251   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2170:2249   */\n      tag_187\n      tag_134\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2134:2251   */\n    tag_186:\n        /* \"#utility.yul\":2269:2290   */\n      tag_188\n        /* \"#utility.yul\":2285:2289   */\n      0x40\n        /* \"#utility.yul\":2269:2290   */\n      tag_138\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2260:2290   */\n      swap1\n      pop\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2390:2439   */\n      tag_189\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2426:2432   */\n      dup3\n        /* \"#utility.yul\":2415:2424   */\n      dup6\n        /* \"#utility.yul\":2411:2433   */\n      add\n        /* \"#utility.yul\":2390:2439   */\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2383:2387   */\n      0x00\n        /* \"#utility.yul\":2376:2381   */\n      dup4\n        /* \"#utility.yul\":2372:2388   */\n      add\n        /* \"#utility.yul\":2365:2440   */\n      mstore\n        /* \"#utility.yul\":2300:2451   */\n      pop\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2555:2602   */\n      tag_190\n        /* \"#utility.yul\":2598:2601   */\n      dup5\n        /* \"#utility.yul\":2589:2595   */\n      dup3\n        /* \"#utility.yul\":2578:2587   */\n      dup6\n        /* \"#utility.yul\":2574:2596   */\n      add\n        /* \"#utility.yul\":2555:2602   */\n      tag_145\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2548:2552   */\n      0x20\n        /* \"#utility.yul\":2541:2546   */\n      dup4\n        /* \"#utility.yul\":2537:2553   */\n      add\n        /* \"#utility.yul\":2530:2603   */\n      mstore\n        /* \"#utility.yul\":2461:2614   */\n      pop\n        /* \"#utility.yul\":2039:2621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2627:3222   */\n    tag_14:\n        /* \"#utility.yul\":2755:2761   */\n      0x00\n        /* \"#utility.yul\":2763:2769   */\n      dup1\n        /* \"#utility.yul\":2812:2815   */\n      0x80\n        /* \"#utility.yul\":2800:2809   */\n      dup4\n        /* \"#utility.yul\":2791:2798   */\n      dup6\n        /* \"#utility.yul\":2787:2810   */\n      sub\n        /* \"#utility.yul\":2783:2816   */\n      slt\n        /* \"#utility.yul\":2780:2900   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":2819:2898   */\n      tag_193\n      tag_132\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2780:2900   */\n    tag_192:\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2964:3047   */\n      tag_194\n        /* \"#utility.yul\":3039:3046   */\n      dup6\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup7\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2964:3047   */\n      tag_146\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2954:3047   */\n      swap3\n      pop\n        /* \"#utility.yul\":2910:3057   */\n      pop\n        /* \"#utility.yul\":3096:3098   */\n      0x40\n        /* \"#utility.yul\":3122:3205   */\n      tag_195\n        /* \"#utility.yul\":3197:3204   */\n      dup6\n        /* \"#utility.yul\":3188:3194   */\n      dup3\n        /* \"#utility.yul\":3177:3186   */\n      dup7\n        /* \"#utility.yul\":3173:3195   */\n      add\n        /* \"#utility.yul\":3122:3205   */\n      tag_146\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3112:3205   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3215   */\n      pop\n        /* \"#utility.yul\":2627:3222   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3336   */\n    tag_147:\n        /* \"#utility.yul\":3305:3329   */\n      tag_197\n        /* \"#utility.yul\":3323:3328   */\n      dup2\n        /* \"#utility.yul\":3305:3329   */\n      tag_140\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3300:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3330   */\n      mstore\n        /* \"#utility.yul\":3228:3336   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3444   */\n    tag_148:\n        /* \"#utility.yul\":3415:3437   */\n      tag_199\n        /* \"#utility.yul\":3431:3436   */\n      dup2\n        /* \"#utility.yul\":3415:3437   */\n      tag_143\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3410:3413   */\n      dup3\n        /* \"#utility.yul\":3403:3438   */\n      mstore\n        /* \"#utility.yul\":3342:3444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3506:4024   */\n    tag_149:\n        /* \"#utility.yul\":3663:3667   */\n      0x40\n        /* \"#utility.yul\":3658:3661   */\n      dup3\n        /* \"#utility.yul\":3654:3668   */\n      add\n        /* \"#utility.yul\":3751:3755   */\n      0x00\n        /* \"#utility.yul\":3744:3749   */\n      dup3\n        /* \"#utility.yul\":3740:3756   */\n      add\n        /* \"#utility.yul\":3734:3757   */\n      mload\n        /* \"#utility.yul\":3770:3833   */\n      tag_201\n        /* \"#utility.yul\":3827:3831   */\n      0x00\n        /* \"#utility.yul\":3822:3825   */\n      dup6\n        /* \"#utility.yul\":3818:3832   */\n      add\n        /* \"#utility.yul\":3804:3816   */\n      dup3\n        /* \"#utility.yul\":3770:3833   */\n      tag_147\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3678:3843   */\n      pop\n        /* \"#utility.yul\":3929:3933   */\n      0x20\n        /* \"#utility.yul\":3922:3927   */\n      dup3\n        /* \"#utility.yul\":3918:3934   */\n      add\n        /* \"#utility.yul\":3912:3935   */\n      mload\n        /* \"#utility.yul\":3948:4007   */\n      tag_202\n        /* \"#utility.yul\":4001:4005   */\n      0x20\n        /* \"#utility.yul\":3996:3999   */\n      dup6\n        /* \"#utility.yul\":3992:4006   */\n      add\n        /* \"#utility.yul\":3978:3990   */\n      dup3\n        /* \"#utility.yul\":3948:4007   */\n      tag_148\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3853:4017   */\n      pop\n        /* \"#utility.yul\":3632:4024   */\n      pop\n        /* \"#utility.yul\":3506:4024   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4372   */\n    tag_17:\n        /* \"#utility.yul\":4183:4187   */\n      0x00\n        /* \"#utility.yul\":4221:4223   */\n      0x40\n        /* \"#utility.yul\":4210:4219   */\n      dup3\n        /* \"#utility.yul\":4206:4224   */\n      add\n        /* \"#utility.yul\":4198:4224   */\n      swap1\n      pop\n        /* \"#utility.yul\":4234:4365   */\n      tag_204\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4234:4365   */\n      tag_149\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4030:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4767   */\n    tag_20:\n        /* \"#utility.yul\":4467:4473   */\n      0x00\n        /* \"#utility.yul\":4516:4518   */\n      0x40\n        /* \"#utility.yul\":4504:4513   */\n      dup3\n        /* \"#utility.yul\":4495:4502   */\n      dup5\n        /* \"#utility.yul\":4491:4514   */\n      sub\n        /* \"#utility.yul\":4487:4519   */\n      slt\n        /* \"#utility.yul\":4484:4603   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4522:4601   */\n      tag_207\n      tag_132\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4484:4603   */\n    tag_206:\n        /* \"#utility.yul\":4642:4643   */\n      0x00\n        /* \"#utility.yul\":4667:4750   */\n      tag_208\n        /* \"#utility.yul\":4742:4749   */\n      dup5\n        /* \"#utility.yul\":4733:4739   */\n      dup3\n        /* \"#utility.yul\":4722:4731   */\n      dup6\n        /* \"#utility.yul\":4718:4740   */\n      add\n        /* \"#utility.yul\":4667:4750   */\n      tag_146\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4657:4750   */\n      swap2\n      pop\n        /* \"#utility.yul\":4613:4760   */\n      pop\n        /* \"#utility.yul\":4378:4767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4773:5303   */\n    tag_33:\n        /* \"#utility.yul\":4869:4875   */\n      0x00\n        /* \"#utility.yul\":4877:4883   */\n      dup1\n        /* \"#utility.yul\":4926:4928   */\n      0x60\n        /* \"#utility.yul\":4914:4923   */\n      dup4\n        /* \"#utility.yul\":4905:4912   */\n      dup6\n        /* \"#utility.yul\":4901:4924   */\n      sub\n        /* \"#utility.yul\":4897:4929   */\n      slt\n        /* \"#utility.yul\":4894:5013   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4932:5011   */\n      tag_211\n      tag_132\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4894:5013   */\n    tag_210:\n        /* \"#utility.yul\":5052:5053   */\n      0x00\n        /* \"#utility.yul\":5077:5160   */\n      tag_212\n        /* \"#utility.yul\":5152:5159   */\n      dup6\n        /* \"#utility.yul\":5143:5149   */\n      dup3\n        /* \"#utility.yul\":5132:5141   */\n      dup7\n        /* \"#utility.yul\":5128:5150   */\n      add\n        /* \"#utility.yul\":5077:5160   */\n      tag_146\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5067:5160   */\n      swap3\n      pop\n        /* \"#utility.yul\":5023:5170   */\n      pop\n        /* \"#utility.yul\":5209:5211   */\n      0x40\n        /* \"#utility.yul\":5235:5286   */\n      tag_213\n        /* \"#utility.yul\":5278:5285   */\n      dup6\n        /* \"#utility.yul\":5269:5275   */\n      dup3\n        /* \"#utility.yul\":5258:5267   */\n      dup7\n        /* \"#utility.yul\":5254:5276   */\n      add\n        /* \"#utility.yul\":5235:5286   */\n      tag_145\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5225:5286   */\n      swap2\n      pop\n        /* \"#utility.yul\":5180:5296   */\n      pop\n        /* \"#utility.yul\":4773:5303   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5421   */\n    tag_150:\n        /* \"#utility.yul\":5392:5414   */\n      tag_215\n        /* \"#utility.yul\":5408:5413   */\n      dup2\n        /* \"#utility.yul\":5392:5414   */\n      tag_143\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5387:5390   */\n      dup3\n        /* \"#utility.yul\":5380:5415   */\n      mstore\n        /* \"#utility.yul\":5309:5421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5427:5743   */\n    tag_53:\n        /* \"#utility.yul\":5540:5544   */\n      0x00\n        /* \"#utility.yul\":5578:5580   */\n      0x40\n        /* \"#utility.yul\":5567:5576   */\n      dup3\n        /* \"#utility.yul\":5563:5581   */\n      add\n        /* \"#utility.yul\":5555:5581   */\n      swap1\n      pop\n        /* \"#utility.yul\":5591:5658   */\n      tag_217\n        /* \"#utility.yul\":5655:5656   */\n      0x00\n        /* \"#utility.yul\":5644:5653   */\n      dup4\n        /* \"#utility.yul\":5640:5657   */\n      add\n        /* \"#utility.yul\":5631:5637   */\n      dup6\n        /* \"#utility.yul\":5591:5658   */\n      tag_150\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5668:5736   */\n      tag_218\n        /* \"#utility.yul\":5732:5734   */\n      0x20\n        /* \"#utility.yul\":5721:5730   */\n      dup4\n        /* \"#utility.yul\":5717:5735   */\n      add\n        /* \"#utility.yul\":5708:5714   */\n      dup5\n        /* \"#utility.yul\":5668:5736   */\n      tag_150\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5427:5743   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5749:5929   */\n    tag_151:\n        /* \"#utility.yul\":5797:5874   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5794:5795   */\n      0x00\n        /* \"#utility.yul\":5787:5875   */\n      mstore\n        /* \"#utility.yul\":5894:5898   */\n      0x11\n        /* \"#utility.yul\":5891:5892   */\n      0x04\n        /* \"#utility.yul\":5884:5899   */\n      mstore\n        /* \"#utility.yul\":5918:5922   */\n      0x24\n        /* \"#utility.yul\":5915:5916   */\n      0x00\n        /* \"#utility.yul\":5908:5923   */\n      revert\n        /* \"#utility.yul\":5935:6129   */\n    tag_56:\n        /* \"#utility.yul\":5975:5979   */\n      0x00\n        /* \"#utility.yul\":5995:6015   */\n      tag_221\n        /* \"#utility.yul\":6013:6014   */\n      dup3\n        /* \"#utility.yul\":5995:6015   */\n      tag_140\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5990:6015   */\n      swap2\n      pop\n        /* \"#utility.yul\":6029:6049   */\n      tag_222\n        /* \"#utility.yul\":6047:6048   */\n      dup4\n        /* \"#utility.yul\":6029:6049   */\n      tag_140\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6024:6049   */\n      swap3\n      pop\n        /* \"#utility.yul\":6073:6074   */\n      dup3\n        /* \"#utility.yul\":6070:6071   */\n      dup3\n        /* \"#utility.yul\":6066:6075   */\n      sub\n        /* \"#utility.yul\":6058:6075   */\n      swap1\n      pop\n        /* \"#utility.yul\":6097:6098   */\n      dup2\n        /* \"#utility.yul\":6091:6095   */\n      dup2\n        /* \"#utility.yul\":6088:6099   */\n      gt\n        /* \"#utility.yul\":6085:6122   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6102:6120   */\n      tag_224\n      tag_151\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6085:6122   */\n    tag_223:\n        /* \"#utility.yul\":5935:6129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6135:6237   */\n    tag_152:\n        /* \"#utility.yul\":6177:6185   */\n      0x00\n        /* \"#utility.yul\":6224:6229   */\n      dup2\n        /* \"#utility.yul\":6221:6222   */\n      0x01\n        /* \"#utility.yul\":6217:6230   */\n      shr\n        /* \"#utility.yul\":6196:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":6135:6237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6243:7091   */\n    tag_153:\n        /* \"#utility.yul\":6304:6309   */\n      0x00\n        /* \"#utility.yul\":6311:6315   */\n      dup1\n        /* \"#utility.yul\":6335:6341   */\n      dup3\n        /* \"#utility.yul\":6326:6341   */\n      swap2\n      pop\n        /* \"#utility.yul\":6359:6364   */\n      dup4\n        /* \"#utility.yul\":6350:6364   */\n      swap1\n      pop\n        /* \"#utility.yul\":6373:7085   */\n    tag_227:\n        /* \"#utility.yul\":6394:6395   */\n      0x01\n        /* \"#utility.yul\":6384:6392   */\n      dup6\n        /* \"#utility.yul\":6381:6396   */\n      gt\n        /* \"#utility.yul\":6373:7085   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6489:6493   */\n      dup1\n        /* \"#utility.yul\":6484:6487   */\n      dup7\n        /* \"#utility.yul\":6480:6494   */\n      div\n        /* \"#utility.yul\":6474:6478   */\n      dup2\n        /* \"#utility.yul\":6471:6495   */\n      gt\n        /* \"#utility.yul\":6468:6518   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6498:6516   */\n      tag_231\n      tag_151\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6468:6518   */\n    tag_230:\n        /* \"#utility.yul\":6548:6549   */\n      0x01\n        /* \"#utility.yul\":6538:6546   */\n      dup6\n        /* \"#utility.yul\":6534:6550   */\n      and\n        /* \"#utility.yul\":6531:6982   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6963:6967   */\n      dup1\n        /* \"#utility.yul\":6956:6961   */\n      dup3\n        /* \"#utility.yul\":6952:6968   */\n      mul\n        /* \"#utility.yul\":6943:6968   */\n      swap2\n      pop\n        /* \"#utility.yul\":6531:6982   */\n    tag_232:\n        /* \"#utility.yul\":7013:7017   */\n      dup1\n        /* \"#utility.yul\":7007:7011   */\n      dup2\n        /* \"#utility.yul\":7003:7018   */\n      mul\n        /* \"#utility.yul\":6995:7018   */\n      swap1\n      pop\n        /* \"#utility.yul\":7043:7075   */\n      tag_233\n        /* \"#utility.yul\":7066:7074   */\n      dup6\n        /* \"#utility.yul\":7043:7075   */\n      tag_152\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7031:7075   */\n      swap5\n      pop\n        /* \"#utility.yul\":6373:7085   */\n      jump(tag_227)\n    tag_229:\n        /* \"#utility.yul\":6243:7091   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7097:8170   */\n    tag_154:\n        /* \"#utility.yul\":7151:7156   */\n      0x00\n        /* \"#utility.yul\":7342:7350   */\n      dup3\n        /* \"#utility.yul\":7332:7372   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7363:7364   */\n      0x01\n        /* \"#utility.yul\":7354:7364   */\n      swap1\n      pop\n        /* \"#utility.yul\":7365:7370   */\n      jump(tag_234)\n        /* \"#utility.yul\":7332:7372   */\n    tag_235:\n        /* \"#utility.yul\":7391:7395   */\n      dup2\n        /* \"#utility.yul\":7381:7417   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":7408:7409   */\n      0x00\n        /* \"#utility.yul\":7399:7409   */\n      swap1\n      pop\n        /* \"#utility.yul\":7410:7415   */\n      jump(tag_234)\n        /* \"#utility.yul\":7381:7417   */\n    tag_236:\n        /* \"#utility.yul\":7477:7481   */\n      dup2\n        /* \"#utility.yul\":7525:7526   */\n      0x01\n        /* \"#utility.yul\":7520:7547   */\n      dup2\n      eq\n      tag_238\n      jumpi\n        /* \"#utility.yul\":7561:7562   */\n      0x02\n        /* \"#utility.yul\":7556:7747   */\n      dup2\n      eq\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7470:7747   */\n      jump(tag_237)\n        /* \"#utility.yul\":7520:7547   */\n    tag_238:\n        /* \"#utility.yul\":7538:7539   */\n      0x01\n        /* \"#utility.yul\":7529:7539   */\n      swap2\n      pop\n        /* \"#utility.yul\":7540:7545   */\n      pop\n      jump(tag_234)\n        /* \"#utility.yul\":7556:7747   */\n    tag_239:\n        /* \"#utility.yul\":7601:7604   */\n      0xff\n        /* \"#utility.yul\":7591:7599   */\n      dup5\n        /* \"#utility.yul\":7588:7605   */\n      gt\n        /* \"#utility.yul\":7585:7628   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":7608:7626   */\n      tag_241\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7585:7628   */\n    tag_240:\n        /* \"#utility.yul\":7657:7665   */\n      dup4\n        /* \"#utility.yul\":7654:7655   */\n      0x02\n        /* \"#utility.yul\":7650:7666   */\n      exp\n        /* \"#utility.yul\":7641:7666   */\n      swap2\n      pop\n        /* \"#utility.yul\":7692:7695   */\n      dup5\n        /* \"#utility.yul\":7685:7690   */\n      dup3\n        /* \"#utility.yul\":7682:7696   */\n      gt\n        /* \"#utility.yul\":7679:7719   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7699:7717   */\n      tag_243\n      tag_151\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7679:7719   */\n    tag_242:\n        /* \"#utility.yul\":7732:7737   */\n      pop\n      jump(tag_234)\n        /* \"#utility.yul\":7470:7747   */\n    tag_237:\n      pop\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"#utility.yul\":7846:7854   */\n      dup4\n        /* \"#utility.yul\":7843:7859   */\n      lt\n        /* \"#utility.yul\":7837:7840   */\n      0x0133\n        /* \"#utility.yul\":7831:7835   */\n      dup4\n        /* \"#utility.yul\":7828:7841   */\n      lt\n        /* \"#utility.yul\":7824:7860   */\n      and\n        /* \"#utility.yul\":7806:7808   */\n      0x4e\n        /* \"#utility.yul\":7796:7804   */\n      dup5\n        /* \"#utility.yul\":7793:7809   */\n      lt\n        /* \"#utility.yul\":7788:7790   */\n      0x0b\n        /* \"#utility.yul\":7782:7786   */\n      dup5\n        /* \"#utility.yul\":7779:7791   */\n      lt\n        /* \"#utility.yul\":7775:7810   */\n      and\n        /* \"#utility.yul\":7759:7870   */\n      or\n        /* \"#utility.yul\":7756:8002   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":7912:7920   */\n      dup3\n        /* \"#utility.yul\":7906:7910   */\n      dup3\n        /* \"#utility.yul\":7902:7921   */\n      exp\n        /* \"#utility.yul\":7893:7921   */\n      swap1\n      pop\n        /* \"#utility.yul\":7947:7950   */\n      dup4\n        /* \"#utility.yul\":7940:7945   */\n      dup2\n        /* \"#utility.yul\":7937:7951   */\n      gt\n        /* \"#utility.yul\":7934:7974   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7954:7972   */\n      tag_246\n      tag_151\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7934:7974   */\n    tag_245:\n        /* \"#utility.yul\":7987:7992   */\n      jump(tag_234)\n        /* \"#utility.yul\":7756:8002   */\n    tag_244:\n        /* \"#utility.yul\":8027:8069   */\n      tag_247\n        /* \"#utility.yul\":8065:8068   */\n      dup5\n        /* \"#utility.yul\":8055:8063   */\n      dup5\n        /* \"#utility.yul\":8049:8053   */\n      dup5\n        /* \"#utility.yul\":8046:8047   */\n      0x01\n        /* \"#utility.yul\":8027:8069   */\n      tag_153\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8012:8069   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8101:8105   */\n      dup2\n        /* \"#utility.yul\":8096:8099   */\n      dup5\n        /* \"#utility.yul\":8092:8106   */\n      div\n        /* \"#utility.yul\":8085:8090   */\n      dup2\n        /* \"#utility.yul\":8082:8107   */\n      gt\n        /* \"#utility.yul\":8079:8130   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":8110:8128   */\n      tag_249\n      tag_151\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8079:8130   */\n    tag_248:\n        /* \"#utility.yul\":8159:8163   */\n      dup2\n        /* \"#utility.yul\":8152:8157   */\n      dup2\n        /* \"#utility.yul\":8148:8164   */\n      mul\n        /* \"#utility.yul\":8139:8164   */\n      swap1\n      pop\n        /* \"#utility.yul\":7097:8170   */\n    tag_234:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8176:8457   */\n    tag_60:\n        /* \"#utility.yul\":8234:8239   */\n      0x00\n        /* \"#utility.yul\":8258:8281   */\n      tag_251\n        /* \"#utility.yul\":8276:8280   */\n      dup3\n        /* \"#utility.yul\":8258:8281   */\n      tag_140\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8250:8281   */\n      swap2\n      pop\n        /* \"#utility.yul\":8302:8327   */\n      tag_252\n        /* \"#utility.yul\":8318:8326   */\n      dup4\n        /* \"#utility.yul\":8302:8327   */\n      tag_143\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8290:8327   */\n      swap3\n      pop\n        /* \"#utility.yul\":8346:8450   */\n      tag_253\n        /* \"#utility.yul\":8383:8449   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8373:8381   */\n      dup5\n        /* \"#utility.yul\":8367:8371   */\n      dup5\n        /* \"#utility.yul\":8346:8450   */\n      tag_154\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8337:8450   */\n      swap1\n      pop\n        /* \"#utility.yul\":8176:8457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8463:8873   */\n    tag_62:\n        /* \"#utility.yul\":8503:8510   */\n      0x00\n        /* \"#utility.yul\":8526:8546   */\n      tag_255\n        /* \"#utility.yul\":8544:8545   */\n      dup3\n        /* \"#utility.yul\":8526:8546   */\n      tag_140\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8521:8546   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8580   */\n      tag_256\n        /* \"#utility.yul\":8578:8579   */\n      dup4\n        /* \"#utility.yul\":8560:8580   */\n      tag_140\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8555:8580   */\n      swap3\n      pop\n        /* \"#utility.yul\":8615:8616   */\n      dup3\n        /* \"#utility.yul\":8612:8613   */\n      dup3\n        /* \"#utility.yul\":8608:8617   */\n      mul\n        /* \"#utility.yul\":8637:8667   */\n      tag_257\n        /* \"#utility.yul\":8655:8666   */\n      dup2\n        /* \"#utility.yul\":8637:8667   */\n      tag_140\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8626:8667   */\n      swap2\n      pop\n        /* \"#utility.yul\":8816:8817   */\n      dup3\n        /* \"#utility.yul\":8807:8814   */\n      dup3\n        /* \"#utility.yul\":8803:8818   */\n      div\n        /* \"#utility.yul\":8800:8801   */\n      dup5\n        /* \"#utility.yul\":8797:8819   */\n      eq\n        /* \"#utility.yul\":8777:8778   */\n      dup4\n        /* \"#utility.yul\":8770:8779   */\n      iszero\n        /* \"#utility.yul\":8750:8833   */\n      or\n        /* \"#utility.yul\":8727:8866   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":8846:8864   */\n      tag_259\n      tag_151\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8727:8866   */\n    tag_258:\n        /* \"#utility.yul\":8511:8873   */\n      pop\n        /* \"#utility.yul\":8463:8873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8879:9059   */\n    tag_127:\n        /* \"#utility.yul\":8927:9004   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8924:8925   */\n      0x00\n        /* \"#utility.yul\":8917:9005   */\n      mstore\n        /* \"#utility.yul\":9024:9028   */\n      0x12\n        /* \"#utility.yul\":9021:9022   */\n      0x04\n        /* \"#utility.yul\":9014:9029   */\n      mstore\n        /* \"#utility.yul\":9048:9052   */\n      0x24\n        /* \"#utility.yul\":9045:9046   */\n      0x00\n        /* \"#utility.yul\":9038:9053   */\n      revert\n        /* \"#utility.yul\":9065:9250   */\n    tag_64:\n        /* \"#utility.yul\":9105:9106   */\n      0x00\n        /* \"#utility.yul\":9122:9142   */\n      tag_262\n        /* \"#utility.yul\":9140:9141   */\n      dup3\n        /* \"#utility.yul\":9122:9142   */\n      tag_140\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9117:9142   */\n      swap2\n      pop\n        /* \"#utility.yul\":9156:9176   */\n      tag_263\n        /* \"#utility.yul\":9174:9175   */\n      dup4\n        /* \"#utility.yul\":9156:9176   */\n      tag_140\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9151:9176   */\n      swap3\n      pop\n        /* \"#utility.yul\":9195:9196   */\n      dup3\n        /* \"#utility.yul\":9185:9220   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9200:9218   */\n      tag_265\n      tag_127\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9185:9220   */\n    tag_264:\n        /* \"#utility.yul\":9242:9243   */\n      dup3\n        /* \"#utility.yul\":9239:9240   */\n      dup3\n        /* \"#utility.yul\":9235:9244   */\n      div\n        /* \"#utility.yul\":9230:9244   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9256:9447   */\n    tag_84:\n        /* \"#utility.yul\":9296:9299   */\n      0x00\n        /* \"#utility.yul\":9315:9335   */\n      tag_267\n        /* \"#utility.yul\":9333:9334   */\n      dup3\n        /* \"#utility.yul\":9315:9335   */\n      tag_140\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9310:9335   */\n      swap2\n      pop\n        /* \"#utility.yul\":9349:9369   */\n      tag_268\n        /* \"#utility.yul\":9367:9368   */\n      dup4\n        /* \"#utility.yul\":9349:9369   */\n      tag_140\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9344:9369   */\n      swap3\n      pop\n        /* \"#utility.yul\":9392:9393   */\n      dup3\n        /* \"#utility.yul\":9389:9390   */\n      dup3\n        /* \"#utility.yul\":9385:9394   */\n      add\n        /* \"#utility.yul\":9378:9394   */\n      swap1\n      pop\n        /* \"#utility.yul\":9413:9416   */\n      dup1\n        /* \"#utility.yul\":9410:9411   */\n      dup3\n        /* \"#utility.yul\":9407:9417   */\n      gt\n        /* \"#utility.yul\":9404:9440   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":9420:9438   */\n      tag_270\n      tag_151\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9404:9440   */\n    tag_269:\n        /* \"#utility.yul\":9256:9447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9453:9622   */\n    tag_155:\n        /* \"#utility.yul\":9537:9548   */\n      0x00\n        /* \"#utility.yul\":9571:9577   */\n      dup3\n        /* \"#utility.yul\":9566:9569   */\n      dup3\n        /* \"#utility.yul\":9559:9578   */\n      mstore\n        /* \"#utility.yul\":9611:9615   */\n      0x20\n        /* \"#utility.yul\":9606:9609   */\n      dup3\n        /* \"#utility.yul\":9602:9616   */\n      add\n        /* \"#utility.yul\":9587:9616   */\n      swap1\n      pop\n        /* \"#utility.yul\":9453:9622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9628:9799   */\n    tag_156:\n        /* \"#utility.yul\":9768:9791   */\n      0x4d6174683a206d756c446976206f766572666c6f770000000000000000000000\n        /* \"#utility.yul\":9764:9765   */\n      0x00\n        /* \"#utility.yul\":9756:9762   */\n      dup3\n        /* \"#utility.yul\":9752:9766   */\n      add\n        /* \"#utility.yul\":9745:9792   */\n      mstore\n        /* \"#utility.yul\":9628:9799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:10171   */\n    tag_157:\n        /* \"#utility.yul\":9947:9950   */\n      0x00\n        /* \"#utility.yul\":9968:10035   */\n      tag_274\n        /* \"#utility.yul\":10032:10034   */\n      0x15\n        /* \"#utility.yul\":10027:10030   */\n      dup4\n        /* \"#utility.yul\":9968:10035   */\n      tag_155\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9961:10035   */\n      swap2\n      pop\n        /* \"#utility.yul\":10044:10137   */\n      tag_275\n        /* \"#utility.yul\":10133:10136   */\n      dup3\n        /* \"#utility.yul\":10044:10137   */\n      tag_156\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10162:10164   */\n      0x20\n        /* \"#utility.yul\":10157:10160   */\n      dup3\n        /* \"#utility.yul\":10153:10165   */\n      add\n        /* \"#utility.yul\":10146:10165   */\n      swap1\n      pop\n        /* \"#utility.yul\":9805:10171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10177:10596   */\n    tag_130:\n        /* \"#utility.yul\":10343:10347   */\n      0x00\n        /* \"#utility.yul\":10381:10383   */\n      0x20\n        /* \"#utility.yul\":10370:10379   */\n      dup3\n        /* \"#utility.yul\":10366:10384   */\n      add\n        /* \"#utility.yul\":10358:10384   */\n      swap1\n      pop\n        /* \"#utility.yul\":10430:10439   */\n      dup2\n        /* \"#utility.yul\":10424:10428   */\n      dup2\n        /* \"#utility.yul\":10420:10440   */\n      sub\n        /* \"#utility.yul\":10416:10417   */\n      0x00\n        /* \"#utility.yul\":10405:10414   */\n      dup4\n        /* \"#utility.yul\":10401:10418   */\n      add\n        /* \"#utility.yul\":10394:10441   */\n      mstore\n        /* \"#utility.yul\":10458:10589   */\n      tag_277\n        /* \"#utility.yul\":10584:10588   */\n      dup2\n        /* \"#utility.yul\":10458:10589   */\n      tag_157\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10450:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122048185644a88b525690311361ff88e89d79227c1ed2f6dd26a7d5520297f1350864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D02EBF4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7D02EBF4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8444B813 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA7E7C9F9 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE51356E8 EQ PUSH2 0x1DD JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x2833D1F0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3E60D8E0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4B602C6D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x58633635 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x274 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH1 0xA PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x356 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x3B5 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C0 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x40F DUP12 DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B DUP3 DUP12 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x495 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH1 0x12 DUP4 PUSH1 0xFF AND EQ PUSH2 0x528 JUMPI PUSH2 0x514 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x51D DUP8 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0xA PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP6 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x567 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x5FD JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x627 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH2 0x63E DUP2 DUP5 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x6D0 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xFF AND SUB PUSH2 0x739 JUMPI DUP3 DUP5 PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP PUSH2 0x770 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP3 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x7E1 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EC PUSH2 0x96B JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x83B DUP12 DUP12 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x847 DUP3 DUP3 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x895 JUMPI DUP4 DUP3 DUP2 PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x964 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CE SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9E5 DUP3 PUSH2 0x99C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA03 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH2 0xA23 DUP3 DUP3 PUSH2 0x9DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP2 EQ PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA58 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA74 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP2 EQ PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA91 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH2 0xAAC PUSH2 0x997 JUMP JUMPDEST JUMPDEST PUSH2 0xAB7 PUSH1 0x40 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC7 DUP5 DUP3 DUP6 ADD PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xADB DUP5 DUP3 DUP6 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFE JUMPI PUSH2 0xAFD PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB1D DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xB5B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB6E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB36 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC05 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC6E DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xC79 DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCEE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCD9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCE7 DUP6 PUSH2 0xC97 JUMP JUMPDEST SWAP5 POP PUSH2 0xCAE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD07 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH2 0xD15 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD35 JUMPI PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP PUSH2 0xDC3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD99 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xDA6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP4 PUSH2 0xA5E JUMP JUMPDEST SWAP3 POP PUSH2 0xE0D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE20 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE39 DUP2 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9C DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xECD DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEE5 JUMPI PUSH2 0xEE4 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6174683A206D756C446976206F766572666C6F770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF32 PUSH1 0x15 DUP4 PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP PUSH2 0xF3D DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF61 DUP2 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE XOR JUMP PREVRANDAO 0xA8 DUP12 MSTORE JUMP SWAP1 BALANCE SGT PUSH2 0xFF88 0xE8 SWAP14 PUSH26 0x227C1ED2F6DD26A7D5520297F1350864736F6C63430008130033 ",
							"sourceMap": "1212:4796:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_338": {
									"entryPoint": 1070,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@asEther_683": {
									"entryPoint": 709,
									"id": 683,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@asNewDecimals_623": {
									"entryPoint": 1254,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_541": {
									"entryPoint": 1430,
									"id": 541,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mulDiv_1056": {
									"entryPoint": 2138,
									"id": 1056,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mul_475": {
									"entryPoint": 1641,
									"id": 475,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@scale_216": {
									"entryPoint": 1914,
									"id": 216,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@slice_283": {
									"entryPoint": 846,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_393": {
									"entryPoint": 525,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10599:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:3"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:3",
														"type": ""
													}
												],
												"src": "457:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:3"
															},
															"nodeType": "YulIf",
															"src": "907:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:3",
														"type": ""
													}
												],
												"src": "751:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:3",
														"type": ""
													}
												],
												"src": "1038:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:3"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1362:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1351:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1323:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1333:7:3",
														"type": ""
													}
												],
												"src": "1296:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1479:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1481:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1481:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1481:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1445:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1470:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1452:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1452:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1442:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1442:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1435:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1435:43:3"
															},
															"nodeType": "YulIf",
															"src": "1432:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1415:5:3",
														"type": ""
													}
												],
												"src": "1379:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1559:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1569:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1578:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1569:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1634:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1607:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1537:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1545:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1553:5:3",
														"type": ""
													}
												],
												"src": "1507:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1720:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1727:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1716:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:3",
														"type": ""
													}
												],
												"src": "1652:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:77:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1840:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1852:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1842:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1842:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1842:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1808:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1831:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "1815:15:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1815:22:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1805:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:33:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:41:3"
															},
															"nodeType": "YulIf",
															"src": "1795:61:3"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1778:5:3",
														"type": ""
													}
												],
												"src": "1744:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:85:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1928:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1937:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1928:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1991:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1966:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:31:3"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1896:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1904:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1912:5:3",
														"type": ""
													}
												],
												"src": "1868:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2124:497:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2168:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "2170:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2170:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2170:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2145:3:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2150:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2141:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:19:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2137:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:30:3"
															},
															"nodeType": "YulIf",
															"src": "2134:117:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2260:30:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2285:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2269:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2260:5:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2300:151:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2336:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2350:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2340:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2376:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2383:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2372:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2415:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2426:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2411:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2411:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2435:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2390:20:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2390:49:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2365:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:75:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2365:75:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2461:153:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2500:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2504:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2541:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2548:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2537:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2537:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2578:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2589:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2574:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2574:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2598:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2555:18:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2555:47:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2530:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:73:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2530:73:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2099:9:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2110:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2118:5:3",
														"type": ""
													}
												],
												"src": "2039:582:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:452:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2817:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2819:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2819:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2819:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2791:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2800:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2812:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:33:3"
															},
															"nodeType": "YulIf",
															"src": "2780:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2910:147:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2925:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2939:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2929:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2954:93:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2964:50:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2964:83:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2954:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3067:148:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3082:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3096:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3086:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3112:93:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3177:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3188:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3173:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3173:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3197:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3122:50:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:83:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3112:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2732:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2743:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2755:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2763:6:3",
														"type": ""
													}
												],
												"src": "2627:595:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3300:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3323:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3271:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3278:3:3",
														"type": ""
													}
												],
												"src": "3228:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3410:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3431:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3415:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3381:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3388:3:3",
														"type": ""
													}
												],
												"src": "3342:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3632:392:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3642:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3646:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3678:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3714:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3744:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3751:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3740:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3740:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3734:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3734:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3718:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3804:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3822:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3827:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3818:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3818:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3770:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3770:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3853:164:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3892:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3922:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3929:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3918:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3918:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3912:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3896:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3978:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3996:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4001:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3992:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3992:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3948:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3948:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3948:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3619:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3626:3:3",
														"type": ""
													}
												],
												"src": "3506:518:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4188:184:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4198:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4206:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4206:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4198:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4234:103:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:131:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4234:131:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4160:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4172:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4183:4:3",
														"type": ""
													}
												],
												"src": "4030:342:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4474:293:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4520:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4522:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4522:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4522:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4495:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4491:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4491:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:32:3"
															},
															"nodeType": "YulIf",
															"src": "4484:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4613:147:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4628:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4632:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4657:93:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4722:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4733:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4718:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4718:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4742:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4667:50:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:83:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4657:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4444:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4455:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4467:6:3",
														"type": ""
													}
												],
												"src": "4378:389:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4884:419:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4930:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4932:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4932:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4932:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4905:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4901:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4901:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4926:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:32:3"
															},
															"nodeType": "YulIf",
															"src": "4894:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5023:147:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5038:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5042:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5067:93:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5132:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5143:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5128:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5128:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5152:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_FixedPointValue_$6_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5077:50:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5077:83:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5067:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5180:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5195:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5199:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5225:61:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5258:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5269:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5254:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5254:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5278:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5235:18:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5235:51:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5225:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4846:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4857:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4869:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4877:6:3",
														"type": ""
													}
												],
												"src": "4773:530:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5370:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5387:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5408:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5392:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5392:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5358:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5365:3:3",
														"type": ""
													}
												],
												"src": "5309:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5545:198:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5555:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5567:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5578:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5555:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5631:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5644:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5655:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5591:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5591:67:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5721:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5732:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5717:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5717:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:68:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:68:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5509:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5521:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5529:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5540:4:3",
														"type": ""
													}
												],
												"src": "5427:316:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5787:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5787:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5884:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5884:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5908:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5749:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5980:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5990:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6013:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5995:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5990:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6024:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6047:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6029:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6024:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6070:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6073:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6066:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6066:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6058:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6100:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6102:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6102:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6102:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6091:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6097:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6088:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:11:3"
															},
															"nodeType": "YulIf",
															"src": "6085:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5966:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5969:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5975:4:3",
														"type": ""
													}
												],
												"src": "5935:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6186:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6196:34:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6224:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:13:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6196:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6167:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6177:8:3",
														"type": ""
													}
												],
												"src": "6135:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6316:775:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6326:15:3",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "6335:6:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6326:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6350:14:3",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "6359:5:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6350:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6408:677:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6496:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6498:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6498:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6498:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6474:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6484:3:3"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:3"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6480:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6480:14:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6471:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6471:24:3"
																		},
																		"nodeType": "YulIf",
																		"src": "6468:50:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6563:419:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6943:25:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6956:5:3"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6963:4:3"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6952:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6952:16:3"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6943:5:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6538:8:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6548:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6534:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6534:16:3"
																		},
																		"nodeType": "YulIf",
																		"src": "6531:451:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6995:23:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7007:4:3"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7013:4:3"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7003:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7003:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6995:4:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7031:44:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7066:8:3"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "7043:22:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7043:32:3"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7031:8:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6384:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6381:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6397:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6377:3:3",
																"statements": []
															},
															"src": "6373:712:3"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "6271:6:3",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "6279:5:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6286:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6296:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6304:5:3",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6311:4:3",
														"type": ""
													}
												],
												"src": "6243:848:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7157:1013:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7352:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7354:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7363:1:3",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7354:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7365:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7342:8:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7335:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7335:16:3"
															},
															"nodeType": "YulIf",
															"src": "7332:40:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7397:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7399:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7408:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7399:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7410:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7391:4:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:12:3"
															},
															"nodeType": "YulIf",
															"src": "7381:36:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7527:20:3",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7529:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7538:1:3",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7529:5:3"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7540:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7520:27:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7525:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7571:176:3",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7606:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7608:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7608:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7608:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7591:8:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7601:3:3",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7588:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7588:17:3"
																				},
																				"nodeType": "YulIf",
																				"src": "7585:43:3"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7641:25:3",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7654:1:3",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7657:8:3"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "7650:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7650:16:3"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7641:5:3"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7697:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7699:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7699:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7699:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7685:5:3"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7692:3:3"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7682:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7682:14:3"
																				},
																				"nodeType": "YulIf",
																				"src": "7679:40:3"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7732:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7556:191:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:1:3",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7477:4:3"
															},
															"nodeType": "YulSwitch",
															"src": "7470:277:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7879:123:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7893:28:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7906:4:3"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7912:8:3"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7902:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7902:19:3"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7893:5:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7952:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7954:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7954:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7954:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7940:5:3"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7947:3:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7937:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7937:14:3"
																		},
																		"nodeType": "YulIf",
																		"src": "7934:40:3"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7987:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7782:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7788:2:3",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7779:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7779:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7796:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7806:2:3",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7793:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7793:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7775:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7775:35:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7831:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7837:3:3",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7828:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7828:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7846:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7856:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7843:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7843:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:36:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7759:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:111:3"
															},
															"nodeType": "YulIf",
															"src": "7756:246:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8012:57:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8046:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8049:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8055:8:3"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "8065:3:3"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8027:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8027:42:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8012:5:3"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8019:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8108:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8110:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8110:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8110:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8085:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "8096:3:3"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8101:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:14:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8082:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:25:3"
															},
															"nodeType": "YulIf",
															"src": "8079:51:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8139:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8152:5:3"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8159:4:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:16:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8139:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7127:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7133:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7143:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7151:5:3",
														"type": ""
													}
												],
												"src": "7097:1073:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8240:217:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8250:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8276:4:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8258:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:23:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8250:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8318:8:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8302:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:25:3"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "8290:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8337:113:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8367:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8373:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8383:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8346:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:104:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8337:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8215:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8221:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8234:5:3",
														"type": ""
													}
												],
												"src": "8176:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8511:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8521:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8544:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8526:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8526:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8521:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8555:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8578:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8560:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8555:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8589:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8612:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8615:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8593:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8626:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8655:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8637:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8637:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8626:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8846:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8777:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8770:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8770:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8800:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8807:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8816:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8803:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8803:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8797:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8797:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8750:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8750:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:113:3"
															},
															"nodeType": "YulIf",
															"src": "8727:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8494:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8497:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8503:7:3",
														"type": ""
													}
												],
												"src": "8463:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8917:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8917:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9021:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9024:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9014:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9048:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9038:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9038:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8879:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9107:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9117:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9140:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9122:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9117:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9151:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9174:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9156:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9151:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9198:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9200:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9200:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9200:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9195:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9188:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:9:3"
															},
															"nodeType": "YulIf",
															"src": "9185:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9230:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9239:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9242:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9235:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9230:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9096:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9099:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9105:1:3",
														"type": ""
													}
												],
												"src": "9065:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9300:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9310:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9333:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9315:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9310:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9344:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9367:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9349:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9344:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9378:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9389:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9392:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9385:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9418:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9420:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9420:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9420:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9410:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9413:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9407:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:10:3"
															},
															"nodeType": "YulIf",
															"src": "9404:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9287:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9290:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9296:3:3",
														"type": ""
													}
												],
												"src": "9256:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9549:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9566:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9571:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9559:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9587:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9606:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9602:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9602:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9587:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9521:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9526:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9537:11:3",
														"type": ""
													}
												],
												"src": "9453:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9734:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9756:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9764:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9752:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9752:14:3"
																	},
																	{
																		"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9768:23:3",
																		"type": "",
																		"value": "Math: mulDiv overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9745:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9745:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9726:6:3",
														"type": ""
													}
												],
												"src": "9628:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9951:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9961:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10027:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9968:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10133:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																	"nodeType": "YulIdentifier",
																	"src": "10044:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10044:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10044:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10146:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10157:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10162:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10153:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10153:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9939:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9947:3:3",
														"type": ""
													}
												],
												"src": "9805:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10348:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10358:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10370:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10366:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10358:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10405:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10416:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10401:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10401:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10424:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10430:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10420:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10394:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10450:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10584:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10458:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10450:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10328:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10343:4:3",
														"type": ""
													}
												],
												"src": "10177:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct FixedPointValue\n    function abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // value\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // decimals\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct FixedPointValue -> struct FixedPointValue\n    function abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // decimals\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FixedPointValue_$6_memory_ptr__to_t_struct$_FixedPointValue_$6_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_FixedPointValue_$6_memory_ptr_to_t_struct$_FixedPointValue_$6_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_FixedPointValue_$6_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_FixedPointValue_$6_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint8__to_t_uint8_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851(memPtr) {\n\n        mstore(add(memPtr, 0), \"Math: mulDiv overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80637d02ebf41161005b5780637d02ebf41461014d5780638444b8131461017d578063a7e7c9f9146101ad578063e51356e8146101dd57610088565b80632833d1f01461008d5780633e60d8e0146100bd5780634b602c6d146100ed578063586336351461011d575b600080fd5b6100a760048036038101906100a29190610ae7565b61020d565b6040516100b49190610b74565b60405180910390f35b6100d760048036038101906100d29190610b8f565b6102c5565b6040516100e49190610b74565b60405180910390f35b61010760048036038101906101029190610ae7565b61034e565b6040516101149190610b74565b60405180910390f35b61013760048036038101906101329190610ae7565b61042e565b6040516101449190610b74565b60405180910390f35b61016760048036038101906101629190610bbc565b6104e6565b6040516101749190610b74565b60405180910390f35b61019760048036038101906101929190610ae7565b610596565b6040516101a49190610b74565b60405180910390f35b6101c760048036038101906101c29190610ae7565b610669565b6040516101d49190610b74565b60405180910390f35b6101f760048036038101906101f29190610ae7565b61077a565b6040516102049190610b74565b60405180910390f35b61021561096b565b828260008083602001519150826020015190508060ff168260ff16146102745781816040517f5bc4748600000000000000000000000000000000000000000000000000000000815260040161026b929190610c0b565b60405180910390fd5b6000806000808a6020015193508a60000151925089600001519150818361029b9190610c63565b905060405180604001604052808281526020018560ff168152509850505050505050505092915050565b6102cd61096b565b60008060008460200151925084600001519150670de0b6b3a76400008084600a6102f79190610dca565b670de0b6b3a76400008561030b9190610e15565b6103159190610e86565b61031f9190610e15565b6103299190610e86565b90506040518060400160405280828152602001601260ff168152509350505050919050565b61035661096b565b828260008083602001519150826020015190508060ff168260ff16146103b55781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016103ac929190610c0b565b60405180910390fd5b6000806103c061096b565b6103c861096b565b8a60200151935083600a6103dc9190610dca565b92506040518060400160405280846127106103f79190610e15565b81526020018560ff16815250905061040f8b82610596565b915061041b828b610669565b9150819850505050505050505092915050565b61043661096b565b828260008083602001519150826020015190508060ff168260ff16146104955781816040517f5bc4748600000000000000000000000000000000000000000000000000000000815260040161048c929190610c0b565b60405180910390fd5b6000806000808a6020015193508a6000015192508960000151915081836104bc9190610eb7565b905060405180604001604052808281526020018560ff168152509850505050505050505092915050565b6104ee61096b565b6000806000856020015192508560000151915060128360ff16146105285761051461096b565b61051d876102c5565b905080600001519250505b670de0b6b3a764000085600a61053e9190610dca565b670de0b6b3a764000080856105539190610e15565b61055d9190610e86565b6105679190610e15565b6105719190610e86565b905060405180604001604052808281526020018660ff16815250935050505092915050565b61059e61096b565b828260008083602001519150826020015190508060ff168260ff16146105fd5781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016105f4929190610c0b565b60405180910390fd5b60008060008060008b6020015194508b6000015193508a60000151925084600a6106279190610dca565b905061063e81848661085a9092919063ffffffff16565b915060405180604001604052808381526020018660ff16815250995050505050505050505092915050565b61067161096b565b828260008083602001519150826020015190508060ff168260ff16146106d05781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016106c7929190610c0b565b60405180910390fd5b60008060008060008b6020015194508b6000015193508a60000151925084600a6106fa9190610dca565b905060008560ff16036107395782846107139190610e15565b915060405180604001604052808381526020018660ff1681525099505050505050610770565b61074e83828661085a9092919063ffffffff16565b915060405180604001604052808381526020018660ff16815250995050505050505b5050505092915050565b61078261096b565b828260008083602001519150826020015190508060ff168260ff16146107e15781816040517f5bc474860000000000000000000000000000000000000000000000000000000081526004016107d8929190610c0b565b60405180910390fd5b6000806107ec61096b565b6107f461096b565b8a60200151935083600a6108089190610dca565b92506040518060400160405280846127106108239190610e15565b81526020018560ff16815250905061083b8b8b610596565b91506108478282610669565b9150819850505050505050505092915050565b60008060008019858709858702925082811083820303915050600081036108955783828161088b5761088a610e57565b5b0492505050610964565b8084116108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90610f48565b60405180910390fd5b60008486880990508281118203915080830392506000600186190186169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b604051806040016040528060008152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109e58261099c565b810181811067ffffffffffffffff82111715610a0457610a036109ad565b5b80604052505050565b6000610a17610988565b9050610a2382826109dc565b919050565b6000819050919050565b610a3b81610a28565b8114610a4657600080fd5b50565b600081359050610a5881610a32565b92915050565b600060ff82169050919050565b610a7481610a5e565b8114610a7f57600080fd5b50565b600081359050610a9181610a6b565b92915050565b600060408284031215610aad57610aac610997565b5b610ab76040610a0d565b90506000610ac784828501610a49565b6000830152506020610adb84828501610a82565b60208301525092915050565b60008060808385031215610afe57610afd610992565b5b6000610b0c85828601610a97565b9250506040610b1d85828601610a97565b9150509250929050565b610b3081610a28565b82525050565b610b3f81610a5e565b82525050565b604082016000820151610b5b6000850182610b27565b506020820151610b6e6020850182610b36565b50505050565b6000604082019050610b896000830184610b45565b92915050565b600060408284031215610ba557610ba4610992565b5b6000610bb384828501610a97565b91505092915050565b60008060608385031215610bd357610bd2610992565b5b6000610be185828601610a97565b9250506040610bf285828601610a82565b9150509250929050565b610c0581610a5e565b82525050565b6000604082019050610c206000830185610bfc565b610c2d6020830184610bfc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610a28565b9150610c7983610a28565b9250828203905081811115610c9157610c90610c34565b5b92915050565b60008160011c9050919050565b6000808291508390505b6001851115610cee57808604811115610cca57610cc9610c34565b5b6001851615610cd95780820291505b8081029050610ce785610c97565b9450610cae565b94509492505050565b600082610d075760019050610dc3565b81610d155760009050610dc3565b8160018114610d2b5760028114610d3557610d64565b6001915050610dc3565b60ff841115610d4757610d46610c34565b5b8360020a915084821115610d5e57610d5d610c34565b5b50610dc3565b5060208310610133831016604e8410600b8410161715610d995782820a905083811115610d9457610d93610c34565b5b610dc3565b610da68484846001610ca4565b92509050818404811115610dbd57610dbc610c34565b5b81810290505b9392505050565b6000610dd582610a28565b9150610de083610a5e565b9250610e0d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610cf7565b905092915050565b6000610e2082610a28565b9150610e2b83610a28565b9250828202610e3981610a28565b91508282048414831517610e5057610e4f610c34565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9182610a28565b9150610e9c83610a28565b925082610eac57610eab610e57565b5b828204905092915050565b6000610ec282610a28565b9150610ecd83610a28565b9250828201905080821115610ee557610ee4610c34565b5b92915050565b600082825260208201905092915050565b7f4d6174683a206d756c446976206f766572666c6f770000000000000000000000600082015250565b6000610f32601583610eeb565b9150610f3d82610efc565b602082019050919050565b60006020820190508181036000830152610f6181610f25565b905091905056fea264697066735822122048185644a88b525690311361ff88e89d79227c1ed2f6dd26a7d5520297f1350864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D02EBF4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7D02EBF4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x8444B813 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA7E7C9F9 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE51356E8 EQ PUSH2 0x1DD JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x2833D1F0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3E60D8E0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x4B602C6D EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x58633635 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x274 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP5 PUSH1 0xA PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x356 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x3B5 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C0 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x40F DUP12 DUP3 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B DUP3 DUP12 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x495 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP10 PUSH1 0x0 ADD MLOAD SWAP2 POP DUP2 DUP4 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x96B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x0 ADD MLOAD SWAP2 POP PUSH1 0x12 DUP4 PUSH1 0xFF AND EQ PUSH2 0x528 JUMPI PUSH2 0x514 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x51D DUP8 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP6 PUSH1 0xA PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP6 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x567 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x5FD JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F4 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x627 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH2 0x63E DUP2 DUP5 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x6D0 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD SWAP5 POP DUP12 PUSH1 0x0 ADD MLOAD SWAP4 POP DUP11 PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0xA PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xFF AND SUB PUSH2 0x739 JUMPI DUP3 DUP5 PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP PUSH2 0x770 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP3 DUP7 PUSH2 0x85A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0x96B JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP2 POP DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ PUSH2 0x7E1 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x5BC4748600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EC PUSH2 0x96B JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x96B JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP4 PUSH1 0xA PUSH2 0x808 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH2 0x2710 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x83B DUP12 DUP12 PUSH2 0x596 JUMP JUMPDEST SWAP2 POP PUSH2 0x847 DUP3 DUP3 PUSH2 0x669 JUMP JUMPDEST SWAP2 POP DUP2 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x895 JUMPI DUP4 DUP3 DUP2 PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x964 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CE SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9E5 DUP3 PUSH2 0x99C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA04 JUMPI PUSH2 0xA03 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA17 PUSH2 0x988 JUMP JUMPDEST SWAP1 POP PUSH2 0xA23 DUP3 DUP3 PUSH2 0x9DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP2 EQ PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA58 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA74 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP2 EQ PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA91 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH2 0xAAC PUSH2 0x997 JUMP JUMPDEST JUMPDEST PUSH2 0xAB7 PUSH1 0x40 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC7 DUP5 DUP3 DUP6 ADD PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xADB DUP5 DUP3 DUP6 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFE JUMPI PUSH2 0xAFD PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB1D DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3F DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xB5B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xB27 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB6E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB36 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC05 DUP2 PUSH2 0xA5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC6E DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xC79 DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCEE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCCA JUMPI PUSH2 0xCC9 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCD9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCE7 DUP6 PUSH2 0xC97 JUMP JUMPDEST SWAP5 POP PUSH2 0xCAE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD07 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH2 0xD15 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD35 JUMPI PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP PUSH2 0xDC3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD99 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xDA6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xC34 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD5 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE0 DUP4 PUSH2 0xA5E JUMP JUMPDEST SWAP3 POP PUSH2 0xE0D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE20 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE39 DUP2 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0xC34 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9C DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0xE57 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP3 PUSH2 0xA28 JUMP JUMPDEST SWAP2 POP PUSH2 0xECD DUP4 PUSH2 0xA28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEE5 JUMPI PUSH2 0xEE4 PUSH2 0xC34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6174683A206D756C446976206F766572666C6F770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF32 PUSH1 0x15 DUP4 PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP PUSH2 0xF3D DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF61 DUP2 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE XOR JUMP PREVRANDAO 0xA8 DUP12 MSTORE JUMP SWAP1 BALANCE SGT PUSH2 0xFF88 0xE8 SWAP14 PUSH26 0x227C1ED2F6DD26A7D5520297F1350864736F6C63430008130033 ",
							"sourceMap": "1212:4796:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3300:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5616:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2242:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2836:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5028:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4471:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3764:701;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:568;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3300:458;3436:22;;:::i;:::-;3415:4;3421;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;3470:14:::1;3494::::0;3518::::1;3542::::0;3577:4:::1;:13;;;3566:24;;3609:4;:10;;;3600:19;;3638:4;:10;;;3629:19;;3676:6;3667;:15;;;;:::i;:::-;3658:24;;3699:52;;;;;;;;3723:6;3699:52;;;;3741:8;3699:52;;;;::::0;3692:59:::1;;;;;;1437:225:::0;;3300:458;;;;;;:::o;5616:390::-;5682:22;;:::i;:::-;5716:21;5747:13;5770:14;5812:3;:12;;;5794:30;;5842:3;:9;;;5834:17;;5929:6;5917;5896:15;5892:2;:19;;;;:::i;:::-;5881:6;5872:5;:16;;;;:::i;:::-;:40;;;;:::i;:::-;5871:53;;;;:::i;:::-;5870:66;;;;:::i;:::-;5861:75;;5953:46;;;;;;;;5977:6;5953:46;;;;5995:2;5953:46;;;;;5946:53;;;;;5616:390;;;:::o;2242:588::-;2402:22;;:::i;:::-;2370:3;2375:16;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;2436:14:::1;2460:22:::0;2492:29:::1;;:::i;:::-;2531:28;;:::i;:::-;2580:3;:12;;;2569:23;;2623:8;2619:2;:12;;;;:::i;:::-;2602:29;;2649:69;;;;;;;;2682:14;2673:6;:23;;;;:::i;:::-;2649:69;;;;2708:8;2649:69;;;;::::0;2641:77:::1;;2737:15;2741:3;2746:5;2737:3;:15::i;:::-;2728:24;;2771:29;2775:6;2783:16;2771:3;:29::i;:::-;2762:38;;2817:6;2810:13;;;;;;1437:225:::0;;2242:588;;;;;;:::o;2836:458::-;2972:22;;:::i;:::-;2951:4;2957;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;3006:14:::1;3030::::0;3054::::1;3078::::0;3113:4:::1;:13;;;3102:24;;3145:4;:10;;;3136:19;;3174:4;:10;;;3165:19;;3212:6;3203;:15;;;;:::i;:::-;3194:24;;3235:52;;;;;;;;3259:6;3235:52;;;;3277:8;3235:52;;;;::::0;3228:59:::1;;;;;;1437:225:::0;;2836:458;;;;;;:::o;5028:582::-;5116:22;;:::i;:::-;5150:21;5181:13;5204:14;5246:3;:12;;;5228:30;;5276:3;:9;;;5268:17;;5318:2;5299:15;:21;;;5295:162;;5336:33;;:::i;:::-;5396:12;5404:3;5396:7;:12::i;:::-;5383:25;;5430:10;:16;;;5422:24;;5322:135;5295:162;5527:6;5513:8;5509:2;:12;;;;:::i;:::-;5497:6;5486;5477:5;:16;;;;:::i;:::-;:27;;;;:::i;:::-;5476:46;;;;:::i;:::-;5475:59;;;;:::i;:::-;5466:68;;5551:52;;;;;;;;5575:6;5551:52;;;;5593:8;5551:52;;;;;5544:59;;;;;5028:582;;;;:::o;4471:551::-;4607:22;;:::i;:::-;4586:4;4592;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;4641:14:::1;4665::::0;4689::::1;4713::::0;4737:22:::1;4780:4;:13;;;4769:24;;4812:4;:10;;;4803:19;;4841:4;:10;;;4832:19;;4882:8;4878:2;:12;;;;:::i;:::-;4861:29;;4909:37;4923:14;4939:6;4909;:13;;:37;;;;;:::i;:::-;4900:46;;4963:52;;;;;;;;4987:6;4963:52;;;;5005:8;4963:52;;;;::::0;4956:59:::1;;;;;;;1437:225:::0;;4471:551;;;;;;:::o;3764:701::-;3900:22;;:::i;:::-;3879:4;3885;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;3934:14:::1;3958::::0;3982::::1;4006::::0;4030:22:::1;4073:4;:13;;;4062:24;;4105:4;:10;;;4096:19;;4134:4;:10;;;4125:19;;4175:8;4171:2;:12;;;;:::i;:::-;4154:29;;4209:1;4197:8;:13;;::::0;4193:141:::1;;4244:6;4235;:15;;;;:::i;:::-;4226:24;;4271:52;;;;;;;;4295:6;4271:52;;;;4313:8;4271:52;;;;::::0;4264:59:::1;;;;;;;;;4193:141;4352:37;4366:6;4374:14;4352:6;:13;;:37;;;;;:::i;:::-;4343:46;;4406:52;;;;;;;;4430:6;4406:52;;;;4448:8;4406:52;;;;::::0;4399:59:::1;;;;;;;1654:1;1437:225:::0;;3764:701;;;;;;:::o;1668:568::-;1806:34;;:::i;:::-;1785:4;1791;1447:15;1472;1509:4;:13;;;1497:25;;1544:4;:13;;;1532:25;;1584:9;1571:22;;:9;:22;;;1567:77;;1623:9;1634;1602:42;;;;;;;;;;;;:::i;:::-;;;;;;;;1567:77;1852:14:::1;1876:22:::0;1908:29:::1;;:::i;:::-;1947:28;;:::i;:::-;1996:4;:13;;;1985:24;;2040:8;2036:2;:12;;;;:::i;:::-;2019:29;;2066:69;;;;;;;;2099:14;2090:6;:23;;;;:::i;:::-;2066:69;;;;2125:8;2066:69;;;;::::0;2058:77:::1;;2154:15;2158:4;2164;2154:3;:15::i;:::-;2145:24;;2188:18;2192:6;2200:5;2188:3;:18::i;:::-;2179:27;;2223:6;2216:13;;;;;;1437:225:::0;;1668:568;;;;;;:::o;3689:4213:2:-;3771:14;4118:13;4190;4315:1;4311:6;4308:1;4305;4298:20;4351:1;4348;4344:9;4335:18;;4406:5;4402:2;4399:13;4391:5;4387:2;4383:14;4379:34;4370:43;;4270:157;4517:1;4508:5;:10;4504:368;;4846:11;4838:5;:19;;;;;:::i;:::-;;;4831:26;;;;;;4504:368;4996:5;4982:11;:19;4974:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5283:17;5418:11;5415:1;5412;5405:25;5392:38;;5546:5;5535:9;5532:20;5525:5;5521:32;5512:41;;5590:9;5583:5;5579:21;5570:30;;5921:12;5966:1;5952:11;5951:12;:16;5936:11;:32;5921:47;;6088:4;6075:11;6071:22;6056:37;;6180:4;6173:5;6169:16;6160:25;;6337:1;6330:4;6323;6320:1;6316:12;6312:23;6308:31;6300:39;;6436:4;6428:5;:12;6419:21;;;;6758:15;6796:1;6781:11;6777:1;:15;6776:21;6758:39;;7043:7;7029:11;:21;7025:1;:25;7014:36;;;;7112:7;7098:11;:21;7094:1;:25;7083:36;;;;7182:7;7168:11;:21;7164:1;:25;7153:36;;;;7252:7;7238:11;:21;7234:1;:25;7223:36;;;;7322:7;7308:11;:21;7304:1;:25;7293:36;;;;7393:7;7379:11;:21;7375:1;:25;7364:36;;;;7851:7;7843:5;:15;7834:24;;7872:13;;;;;3689:4213;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1296:77::-;1333:7;1362:5;1351:16;;1296:77;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:63;;1491:1;1488;1481:12;1432:63;1379:122;:::o;1507:139::-;1553:5;1591:6;1578:20;1569:29;;1607:33;1634:5;1607:33;:::i;:::-;1507:139;;;;:::o;1652:86::-;1687:7;1727:4;1720:5;1716:16;1705:27;;1652:86;;;:::o;1744:118::-;1815:22;1831:5;1815:22;:::i;:::-;1808:5;1805:33;1795:61;;1852:1;1849;1842:12;1795:61;1744:118;:::o;1868:135::-;1912:5;1950:6;1937:20;1928:29;;1966:31;1991:5;1966:31;:::i;:::-;1868:135;;;;:::o;2039:582::-;2118:5;2162:4;2150:9;2145:3;2141:19;2137:30;2134:117;;;2170:79;;:::i;:::-;2134:117;2269:21;2285:4;2269:21;:::i;:::-;2260:30;;2350:1;2390:49;2435:3;2426:6;2415:9;2411:22;2390:49;:::i;:::-;2383:4;2376:5;2372:16;2365:75;2300:151;2514:2;2555:47;2598:3;2589:6;2578:9;2574:22;2555:47;:::i;:::-;2548:4;2541:5;2537:16;2530:73;2461:153;2039:582;;;;:::o;2627:595::-;2755:6;2763;2812:3;2800:9;2791:7;2787:23;2783:33;2780:120;;;2819:79;;:::i;:::-;2780:120;2939:1;2964:83;3039:7;3030:6;3019:9;3015:22;2964:83;:::i;:::-;2954:93;;2910:147;3096:2;3122:83;3197:7;3188:6;3177:9;3173:22;3122:83;:::i;:::-;3112:93;;3067:148;2627:595;;;;;:::o;3228:108::-;3305:24;3323:5;3305:24;:::i;:::-;3300:3;3293:37;3228:108;;:::o;3342:102::-;3415:22;3431:5;3415:22;:::i;:::-;3410:3;3403:35;3342:102;;:::o;3506:518::-;3663:4;3658:3;3654:14;3751:4;3744:5;3740:16;3734:23;3770:63;3827:4;3822:3;3818:14;3804:12;3770:63;:::i;:::-;3678:165;3929:4;3922:5;3918:16;3912:23;3948:59;4001:4;3996:3;3992:14;3978:12;3948:59;:::i;:::-;3853:164;3632:392;3506:518;;:::o;4030:342::-;4183:4;4221:2;4210:9;4206:18;4198:26;;4234:131;4362:1;4351:9;4347:17;4338:6;4234:131;:::i;:::-;4030:342;;;;:::o;4378:389::-;4467:6;4516:2;4504:9;4495:7;4491:23;4487:32;4484:119;;;4522:79;;:::i;:::-;4484:119;4642:1;4667:83;4742:7;4733:6;4722:9;4718:22;4667:83;:::i;:::-;4657:93;;4613:147;4378:389;;;;:::o;4773:530::-;4869:6;4877;4926:2;4914:9;4905:7;4901:23;4897:32;4894:119;;;4932:79;;:::i;:::-;4894:119;5052:1;5077:83;5152:7;5143:6;5132:9;5128:22;5077:83;:::i;:::-;5067:93;;5023:147;5209:2;5235:51;5278:7;5269:6;5258:9;5254:22;5235:51;:::i;:::-;5225:61;;5180:116;4773:530;;;;;:::o;5309:112::-;5392:22;5408:5;5392:22;:::i;:::-;5387:3;5380:35;5309:112;;:::o;5427:316::-;5540:4;5578:2;5567:9;5563:18;5555:26;;5591:67;5655:1;5644:9;5640:17;5631:6;5591:67;:::i;:::-;5668:68;5732:2;5721:9;5717:18;5708:6;5668:68;:::i;:::-;5427:316;;;;;:::o;5749:180::-;5797:77;5794:1;5787:88;5894:4;5891:1;5884:15;5918:4;5915:1;5908:15;5935:194;5975:4;5995:20;6013:1;5995:20;:::i;:::-;5990:25;;6029:20;6047:1;6029:20;:::i;:::-;6024:25;;6073:1;6070;6066:9;6058:17;;6097:1;6091:4;6088:11;6085:37;;;6102:18;;:::i;:::-;6085:37;5935:194;;;;:::o;6135:102::-;6177:8;6224:5;6221:1;6217:13;6196:34;;6135:102;;;:::o;6243:848::-;6304:5;6311:4;6335:6;6326:15;;6359:5;6350:14;;6373:712;6394:1;6384:8;6381:15;6373:712;;;6489:4;6484:3;6480:14;6474:4;6471:24;6468:50;;;6498:18;;:::i;:::-;6468:50;6548:1;6538:8;6534:16;6531:451;;;6963:4;6956:5;6952:16;6943:25;;6531:451;7013:4;7007;7003:15;6995:23;;7043:32;7066:8;7043:32;:::i;:::-;7031:44;;6373:712;;;6243:848;;;;;;;:::o;7097:1073::-;7151:5;7342:8;7332:40;;7363:1;7354:10;;7365:5;;7332:40;7391:4;7381:36;;7408:1;7399:10;;7410:5;;7381:36;7477:4;7525:1;7520:27;;;;7561:1;7556:191;;;;7470:277;;7520:27;7538:1;7529:10;;7540:5;;;7556:191;7601:3;7591:8;7588:17;7585:43;;;7608:18;;:::i;:::-;7585:43;7657:8;7654:1;7650:16;7641:25;;7692:3;7685:5;7682:14;7679:40;;;7699:18;;:::i;:::-;7679:40;7732:5;;;7470:277;;7856:2;7846:8;7843:16;7837:3;7831:4;7828:13;7824:36;7806:2;7796:8;7793:16;7788:2;7782:4;7779:12;7775:35;7759:111;7756:246;;;7912:8;7906:4;7902:19;7893:28;;7947:3;7940:5;7937:14;7934:40;;;7954:18;;:::i;:::-;7934:40;7987:5;;7756:246;8027:42;8065:3;8055:8;8049:4;8046:1;8027:42;:::i;:::-;8012:57;;;;8101:4;8096:3;8092:14;8085:5;8082:25;8079:51;;;8110:18;;:::i;:::-;8079:51;8159:4;8152:5;8148:16;8139:25;;7097:1073;;;;;;:::o;8176:281::-;8234:5;8258:23;8276:4;8258:23;:::i;:::-;8250:31;;8302:25;8318:8;8302:25;:::i;:::-;8290:37;;8346:104;8383:66;8373:8;8367:4;8346:104;:::i;:::-;8337:113;;8176:281;;;;:::o;8463:410::-;8503:7;8526:20;8544:1;8526:20;:::i;:::-;8521:25;;8560:20;8578:1;8560:20;:::i;:::-;8555:25;;8615:1;8612;8608:9;8637:30;8655:11;8637:30;:::i;:::-;8626:41;;8816:1;8807:7;8803:15;8800:1;8797:22;8777:1;8770:9;8750:83;8727:139;;8846:18;;:::i;:::-;8727:139;8511:362;8463:410;;;;:::o;8879:180::-;8927:77;8924:1;8917:88;9024:4;9021:1;9014:15;9048:4;9045:1;9038:15;9065:185;9105:1;9122:20;9140:1;9122:20;:::i;:::-;9117:25;;9156:20;9174:1;9156:20;:::i;:::-;9151:25;;9195:1;9185:35;;9200:18;;:::i;:::-;9185:35;9242:1;9239;9235:9;9230:14;;9065:185;;;;:::o;9256:191::-;9296:3;9315:20;9333:1;9315:20;:::i;:::-;9310:25;;9349:20;9367:1;9349:20;:::i;:::-;9344:25;;9392:1;9389;9385:9;9378:16;;9413:3;9410:1;9407:10;9404:36;;;9420:18;;:::i;:::-;9404:36;9256:191;;;;:::o;9453:169::-;9537:11;9571:6;9566:3;9559:19;9611:4;9606:3;9602:14;9587:29;;9453:169;;;;:::o;9628:171::-;9768:23;9764:1;9756:6;9752:14;9745:47;9628:171;:::o;9805:366::-;9947:3;9968:67;10032:2;10027:3;9968:67;:::i;:::-;9961:74;;10044:93;10133:3;10044:93;:::i;:::-;10162:2;10157:3;10153:12;10146:19;;9805:366;;;:::o;10177:419::-;10343:4;10381:2;10370:9;10366:18;10358:26;;10430:9;10424:4;10420:20;10416:1;10405:9;10401:17;10394:47;10458:131;10584:4;10458:131;:::i;:::-;10450:139;;10177:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "799600",
								"executionCost": "831",
								"totalCost": "800431"
							},
							"external": {
								"add((uint256,uint8),(uint256,uint8))": "infinite",
								"asEther((uint256,uint8))": "infinite",
								"asNewDecimals((uint256,uint8),uint8)": "infinite",
								"div((uint256,uint8),(uint256,uint8))": "infinite",
								"mul((uint256,uint8),(uint256,uint8))": "infinite",
								"scale((uint256,uint8),(uint256,uint8))": "infinite",
								"slice((uint256,uint8),(uint256,uint8))": "infinite",
								"sub((uint256,uint8),(uint256,uint8))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 6008,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048185644a88b525690311361ff88e89d79227c1ed2f6dd26a7d5520297f1350864736f6c63430008130033",
									".code": [
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "7D02EBF4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "7D02EBF4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "8444B813"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "A7E7C9F9"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "E51356E8"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "2833D1F0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "3E60D8E0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "4B602C6D"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "58633635"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 6008,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3436,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3613,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3642,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3667,
											"end": 3682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3667,
											"end": 3682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3682,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3729,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3749,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3751,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5682,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5682,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5824,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5911,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5892,
											"end": 5911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5892,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5887,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5872,
											"end": 5877,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5872,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5872,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5872,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5871,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5871,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5870,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5870,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 6006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2402,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2492,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2492,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2531,
											"end": 2559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2531,
											"end": 2559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2592,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2619,
											"end": 2631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2619,
											"end": 2631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2631,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2673,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2673,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2741,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2751,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2737,
											"end": 2752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2737,
											"end": 2752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2752,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2752,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2775,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2799,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2771,
											"end": 2800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2771,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2972,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2972,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3126,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3126,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3126,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3149,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3155,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3178,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3209,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3203,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3203,
											"end": 3218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3265,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3285,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 3294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5116,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5279,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5299,
											"end": 5314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5320,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5299,
											"end": 5320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5336,
											"end": 5369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5336,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5404,
											"end": 5407,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5396,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5396,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5295,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5513,
											"end": 5521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5509,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5486,
											"end": 5492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5482,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5477,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5477,
											"end": 5504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5476,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5476,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5475,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5475,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5601,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4607,
											"end": 4629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4607,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4784,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4780,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4816,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4822,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4890,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4878,
											"end": 4890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4923,
											"end": 4937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4945,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4915,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4909,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4909,
											"end": 4946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5013,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 5015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3900,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3900,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4086,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4109,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4115,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4138,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4144,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4183,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4171,
											"end": 4183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4171,
											"end": 4183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4205,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4197,
											"end": 4210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4210,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4250,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4235,
											"end": 4250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4235,
											"end": 4250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4301,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4264,
											"end": 4323,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4193,
											"end": 4334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4366,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4352,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4352,
											"end": 4389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4436,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4456,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1654,
											"end": 1655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1806,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1806,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "5BC4748600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1602,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1567,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1908,
											"end": 1937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1908,
											"end": 1937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1947,
											"end": 1975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2048,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2036,
											"end": 2048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2036,
											"end": 2048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2048,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2048,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2113,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2090,
											"end": 2113,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2090,
											"end": 2113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2158,
											"end": 2162,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2154,
											"end": 2169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2192,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2188,
											"end": 2206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2188,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2206,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4318,
											"name": "MULMOD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4412,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4413,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4518,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4838,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4857,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4831,
											"end": 4857,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4504,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 5001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4974,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4974,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5429,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "MULMOD",
											"source": 2
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5535,
											"end": 5544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5532,
											"end": 5552,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5512,
											"end": 5553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5512,
											"end": 5553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5570,
											"end": 5600,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5570,
											"end": 5600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5921,
											"end": 5933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5952,
											"end": 5963,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5951,
											"end": 5963,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5951,
											"end": 5967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5936,
											"end": 5947,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5936,
											"end": 5968,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5921,
											"end": 5968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5921,
											"end": 5968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6075,
											"end": 6086,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6071,
											"end": 6093,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6093,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6160,
											"end": 6185,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6160,
											"end": 6185,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6335,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6436,
											"end": 6440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6433,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6440,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6758,
											"end": 6773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6781,
											"end": 6792,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6777,
											"end": 6792,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6776,
											"end": 6797,
											"name": "XOR",
											"source": 2
										},
										{
											"begin": 6758,
											"end": 6797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6758,
											"end": 6797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7043,
											"end": 7050,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7040,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7050,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7025,
											"end": 7050,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7014,
											"end": 7050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7109,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7119,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7094,
											"end": 7119,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7182,
											"end": 7189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7179,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7189,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7164,
											"end": 7189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7238,
											"end": 7249,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7238,
											"end": 7259,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7234,
											"end": 7235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7234,
											"end": 7259,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7308,
											"end": 7329,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7304,
											"end": 7329,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7390,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7375,
											"end": 7400,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7843,
											"end": 7848,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7834,
											"end": 7858,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7834,
											"end": 7858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3689,
											"end": 7902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 457,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 834,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 975,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 751,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1099,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1501,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1379,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1452,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1452,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1477,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1432,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1634,
											"end": 1639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1607,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1607,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1738,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1744,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1815,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1815,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1854,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1991,
											"end": 1996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1966,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1966,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2148,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2167,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2170,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2170,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2134,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2285,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2269,
											"end": 2290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2269,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2411,
											"end": 2433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2390,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2390,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2598,
											"end": 2601,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2555,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2815,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2787,
											"end": 2810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2819,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2819,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2780,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2964,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2964,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3047,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 3057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3188,
											"end": 3194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3122,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3122,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3305,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3431,
											"end": 3436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3415,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3415,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3410,
											"end": 3413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3403,
											"end": 3438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3668,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3734,
											"end": 3757,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3770,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3770,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3678,
											"end": 3843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3935,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4001,
											"end": 4005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 3999,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 3990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3948,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3948,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 4017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 4024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4198,
											"end": 4224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4198,
											"end": 4224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4234,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4467,
											"end": 4473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4514,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4519,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4522,
											"end": 4601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4522,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4484,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4731,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4718,
											"end": 4740,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4667,
											"end": 4750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4667,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4914,
											"end": 4923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4929,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4932,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4932,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4894,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5152,
											"end": 5159,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5143,
											"end": 5149,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5141,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5128,
											"end": 5150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5077,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5077,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5160,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5023,
											"end": 5170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5254,
											"end": 5276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5235,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5235,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 5303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5408,
											"end": 5413,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5392,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5392,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5415,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5655,
											"end": 5656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5631,
											"end": 5637,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5591,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5591,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5730,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5668,
											"end": 5736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5668,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5929,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5749,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5797,
											"end": 5874,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5884,
											"end": 5899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5918,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5915,
											"end": 5916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5923,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5975,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5995,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5995,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 6029,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6029,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6066,
											"end": 6075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6088,
											"end": 6099,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6102,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6085,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 6129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6217,
											"end": 6230,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 6196,
											"end": 6230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6196,
											"end": 6230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6135,
											"end": 6237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6135,
											"end": 6237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6304,
											"end": 6309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6350,
											"end": 6364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6350,
											"end": 6364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6384,
											"end": 6392,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6381,
											"end": 6396,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6489,
											"end": 6493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6484,
											"end": 6487,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6494,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6471,
											"end": 6495,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6498,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6468,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6549,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6538,
											"end": 6546,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6956,
											"end": 6961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 6968,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6943,
											"end": 6968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6943,
											"end": 6968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6531,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7013,
											"end": 7017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7003,
											"end": 7018,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6995,
											"end": 7018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6995,
											"end": 7018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7066,
											"end": 7074,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 7043,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7043,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7075,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6373,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 7091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7151,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7350,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7364,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7354,
											"end": 7364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7332,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7399,
											"end": 7409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7525,
											"end": 7526,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7520,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7538,
											"end": 7539,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7529,
											"end": 7539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7529,
											"end": 7539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7556,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7591,
											"end": 7599,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7588,
											"end": 7605,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7608,
											"end": 7626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7585,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7657,
											"end": 7665,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7655,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7650,
											"end": 7666,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7695,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7682,
											"end": 7696,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7699,
											"end": 7717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7679,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7846,
											"end": 7854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "PUSH",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7831,
											"end": 7835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7828,
											"end": 7841,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7860,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7806,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "4E"
										},
										{
											"begin": 7796,
											"end": 7804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7793,
											"end": 7809,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7790,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7791,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7775,
											"end": 7810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7759,
											"end": 7870,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7912,
											"end": 7920,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7921,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7893,
											"end": 7921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7893,
											"end": 7921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7947,
											"end": 7950,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 7951,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7954,
											"end": 7972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7934,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7987,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7987,
											"end": 7992,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7756,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 8065,
											"end": 8068,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8055,
											"end": 8063,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8047,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 8027,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 8027,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8096,
											"end": 8099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8082,
											"end": 8107,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8110,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 8079,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8159,
											"end": 8163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8157,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 8170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8234,
											"end": 8239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 8276,
											"end": 8280,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8258,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 8258,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8250,
											"end": 8281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8250,
											"end": 8281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 8318,
											"end": 8326,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8302,
											"end": 8327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 8302,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8327,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8383,
											"end": 8449,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8373,
											"end": 8381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 8346,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8346,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8176,
											"end": 8457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8176,
											"end": 8457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8503,
											"end": 8510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 8544,
											"end": 8545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8526,
											"end": 8546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 8578,
											"end": 8579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8560,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 8560,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8612,
											"end": 8613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8608,
											"end": 8617,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 8655,
											"end": 8666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8637,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8626,
											"end": 8667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8626,
											"end": 8667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8818,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8801,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8797,
											"end": 8819,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8777,
											"end": 8778,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8750,
											"end": 8833,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8846,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8511,
											"end": 8873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 9059,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8879,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8927,
											"end": 9004,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 9005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9024,
											"end": 9028,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9014,
											"end": 9029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9048,
											"end": 9052,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9053,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 9122,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9117,
											"end": 9142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9117,
											"end": 9142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9174,
											"end": 9175,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 9156,
											"end": 9176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9156,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9176,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9151,
											"end": 9176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 9200,
											"end": 9218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9235,
											"end": 9244,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9230,
											"end": 9244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 9315,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 9315,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9367,
											"end": 9368,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 9349,
											"end": 9369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9349,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9369,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9378,
											"end": 9394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9378,
											"end": 9394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9413,
											"end": 9416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9410,
											"end": 9411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9407,
											"end": 9417,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9420,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 9404,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9537,
											"end": 9548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9628,
											"end": 9799,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 9628,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "4D6174683A206D756C446976206F766572666C6F770000000000000000000000"
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9752,
											"end": 9766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9745,
											"end": 9792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9628,
											"end": 9799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9628,
											"end": 9799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9947,
											"end": 9950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 10032,
											"end": 10034,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 10027,
											"end": 10030,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 9968,
											"end": 10035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9968,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9961,
											"end": 10035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9961,
											"end": 10035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10044,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 10044,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10162,
											"end": 10164,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10157,
											"end": 10160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10153,
											"end": 10165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10146,
											"end": 10165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10146,
											"end": 10165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 10171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 10171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10358,
											"end": 10384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10358,
											"end": 10384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10430,
											"end": 10439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10424,
											"end": 10428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10416,
											"end": 10417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10414,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10401,
											"end": 10418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10394,
											"end": 10441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10584,
											"end": 10588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 10458,
											"end": 10589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10458,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10177,
											"end": 10596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10177,
											"end": 10596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"code/contract/sol/native/shared/FixedPointValue.sol",
								"code/contract/sol/native/utils/math/FixedPointMath.sol",
								"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"add((uint256,uint8),(uint256,uint8))": "58633635",
							"asEther((uint256,uint8))": "3e60d8e0",
							"asNewDecimals((uint256,uint8),uint8)": "7d02ebf4",
							"div((uint256,uint8),(uint256,uint8))": "8444b813",
							"mul((uint256,uint8),(uint256,uint8))": "a7e7c9f9",
							"scale((uint256,uint8),(uint256,uint8))": "e51356e8",
							"slice((uint256,uint8),(uint256,uint8))": "4b602c6d",
							"sub((uint256,uint8),(uint256,uint8))": "2833d1f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals1\",\"type\":\"uint8\"}],\"name\":\"IncompatibleDecimals\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"add\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"}],\"name\":\"asEther\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"asNewDecimals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"div\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"mul\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"scale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"basisPoints\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"sliceBasisPoints\",\"type\":\"tuple\"}],\"name\":\"slice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"sub\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/native/utils/math/FixedPointMath.sol\":\"FixedPointMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/native/shared/FixedPointValue.sol\":{\"keccak256\":\"0x762107b189c4e0c6638f84522dbe67dd3ed25afc8c0b2e0cb316721cb00fb642\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6200988009dac6133149f410e0e3f70db0e0bc614a8aa03b9c7d243db2620111\",\"dweb:/ipfs/QmeSdveNxCMcg9bQvtXSbvxVut3oAtBo3JndkF7Rt16Qkx\"]},\"code/contract/sol/native/utils/math/FixedPointMath.sol\":{\"keccak256\":\"0x9dff9cd63c09e4070acff8f9e1f8023ae1d8485f370c19dc57872a9d816cb27b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://652b75ea5ce7e49651d8e805177f58e90e1e3ea3e409aa6edec1b94593e36cae\",\"dweb:/ipfs/QmdSyeiz79HR8uvBEys38BBFUnP4gXksZX8hea7GxTDHKS\"]},\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFixedPointMath": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "add",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								}
							],
							"name": "asEther",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num",
									"type": "tuple"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "asNewDecimals",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "div",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "mul",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "scale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "basisPoints",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "slice",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "num1",
									"type": "tuple"
								}
							],
							"name": "sub",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct FixedPointValue",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"add((uint256,uint8),(uint256,uint8))": "58633635",
							"asEther((uint256,uint8))": "3e60d8e0",
							"asNewDecimals((uint256,uint8),uint8)": "7d02ebf4",
							"div((uint256,uint8),(uint256,uint8))": "8444b813",
							"mul((uint256,uint8),(uint256,uint8))": "a7e7c9f9",
							"scale((uint256,uint8),(uint256,uint8))": "e51356e8",
							"slice((uint256,uint8),(uint256,uint8))": "4b602c6d",
							"sub((uint256,uint8),(uint256,uint8))": "2833d1f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"add\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"}],\"name\":\"asEther\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"asNewDecimals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"div\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"mul\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"scale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"basisPoints\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"slice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"num1\",\"type\":\"tuple\"}],\"name\":\"sub\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct FixedPointValue\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/native/utils/math/FixedPointMath.sol\":\"IFixedPointMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/native/shared/FixedPointValue.sol\":{\"keccak256\":\"0x762107b189c4e0c6638f84522dbe67dd3ed25afc8c0b2e0cb316721cb00fb642\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6200988009dac6133149f410e0e3f70db0e0bc614a8aa03b9c7d243db2620111\",\"dweb:/ipfs/QmeSdveNxCMcg9bQvtXSbvxVut3oAtBo3JndkF7Rt16Qkx\"]},\"code/contract/sol/native/utils/math/FixedPointMath.sol\":{\"keccak256\":\"0x9dff9cd63c09e4070acff8f9e1f8023ae1d8485f370c19dc57872a9d816cb27b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://652b75ea5ce7e49651d8e805177f58e90e1e3ea3e409aa6edec1b94593e36cae\",\"dweb:/ipfs/QmdSyeiz79HR8uvBEys38BBFUnP4gXksZX8hea7GxTDHKS\"]},\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":203:14806  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":203:14806  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD7 0x49 PUSH10 0x40FD3549EF34F3A03CFC LOG4 0x29 0xEB PREVRANDAO CREATE GASLIMIT PUSH22 0x53C82DC67C6466B0F046E964736F6C63430008130033 ",
							"sourceMap": "203:14603:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xD7 0x49 PUSH10 0x40FD3549EF34F3A03CFC LOG4 0x29 0xEB PREVRANDAO CREATE GASLIMIT PUSH22 0x53C82DC67C6466B0F046E964736F6C63430008130033 ",
							"sourceMap": "203:14603:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbd7496940fd3549ef34f3a03cfca429eb44f0457553c82dc67c6466b0f046e964736f6c63430008130033",
									".code": [
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"code/contract/sol/native/shared/FixedPointValue.sol",
								"code/contract/sol/native/utils/math/FixedPointMath.sol",
								"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:35:9:\n   |\n35 |         FixedPointValue memory scale;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:31:5:\n   |\n31 |     function scale(FixedPointValue memo ... xedPointValue memory basisPoints) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2236,
						"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
						"message": "The shadowed declaration is here:",
						"start": 1668
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1975,
					"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
					"start": 1947
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:48:9:\n   |\n48 |         FixedPointValue memory scale;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> code/contract/sol/native/utils/math/FixedPointMath.sol:31:5:\n   |\n31 |     function scale(FixedPointValue memo ... xedPointValue memory basisPoints) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 2236,
						"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
						"message": "The shadowed declaration is here:",
						"start": 1668
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2559,
					"file": "code/contract/sol/native/utils/math/FixedPointMath.sol",
					"start": 2531
				},
				"type": "Warning"
			}
		],
		"sources": {
			"code/contract/sol/native/shared/FixedPointValue.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/native/shared/FixedPointValue.sol",
					"exportedSymbols": {
						"FixedPointValue": [
							6
						]
					},
					"id": 7,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:0"
						},
						{
							"canonicalName": "FixedPointValue",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "103:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "95:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "120:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "114:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 4,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "114:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "FixedPointValue",
							"nameLocation": "73:15:0",
							"nodeType": "StructDefinition",
							"scope": 7,
							"src": "66:65:0",
							"visibility": "public"
						}
					],
					"src": "39:92:0"
				},
				"id": 0
			},
			"code/contract/sol/native/utils/math/FixedPointMath.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/native/utils/math/FixedPointMath.sol",
					"exportedSymbols": {
						"FixedPointMath": [
							684
						],
						"FixedPointValue": [
							6
						],
						"IFixedPointMath": [
							105
						],
						"Math": [
							1708
						]
					},
					"id": 685,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 8,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:25:1"
						},
						{
							"absolutePath": "code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
							"file": "../../../non-native/openzeppelin/utils/math/Math.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 685,
							"sourceUnit": 1709,
							"src": "65:76:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 9,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1708,
										"src": "74:4:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "code/contract/sol/native/shared/FixedPointValue.sol",
							"file": "../../shared/FixedPointValue.sol",
							"id": 12,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 685,
							"sourceUnit": 7,
							"src": "142:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 11,
										"name": "FixedPointValue",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 6,
										"src": "151:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFixedPointMath",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "IFixedPointMath",
							"nameLocation": "221:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e51356e8",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scale",
									"nameLocation": "252:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "281:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "258:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 14,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 13,
														"name": "FixedPointValue",
														"nameLocations": [
															"258:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "258:15:1"
													},
													"referencedDeclaration": 6,
													"src": "258:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "310:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "287:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 17,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 16,
														"name": "FixedPointValue",
														"nameLocations": [
															"287:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "287:15:1"
													},
													"referencedDeclaration": 6,
													"src": "287:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:58:1"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "362:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "339:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 21,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 20,
														"name": "FixedPointValue",
														"nameLocations": [
															"339:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "339:15:1"
													},
													"referencedDeclaration": 6,
													"src": "339:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:36:1"
									},
									"scope": 105,
									"src": "243:132:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b602c6d",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nameLocation": "389:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "418:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "395:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 26,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 25,
														"name": "FixedPointValue",
														"nameLocations": [
															"395:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "395:15:1"
													},
													"referencedDeclaration": 6,
													"src": "395:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "447:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "424:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 29,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 28,
														"name": "FixedPointValue",
														"nameLocations": [
															"424:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "424:15:1"
													},
													"referencedDeclaration": 6,
													"src": "424:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:58:1"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "476:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "FixedPointValue",
														"nameLocations": [
															"476:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "476:15:1"
													},
													"referencedDeclaration": 6,
													"src": "476:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:24:1"
									},
									"scope": 105,
									"src": "380:120:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "58633635",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "514:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "541:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "518:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 38,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 37,
														"name": "FixedPointValue",
														"nameLocations": [
															"518:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "518:15:1"
													},
													"referencedDeclaration": 6,
													"src": "518:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "570:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "547:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "FixedPointValue",
														"nameLocations": [
															"547:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "547:15:1"
													},
													"referencedDeclaration": 6,
													"src": "547:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:58:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "599:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 45,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 44,
														"name": "FixedPointValue",
														"nameLocations": [
															"599:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "599:15:1"
													},
													"referencedDeclaration": 6,
													"src": "599:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:24:1"
									},
									"scope": 105,
									"src": "505:118:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2833d1f0",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "637:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "664:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "641:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 50,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 49,
														"name": "FixedPointValue",
														"nameLocations": [
															"641:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "641:15:1"
													},
													"referencedDeclaration": 6,
													"src": "641:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "693:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "670:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 53,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 52,
														"name": "FixedPointValue",
														"nameLocations": [
															"670:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "670:15:1"
													},
													"referencedDeclaration": 6,
													"src": "670:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:58:1"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "722:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 57,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 56,
														"name": "FixedPointValue",
														"nameLocations": [
															"722:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "722:15:1"
													},
													"referencedDeclaration": 6,
													"src": "722:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:24:1"
									},
									"scope": 105,
									"src": "628:118:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a7e7c9f9",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "760:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "764:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 62,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 61,
														"name": "FixedPointValue",
														"nameLocations": [
															"764:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "764:15:1"
													},
													"referencedDeclaration": 6,
													"src": "764:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "793:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 65,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 64,
														"name": "FixedPointValue",
														"nameLocations": [
															"793:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "793:15:1"
													},
													"referencedDeclaration": 6,
													"src": "793:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:58:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "845:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 69,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 68,
														"name": "FixedPointValue",
														"nameLocations": [
															"845:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "845:15:1"
													},
													"referencedDeclaration": 6,
													"src": "845:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:24:1"
									},
									"scope": 105,
									"src": "751:118:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8444b813",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "883:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "910:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "887:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 74,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 73,
														"name": "FixedPointValue",
														"nameLocations": [
															"887:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "887:15:1"
													},
													"referencedDeclaration": 6,
													"src": "887:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "939:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "916:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 77,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 76,
														"name": "FixedPointValue",
														"nameLocations": [
															"916:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "916:15:1"
													},
													"referencedDeclaration": 6,
													"src": "916:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:58:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "968:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 81,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 80,
														"name": "FixedPointValue",
														"nameLocations": [
															"968:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "968:15:1"
													},
													"referencedDeclaration": 6,
													"src": "968:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:1"
									},
									"scope": 105,
									"src": "874:118:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d02ebf4",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asNewDecimals",
									"nameLocation": "1006:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1043:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1020:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 86,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 85,
														"name": "FixedPointValue",
														"nameLocations": [
															"1020:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1020:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1020:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "1054:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1048:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 88,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1048:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:44:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1087:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 92,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 91,
														"name": "FixedPointValue",
														"nameLocations": [
															"1087:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1087:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1087:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:24:1"
									},
									"scope": 105,
									"src": "997:114:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e60d8e0",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asEther",
									"nameLocation": "1125:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1156:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1133:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 97,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 96,
														"name": "FixedPointValue",
														"nameLocations": [
															"1133:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1133:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1133:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:28:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1184:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 100,
														"name": "FixedPointValue",
														"nameLocations": [
															"1184:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1184:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1184:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:24:1"
									},
									"scope": 105,
									"src": "1116:92:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 685,
							"src": "211:999:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPointMath",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 684,
							"linearizedBaseContracts": [
								684
							],
							"name": "FixedPointMath",
							"nameLocation": "1221:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 108,
									"libraryName": {
										"id": 106,
										"name": "Math",
										"nameLocations": [
											"1248:4:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1708,
										"src": "1248:4:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1242:23:1",
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1257:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"errorSelector": "5bc47486",
									"id": 114,
									"name": "IncompatibleDecimals",
									"nameLocation": "1277:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "decimals0",
												"nameLocation": "1304:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1298:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 109,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1298:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "decimals1",
												"nameLocation": "1321:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1315:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 111,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1315:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:34:1"
									},
									"src": "1271:61:1"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1437:225:1",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "decimals0",
														"nameLocation": "1453:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1447:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 122,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1447:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"nodeType": "VariableDeclarationStatement",
												"src": "1447:15:1"
											},
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "decimals1",
														"nameLocation": "1478:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1472:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 125,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1472:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 127,
												"nodeType": "VariableDeclarationStatement",
												"src": "1472:15:1"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "decimals0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1497:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 129,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1509:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1514:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1509:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1497:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1497:25:1"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "decimals1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1532:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 134,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "1544:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1549:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1544:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1532:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1532:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 138,
														"name": "decimals0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1571:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 139,
														"name": "decimals1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1584:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1571:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "IfStatement",
												"src": "1567:77:1",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 142,
																"name": "decimals0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1623:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 143,
																"name": "decimals1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1634:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 141,
															"name": "IncompatibleDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1602:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint8_$returns$__$",
																"typeString": "function (uint8,uint8) pure"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1602:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 145,
													"nodeType": "RevertStatement",
													"src": "1595:49:1"
												}
											},
											{
												"id": 147,
												"nodeType": "PlaceholderStatement",
												"src": "1654:1:1"
											}
										]
									},
									"id": 149,
									"name": "onlyMatchingFixedPointValueType",
									"nameLocation": "1347:31:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "1402:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1379:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 115,
														"name": "FixedPointValue",
														"nameLocations": [
															"1379:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1379:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1379:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "1431:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1408:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 118,
														"name": "FixedPointValue",
														"nameLocations": [
															"1408:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1408:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1408:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:58:1"
									},
									"src": "1338:324:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1842:394:1",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "1858:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "1852:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 165,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1852:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"nodeType": "VariableDeclarationStatement",
												"src": "1852:14:1"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "1884:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "1876:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:22:1"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1931:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "1908:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 172,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 171,
																"name": "FixedPointValue",
																"nameLocations": [
																	"1908:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "1908:15:1"
															},
															"referencedDeclaration": 6,
															"src": "1908:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"nodeType": "VariableDeclarationStatement",
												"src": "1908:29:1"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "scale",
														"nameLocation": "1970:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "1947:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 176,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 175,
																"name": "FixedPointValue",
																"nameLocations": [
																	"1947:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "1947:15:1"
															},
															"referencedDeclaration": 6,
															"src": "1947:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 178,
												"nodeType": "VariableDeclarationStatement",
												"src": "1947:28:1"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1985:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 180,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2001:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1996:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1985:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1985:24:1"
											},
											{
												"expression": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2019:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2036:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 186,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2040:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2036:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2019:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2019:29:1"
											},
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 190,
														"name": "scale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "2058:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31305f303030",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2090:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10_000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 193,
																	"name": "representation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "2099:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2090:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 195,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2125:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 191,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "2066:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2083:5:1",
															"2115:8:1"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "2066:69:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2058:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2058:77:1"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2145:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 201,
																"name": "num0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2158:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 202,
																"name": "num1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2164:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 200,
															"name": "div",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2154:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2154:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2145:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2145:24:1"
											},
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2179:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "2192:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 209,
																"name": "scale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "2200:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 207,
															"name": "mul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "2188:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2188:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2179:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2179:27:1"
											},
											{
												"expression": {
													"id": 213,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "2223:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 164,
												"id": 214,
												"nodeType": "Return",
												"src": "2216:13:1"
											}
										]
									},
									"functionSelector": "e51356e8",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 158,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 152,
													"src": "1785:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 159,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 155,
													"src": "1791:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 157,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"1753:31:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "1753:31:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1753:43:1"
										}
									],
									"name": "scale",
									"nameLocation": "1677:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "1706:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1683:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 150,
														"name": "FixedPointValue",
														"nameLocations": [
															"1683:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1683:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1683:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "1735:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1712:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 153,
														"name": "FixedPointValue",
														"nameLocations": [
															"1712:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1712:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1712:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:58:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "basisPoints",
												"nameLocation": "1829:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1806:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 161,
														"name": "FixedPointValue",
														"nameLocations": [
															"1806:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1806:15:1"
													},
													"referencedDeclaration": 6,
													"src": "1806:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:36:1"
									},
									"scope": 684,
									"src": "1668:568:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "2426:404:1",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "2442:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "2436:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 232,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2436:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"nodeType": "VariableDeclarationStatement",
												"src": "2436:14:1"
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "2468:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "2460:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2460:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"nodeType": "VariableDeclarationStatement",
												"src": "2460:22:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2515:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "2492:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 239,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 238,
																"name": "FixedPointValue",
																"nameLocations": [
																	"2492:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "2492:15:1"
															},
															"referencedDeclaration": 6,
															"src": "2492:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"nodeType": "VariableDeclarationStatement",
												"src": "2492:29:1"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "scale",
														"nameLocation": "2554:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "2531:28:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue"
														},
														"typeName": {
															"id": 243,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 242,
																"name": "FixedPointValue",
																"nameLocations": [
																	"2531:15:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "2531:15:1"
															},
															"referencedDeclaration": 6,
															"src": "2531:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																"typeString": "struct FixedPointValue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"nodeType": "VariableDeclarationStatement",
												"src": "2531:28:1"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 246,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2569:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 247,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2580:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2584:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2580:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2569:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2569:23:1"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2602:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2619:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 253,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2623:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2619:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2602:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2602:29:1"
											},
											{
												"expression": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "scale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2641:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31305f303030",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2673:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10_000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 260,
																	"name": "representation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2682:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2673:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 262,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2708:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 258,
															"name": "FixedPointValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "2649:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																"typeString": "type(struct FixedPointValue storage pointer)"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2666:5:1",
															"2698:8:1"
														],
														"names": [
															"value",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "2649:69:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2641:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2641:77:1"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 266,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2728:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 268,
																"name": "num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "2741:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 269,
																"name": "scale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2746:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 267,
															"name": "div",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2737:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2737:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2728:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2728:24:1"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 273,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2762:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 275,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2775:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															{
																"id": 276,
																"name": "sliceBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "2783:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																},
																{
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															],
															"id": 274,
															"name": "mul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "2771:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																"typeString": "function (struct FixedPointValue memory,struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2771:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
															"typeString": "struct FixedPointValue memory"
														}
													},
													"src": "2762:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2762:38:1"
											},
											{
												"expression": {
													"id": 280,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 240,
													"src": "2817:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 231,
												"id": 281,
												"nodeType": "Return",
												"src": "2810:13:1"
											}
										]
									},
									"functionSelector": "4b602c6d",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 225,
													"name": "num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 219,
													"src": "2370:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 226,
													"name": "sliceBasisPoints",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "2375:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 227,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 224,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"2338:31:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "2338:31:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:54:1"
										}
									],
									"name": "slice",
									"nameLocation": "2251:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "2280:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2257:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 217,
														"name": "FixedPointValue",
														"nameLocations": [
															"2257:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2257:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2257:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sliceBasisPoints",
												"nameLocation": "2308:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2285:39:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "FixedPointValue",
														"nameLocations": [
															"2285:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2285:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2285:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:69:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2402:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 228,
														"name": "FixedPointValue",
														"nameLocations": [
															"2402:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2402:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2402:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:24:1"
									},
									"scope": 684,
									"src": "2242:588:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2996:298:1",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3012:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3006:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 299,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:14:1"
											},
											{
												"assignments": [
													303
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "3038:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3030:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 302,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3030:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"nodeType": "VariableDeclarationStatement",
												"src": "3030:14:1"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "3062:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3054:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3054:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"nodeType": "VariableDeclarationStatement",
												"src": "3054:14:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3086:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3078:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3078:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"nodeType": "VariableDeclarationStatement",
												"src": "3078:14:1"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 311,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "3102:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 312,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3113:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3118:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "3113:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3102:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "3102:24:1"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3136:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 317,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3145:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3150:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3145:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3136:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3136:19:1"
											},
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 321,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "3165:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 322,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3174:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3179:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3174:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3165:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "3165:19:1"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "3194:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 327,
															"name": "value0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3203:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 328,
															"name": "value1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3212:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3203:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3194:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "3194:24:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 334,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3277:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 332,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3235:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3252:5:1",
														"3267:8:1"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "3235:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 298,
												"id": 336,
												"nodeType": "Return",
												"src": "3228:59:1"
											}
										]
									},
									"functionSelector": "58633635",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 292,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 286,
													"src": "2951:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 293,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "2957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 294,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 291,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"2919:31:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "2919:31:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2919:43:1"
										}
									],
									"name": "add",
									"nameLocation": "2845:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "2872:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2849:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "FixedPointValue",
														"nameLocations": [
															"2849:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2849:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2849:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "2901:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2878:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 287,
														"name": "FixedPointValue",
														"nameLocations": [
															"2878:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2878:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2878:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2848:58:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2972:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 296,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 295,
														"name": "FixedPointValue",
														"nameLocations": [
															"2972:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "2972:15:1"
													},
													"referencedDeclaration": 6,
													"src": "2972:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:24:1"
									},
									"scope": 684,
									"src": "2836:458:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3460:298:1",
										"statements": [
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3476:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3470:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 354,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3470:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"nodeType": "VariableDeclarationStatement",
												"src": "3470:14:1"
											},
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "3502:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3494:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"nodeType": "VariableDeclarationStatement",
												"src": "3494:14:1"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "3526:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3518:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3518:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"nodeType": "VariableDeclarationStatement",
												"src": "3518:14:1"
											},
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3550:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3542:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3542:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"nodeType": "VariableDeclarationStatement",
												"src": "3542:14:1"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3566:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 367,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3577:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3582:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "3577:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3566:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "3566:24:1"
											},
											{
												"expression": {
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3600:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 372,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3609:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3614:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3609:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3600:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3600:19:1"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "3629:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 377,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3638:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3643:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "3638:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3629:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3629:19:1"
											},
											{
												"expression": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3658:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 382,
															"name": "value0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "3667:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 383,
															"name": "value1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3676:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3667:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3658:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3658:24:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3723:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 389,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3741:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 387,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3699:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3716:5:1",
														"3731:8:1"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "3699:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 391,
												"nodeType": "Return",
												"src": "3692:59:1"
											}
										]
									},
									"functionSelector": "2833d1f0",
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 347,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 341,
													"src": "3415:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 348,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "3421:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 346,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"3383:31:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "3383:31:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3383:43:1"
										}
									],
									"name": "sub",
									"nameLocation": "3309:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "3336:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3313:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "FixedPointValue",
														"nameLocations": [
															"3313:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3313:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3313:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "3365:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3342:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "FixedPointValue",
														"nameLocations": [
															"3342:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3342:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3342:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:58:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3436:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "FixedPointValue",
														"nameLocations": [
															"3436:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3436:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3436:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:24:1"
									},
									"scope": 684,
									"src": "3300:458:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3924:541:1",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "3940:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "3934:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 409,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3934:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"nodeType": "VariableDeclarationStatement",
												"src": "3934:14:1"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "3966:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "3958:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3958:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"nodeType": "VariableDeclarationStatement",
												"src": "3958:14:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "3990:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "3982:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"nodeType": "VariableDeclarationStatement",
												"src": "3982:14:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4014:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "4006:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"nodeType": "VariableDeclarationStatement",
												"src": "4006:14:1"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "4038:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "4030:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4030:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"nodeType": "VariableDeclarationStatement",
												"src": "4030:22:1"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 424,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4062:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 425,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "4073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4073:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4062:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "4062:24:1"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "4096:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 430,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "4105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4110:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4105:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4096:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "4096:19:1"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "4125:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 435,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "4134:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4139:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4134:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4125:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "4125:19:1"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "4154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4171:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 441,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4175:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "4171:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4154:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "4154:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4197:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4209:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4197:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "4193:141:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "4212:122:1",
													"statements": [
														{
															"expression": {
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 448,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "4226:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 449,
																		"name": "value0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "4235:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 450,
																		"name": "value1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "4244:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4235:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4226:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"nodeType": "ExpressionStatement",
															"src": "4226:24:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "4295:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 456,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4313:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 454,
																	"name": "FixedPointValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4271:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
																		"typeString": "type(struct FixedPointValue storage pointer)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"4288:5:1",
																	"4303:8:1"
																],
																"names": [
																	"value",
																	"decimals"
																],
																"nodeType": "FunctionCall",
																"src": "4271:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"functionReturnParameters": 408,
															"id": 458,
															"nodeType": "Return",
															"src": "4264:59:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 461,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "4343:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 464,
																"name": "value1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "4366:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 465,
																"name": "representation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "4374:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 462,
																"name": "value0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "4352:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4359:6:1",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1056,
															"src": "4352:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4352:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4343:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4343:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4430:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 471,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4448:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 469,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4406:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4423:5:1",
														"4438:8:1"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "4406:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 408,
												"id": 473,
												"nodeType": "Return",
												"src": "4399:59:1"
											}
										]
									},
									"functionSelector": "a7e7c9f9",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 402,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "3879:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 403,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 399,
													"src": "3885:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 404,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 401,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"3847:31:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "3847:31:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3847:43:1"
										}
									],
									"name": "mul",
									"nameLocation": "3773:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "3800:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3777:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "FixedPointValue",
														"nameLocations": [
															"3777:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3777:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3777:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "3829:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3806:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 398,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 397,
														"name": "FixedPointValue",
														"nameLocations": [
															"3806:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3806:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3806:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:58:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3900:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "FixedPointValue",
														"nameLocations": [
															"3900:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "3900:15:1"
													},
													"referencedDeclaration": 6,
													"src": "3900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:24:1"
									},
									"scope": 684,
									"src": "3764:701:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "4631:391:1",
										"statements": [
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "4647:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4641:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 491,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4641:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"nodeType": "VariableDeclarationStatement",
												"src": "4641:14:1"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "value0",
														"nameLocation": "4673:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4665:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4665:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"nodeType": "VariableDeclarationStatement",
												"src": "4665:14:1"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "value1",
														"nameLocation": "4697:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4689:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4689:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"nodeType": "VariableDeclarationStatement",
												"src": "4689:14:1"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4721:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4713:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4713:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"nodeType": "VariableDeclarationStatement",
												"src": "4713:14:1"
											},
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "representation",
														"nameLocation": "4745:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4737:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"nodeType": "VariableDeclarationStatement",
												"src": "4737:22:1"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 506,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "4769:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 507,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4780:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4785:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4780:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4769:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "4769:24:1"
											},
											{
												"expression": {
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "value0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "4803:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 512,
															"name": "num0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4812:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4817:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4812:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4803:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "4803:19:1"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "value1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "4832:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 517,
															"name": "num1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4841:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4846:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "4841:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4832:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "4832:19:1"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 521,
														"name": "representation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "4861:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"id": 523,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4882:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "4878:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4861:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "4861:29:1"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "4900:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 530,
																"name": "representation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "4923:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 531,
																"name": "value1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "4939:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 528,
																"name": "value0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "4909:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4916:6:1",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1056,
															"src": "4909:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4909:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4900:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "4900:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4987:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 537,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5005:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 535,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4963:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4980:5:1",
														"4995:8:1"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "4963:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 490,
												"id": 539,
												"nodeType": "Return",
												"src": "4956:59:1"
											}
										]
									},
									"functionSelector": "8444b813",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 484,
													"name": "num0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "4586:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												{
													"id": 485,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 481,
													"src": "4592:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												}
											],
											"id": 486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 483,
												"name": "onlyMatchingFixedPointValueType",
												"nameLocations": [
													"4554:31:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 149,
												"src": "4554:31:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4554:43:1"
										}
									],
									"name": "div",
									"nameLocation": "4480:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "num0",
												"nameLocation": "4507:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4484:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 476,
														"name": "FixedPointValue",
														"nameLocations": [
															"4484:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4484:15:1"
													},
													"referencedDeclaration": 6,
													"src": "4484:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "4536:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4513:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 480,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 479,
														"name": "FixedPointValue",
														"nameLocations": [
															"4513:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4513:15:1"
													},
													"referencedDeclaration": 6,
													"src": "4513:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4483:58:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4607:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "FixedPointValue",
														"nameLocations": [
															"4607:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "4607:15:1"
													},
													"referencedDeclaration": 6,
													"src": "4607:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:24:1"
									},
									"scope": 684,
									"src": "4471:551:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "5140:470:1",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "currentDecimals",
														"nameLocation": "5156:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "5150:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 552,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"nodeType": "VariableDeclarationStatement",
												"src": "5150:21:1"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5189:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "5181:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 555,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5181:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"nodeType": "VariableDeclarationStatement",
												"src": "5181:13:1"
											},
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5212:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "5204:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"nodeType": "VariableDeclarationStatement",
												"src": "5204:14:1"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 561,
														"name": "currentDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "5228:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 562,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5246:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5250:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "5246:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5228:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "5228:30:1"
											},
											{
												"expression": {
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "5268:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 567,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5276:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5280:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "5276:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5268:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "5268:17:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 571,
														"name": "currentDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "5299:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3138",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5318:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "5299:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "5295:162:1",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "5322:135:1",
													"statements": [
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "numAsEther",
																	"nameLocation": "5359:10:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 589,
																	"src": "5336:33:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue"
																	},
																	"typeName": {
																		"id": 575,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 574,
																			"name": "FixedPointValue",
																			"nameLocations": [
																				"5336:15:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 6,
																			"src": "5336:15:1"
																		},
																		"referencedDeclaration": 6,
																		"src": "5336:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
																			"typeString": "struct FixedPointValue"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 577,
															"nodeType": "VariableDeclarationStatement",
															"src": "5336:33:1"
														},
														{
															"expression": {
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 578,
																	"name": "numAsEther",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "5383:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 580,
																			"name": "num",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "5404:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																				"typeString": "struct FixedPointValue memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																				"typeString": "struct FixedPointValue memory"
																			}
																		],
																		"id": 579,
																		"name": "asEther",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "5396:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_FixedPointValue_$6_memory_ptr_$returns$_t_struct$_FixedPointValue_$6_memory_ptr_$",
																			"typeString": "function (struct FixedPointValue memory) pure returns (struct FixedPointValue memory)"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5396:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																		"typeString": "struct FixedPointValue memory"
																	}
																},
																"src": "5383:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																	"typeString": "struct FixedPointValue memory"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "5383:25:1"
														},
														{
															"expression": {
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 584,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "5422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 585,
																		"name": "numAsEther",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "5430:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																			"typeString": "struct FixedPointValue memory"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5441:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "5430:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5422:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 588,
															"nodeType": "ExpressionStatement",
															"src": "5422:24:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "5466:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 592,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 556,
																						"src": "5477:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"id": 595,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 593,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5486:2:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 594,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5490:2:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "5486:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							}
																						],
																						"id": 596,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5485:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "5477:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"id": 600,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 598,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5497:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"hexValue": "3138",
																								"id": 599,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5501:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"src": "5497:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						}
																					],
																					"id": 601,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5496:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				},
																				"src": "5477:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 603,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5476:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5509:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 605,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "5513:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5509:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 607,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5508:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5476:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 609,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5475:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5527:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5531:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "5527:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 613,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5526:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "5475:59:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5466:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "5466:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "5575:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 619,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5593:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 617,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "5551:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5568:5:1",
														"5583:8:1"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "5551:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 551,
												"id": 621,
												"nodeType": "Return",
												"src": "5544:59:1"
											}
										]
									},
									"functionSelector": "7d02ebf4",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asNewDecimals",
									"nameLocation": "5037:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "5074:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "5051:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "FixedPointValue",
														"nameLocations": [
															"5051:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5051:15:1"
													},
													"referencedDeclaration": 6,
													"src": "5051:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "5085:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "5079:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 545,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5079:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5050:44:1"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "5116:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 548,
														"name": "FixedPointValue",
														"nameLocations": [
															"5116:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5116:15:1"
													},
													"referencedDeclaration": 6,
													"src": "5116:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:24:1"
									},
									"scope": 684,
									"src": "5028:582:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "5706:300:1",
										"statements": [
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "currentDecimals",
														"nameLocation": "5722:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "5716:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 632,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "5716:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"nodeType": "VariableDeclarationStatement",
												"src": "5716:21:1"
											},
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5755:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "5747:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"nodeType": "VariableDeclarationStatement",
												"src": "5747:13:1"
											},
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5778:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "5770:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"nodeType": "VariableDeclarationStatement",
												"src": "5770:14:1"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 641,
														"name": "currentDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5794:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 642,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5812:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5816:8:1",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "5812:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5794:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "5794:30:1"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5834:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 647,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5842:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
																"typeString": "struct FixedPointValue memory"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5846:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "5842:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5834:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "5834:17:1"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "5861:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 652,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 636,
																						"src": "5872:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"id": 655,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 653,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5881:2:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 654,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5885:2:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "5881:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							}
																						],
																						"id": 656,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5880:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "5872:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 660,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 658,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5892:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"id": 659,
																								"name": "currentDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 633,
																								"src": "5896:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "5892:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 661,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5891:21:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5872:40:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 663,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5871:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"id": 666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 664,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5917:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"hexValue": "3138",
																					"id": 665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5921:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18_by_1",
																						"typeString": "int_const 18"
																					},
																					"value": "18"
																				},
																				"src": "5917:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			}
																		],
																		"id": 667,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5916:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	},
																	"src": "5871:53:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 669,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5870:55:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5929:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5933:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "5929:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 673,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5928:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "5870:66:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5861:75:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "5861:75:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "5977:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3138",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5995:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															}
														],
														"id": 677,
														"name": "FixedPointValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "5953:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_FixedPointValue_$6_storage_ptr_$",
															"typeString": "type(struct FixedPointValue storage pointer)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5970:5:1",
														"5985:8:1"
													],
													"names": [
														"value",
														"decimals"
													],
													"nodeType": "FunctionCall",
													"src": "5953:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
														"typeString": "struct FixedPointValue memory"
													}
												},
												"functionReturnParameters": 631,
												"id": 681,
												"nodeType": "Return",
												"src": "5946:53:1"
											}
										]
									},
									"functionSelector": "3e60d8e0",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asEther",
									"nameLocation": "5625:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "5656:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5633:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 624,
														"name": "FixedPointValue",
														"nameLocations": [
															"5633:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5633:15:1"
													},
													"referencedDeclaration": 6,
													"src": "5633:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5632:28:1"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5682:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FixedPointValue_$6_memory_ptr",
													"typeString": "struct FixedPointValue"
												},
												"typeName": {
													"id": 629,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 628,
														"name": "FixedPointValue",
														"nameLocations": [
															"5682:15:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5682:15:1"
													},
													"referencedDeclaration": 6,
													"src": "5682:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FixedPointValue_$6_storage_ptr",
														"typeString": "struct FixedPointValue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:24:1"
									},
									"scope": 684,
									"src": "5616:390:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 685,
							"src": "1212:4796:1",
							"usedErrors": [
								114
							]
						}
					],
					"src": "39:5969:1"
				},
				"id": 1
			},
			"code/contract/sol/non-native/openzeppelin/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "code/contract/sol/non-native/openzeppelin/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1708
						]
					},
					"id": 1709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1708,
							"linearizedBaseContracts": [
								1708
							],
							"name": "Math",
							"nameLocation": "211:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 691,
									"members": [
										{
											"id": 688,
											"name": "Down",
											"nameLocation": "246:4:2",
											"nodeType": "EnumValue",
											"src": "246:4:2"
										},
										{
											"id": 689,
											"name": "Up",
											"nameLocation": "288:2:2",
											"nodeType": "EnumValue",
											"src": "288:2:2"
										},
										{
											"id": 690,
											"name": "Zero",
											"nameLocation": "319:4:2",
											"nodeType": "EnumValue",
											"src": "319:4:2"
										}
									],
									"name": "Rounding",
									"nameLocation": "227:8:2",
									"nodeType": "EnumDefinition",
									"src": "222:122:2"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "562:140:2",
										"statements": [
											{
												"id": 721,
												"nodeType": "UncheckedBlock",
												"src": "572:124:2",
												"statements": [
													{
														"assignments": [
															704
														],
														"declarations": [
															{
																"constant": false,
																"id": 704,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "604:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 721,
																"src": "596:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 703,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "596:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 708,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "608:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 706,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "612:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "608:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "596:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 709,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "631:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 710,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "635:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "631:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 716,
														"nodeType": "IfStatement",
														"src": "627:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "653:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 714,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "645:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 702,
															"id": 715,
															"nodeType": "Return",
															"src": "638:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "677:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 718,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "683:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 719,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "676:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 702,
														"id": 720,
														"nodeType": "Return",
														"src": "669:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "350:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "495:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "502:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "513:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:22:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "547:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "547:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "553:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:15:2"
									},
									"scope": 1708,
									"src": "486:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "923:113:2",
										"statements": [
											{
												"id": 749,
												"nodeType": "UncheckedBlock",
												"src": "933:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "961:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 736,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "965:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "961:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 742,
														"nodeType": "IfStatement",
														"src": "957:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "976:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "983:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "975:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 734,
															"id": 741,
															"nodeType": "Return",
															"src": "968:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1007:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 744,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "1013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 745,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "1017:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1013:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 747,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1006:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 734,
														"id": 748,
														"nodeType": "Return",
														"src": "999:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "708:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "856:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:22:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "908:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "914:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:15:2"
									},
									"scope": 1708,
									"src": "847:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1260:417:2",
										"statements": [
											{
												"id": 791,
												"nodeType": "UncheckedBlock",
												"src": "1270:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 763,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1533:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 770,
														"nodeType": "IfStatement",
														"src": "1524:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1544:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1550:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1543:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 762,
															"id": 769,
															"nodeType": "Return",
															"src": "1536:16:2"
														}
													},
													{
														"assignments": [
															772
														],
														"declarations": [
															{
																"constant": false,
																"id": 772,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1574:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 791,
																"src": "1566:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1566:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 776,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1578:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1582:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1578:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1566:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 777,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "1601:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 778,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "1605:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1610:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 786,
														"nodeType": "IfStatement",
														"src": "1597:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1621:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1628:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1620:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 762,
															"id": 785,
															"nodeType": "Return",
															"src": "1613:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1652:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 788,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "1658:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 789,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1651:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 762,
														"id": 790,
														"nodeType": "Return",
														"src": "1644:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1042:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1193:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1208:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1200:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1219:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1211:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:22:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1245:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1245:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1251:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:15:2"
									},
									"scope": 1708,
									"src": "1184:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1902:114:2",
										"statements": [
											{
												"id": 819,
												"nodeType": "UncheckedBlock",
												"src": "1912:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1940:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1945:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1940:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 812,
														"nodeType": "IfStatement",
														"src": "1936:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1956:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1963:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 804,
															"id": 811,
															"nodeType": "Return",
															"src": "1948:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1987:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 814,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "1993:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 815,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1997:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1993:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 817,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1986:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 804,
														"id": 818,
														"nodeType": "Return",
														"src": "1979:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "1683:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1835:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1850:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1842:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1861:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1853:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:22:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1887:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1887:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1893:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:15:2"
									},
									"scope": 1708,
									"src": "1826:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "2251:114:2",
										"statements": [
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "2261:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2289:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2294:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2289:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "2285:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2305:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2312:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2304:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 832,
															"id": 839,
															"nodeType": "Return",
															"src": "2297:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2336:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 842,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "2342:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 843,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "2346:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2342:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 845,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2335:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 832,
														"id": 846,
														"nodeType": "Return",
														"src": "2328:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2022:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2184:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2199:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2191:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2210:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2202:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:22:2"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2236:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2242:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:15:2"
									},
									"scope": 1708,
									"src": "2175:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "2502:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 859,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "2519:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 860,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2523:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2519:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 863,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2531:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2519:13:2",
													"trueExpression": {
														"id": 862,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "2527:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 858,
												"id": 865,
												"nodeType": "Return",
												"src": "2512:20:2"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "2371:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2444:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2456:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2448:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2467:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2459:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:22:2"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:9:2"
									},
									"scope": 1708,
									"src": "2435:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2677:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 877,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "2694:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 878,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2698:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2694:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 881,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2706:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2694:13:2",
													"trueExpression": {
														"id": 880,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2702:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 883,
												"nodeType": "Return",
												"src": "2687:20:2"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "2545:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2619:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2631:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2623:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2642:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2634:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:22:2"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2668:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:9:2"
									},
									"scope": 1708,
									"src": "2610:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2898:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 895,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "2953:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 896,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 898,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2952:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 899,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "2963:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 900,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2963:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 902,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2962:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2962:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 894,
												"id": 906,
												"nodeType": "Return",
												"src": "2945:28:2"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "2720:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2836:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2852:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2863:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2855:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:22:2"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2889:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2889:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:9:2"
									},
									"scope": 1708,
									"src": "2827:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "3250:123:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 918,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "3338:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3338:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 922,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "3352:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3356:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3352:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3351:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 926,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "3361:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3351:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3365:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3351:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3338:28:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3347:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 917,
												"id": 931,
												"nodeType": "Return",
												"src": "3331:35:2"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2986:188:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3188:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3204:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3196:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3215:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3207:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:22:2"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3241:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:9:2"
									},
									"scope": 1708,
									"src": "3179:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "3787:4115:2",
										"statements": [
											{
												"id": 1054,
												"nodeType": "UncheckedBlock",
												"src": "3797:4099:2",
												"statements": [
													{
														"assignments": [
															946
														],
														"declarations": [
															{
																"constant": false,
																"id": 946,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4126:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 1054,
																"src": "4118:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4118:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 947,
														"nodeType": "VariableDeclarationStatement",
														"src": "4118:13:2"
													},
													{
														"assignments": [
															949
														],
														"declarations": [
															{
																"constant": false,
																"id": 949,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4198:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 1054,
																"src": "4190:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 948,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4190:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 950,
														"nodeType": "VariableDeclarationStatement",
														"src": "4190:13:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4270:157:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4288:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4305:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4308:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4315:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4311:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:20:2"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4292:2:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4335:18:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4348:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4351:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:9:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4335:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4370:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4387:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4391:5:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4383:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4383:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4402:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4406:5:2"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4399:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4399:13:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:34:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4370:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "4335:5:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "4391:5:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "4406:5:2",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "4370:5:2",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "4305:1:2",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "4348:1:2",
																"valueSize": 1
															},
															{
																"declaration": 938,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:1:2",
																"valueSize": 1
															},
															{
																"declaration": 938,
																"isOffset": false,
																"isSlot": false,
																"src": "4351:1:2",
																"valueSize": 1
															}
														],
														"id": 951,
														"nodeType": "InlineAssembly",
														"src": "4261:166:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "4508:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4517:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 960,
														"nodeType": "IfStatement",
														"src": "4504:368:2",
														"trueBody": {
															"id": 959,
															"nodeType": "Block",
															"src": "4520:352:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 955,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "4838:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 956,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "4846:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4838:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 944,
																	"id": 958,
																	"nodeType": "Return",
																	"src": "4831:26:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 962,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "4982:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 963,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "4996:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4982:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 961,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4974:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 967,
														"nodeType": "ExpressionStatement",
														"src": "4974:53:2"
													},
													{
														"assignments": [
															969
														],
														"declarations": [
															{
																"constant": false,
																"id": 969,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5291:9:2",
																"nodeType": "VariableDeclaration",
																"scope": 1054,
																"src": "5283:17:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 968,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5283:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 970,
														"nodeType": "VariableDeclarationStatement",
														"src": "5283:17:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5323:291:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5392:38:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5412:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5415:1:2"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5418:11:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5405:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:25:2"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5392:9:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5512:41:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5525:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5535:9:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5546:5:2"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5532:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5532:20:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5521:32:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5512:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5570:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5583:5:2"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5590:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:21:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5570:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "5418:11:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "5546:5:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "5570:5:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "5583:5:2",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5512:5:2",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5525:5:2",
																"valueSize": 1
															},
															{
																"declaration": 969,
																"isOffset": false,
																"isSlot": false,
																"src": "5392:9:2",
																"valueSize": 1
															},
															{
																"declaration": 969,
																"isOffset": false,
																"isSlot": false,
																"src": "5535:9:2",
																"valueSize": 1
															},
															{
																"declaration": 969,
																"isOffset": false,
																"isSlot": false,
																"src": "5590:9:2",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "5412:1:2",
																"valueSize": 1
															},
															{
																"declaration": 938,
																"isOffset": false,
																"isSlot": false,
																"src": "5415:1:2",
																"valueSize": 1
															}
														],
														"id": 971,
														"nodeType": "InlineAssembly",
														"src": "5314:300:2"
													},
													{
														"assignments": [
															973
														],
														"declarations": [
															{
																"constant": false,
																"id": 973,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5929:4:2",
																"nodeType": "VariableDeclaration",
																"scope": 1054,
																"src": "5921:12:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 972,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5921:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 981,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 974,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "5936:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "5951:12:2",
																			"subExpression": {
																				"id": 975,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "5952:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5966:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5951:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5950:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5936:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5921:47:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5991:362:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6056:37:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6075:11:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6088:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:22:2"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6056:11:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6160:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6173:5:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6180:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6160:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6300:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6320:1:2",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6323:4:2"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6316:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6316:12:2"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6330:4:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6312:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6312:23:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6337:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6308:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6308:31:2"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6300:4:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "6056:11:2",
																"valueSize": 1
															},
															{
																"declaration": 940,
																"isOffset": false,
																"isSlot": false,
																"src": "6075:11:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "6160:5:2",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "6173:5:2",
																"valueSize": 1
															},
															{
																"declaration": 973,
																"isOffset": false,
																"isSlot": false,
																"src": "6088:4:2",
																"valueSize": 1
															},
															{
																"declaration": 973,
																"isOffset": false,
																"isSlot": false,
																"src": "6180:4:2",
																"valueSize": 1
															},
															{
																"declaration": 973,
																"isOffset": false,
																"isSlot": false,
																"src": "6300:4:2",
																"valueSize": 1
															},
															{
																"declaration": 973,
																"isOffset": false,
																"isSlot": false,
																"src": "6323:4:2",
																"valueSize": 1
															},
															{
																"declaration": 973,
																"isOffset": false,
																"isSlot": false,
																"src": "6330:4:2",
																"valueSize": 1
															}
														],
														"id": 982,
														"nodeType": "InlineAssembly",
														"src": "5982:371:2"
													},
													{
														"expression": {
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 983,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "6419:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 984,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "6428:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 985,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "6436:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6428:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6419:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 988,
														"nodeType": "ExpressionStatement",
														"src": "6419:21:2"
													},
													{
														"assignments": [
															990
														],
														"declarations": [
															{
																"constant": false,
																"id": 990,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6766:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 1054,
																"src": "6758:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 989,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6758:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 997,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6777:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 992,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "6781:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6777:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6776:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6796:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6776:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6758:39:2"
													},
													{
														"expression": {
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 998,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "7014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7025:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1000,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7029:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1001,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7043:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7029:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7025:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7014:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1005,
														"nodeType": "ExpressionStatement",
														"src": "7014:36:2"
													},
													{
														"expression": {
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1006,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "7083:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7094:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1008,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7098:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1009,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7112:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7098:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7094:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7083:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1013,
														"nodeType": "ExpressionStatement",
														"src": "7083:36:2"
													},
													{
														"expression": {
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1014,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "7153:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7164:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1016,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7168:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1017,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7182:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7168:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7164:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7153:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1021,
														"nodeType": "ExpressionStatement",
														"src": "7153:36:2"
													},
													{
														"expression": {
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1022,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "7223:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1024,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7238:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1025,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7252:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7238:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7234:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7223:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1029,
														"nodeType": "ExpressionStatement",
														"src": "7223:36:2"
													},
													{
														"expression": {
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1030,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "7293:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7304:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1032,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7308:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1033,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7322:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7308:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7304:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7293:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1037,
														"nodeType": "ExpressionStatement",
														"src": "7293:36:2"
													},
													{
														"expression": {
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1038,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "7364:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7375:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1040,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7379:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1041,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "7393:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7379:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7375:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7364:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1045,
														"nodeType": "ExpressionStatement",
														"src": "7364:36:2"
													},
													{
														"expression": {
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1046,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "7834:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1047,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "7843:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1048,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "7851:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7843:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7834:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1051,
														"nodeType": "ExpressionStatement",
														"src": "7834:24:2"
													},
													{
														"expression": {
															"id": 1052,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "7879:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 944,
														"id": 1053,
														"nodeType": "Return",
														"src": "7872:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "3379:305:2",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3698:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3713:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3705:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3724:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3716:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3735:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3727:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:43:2"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:16:2"
									},
									"scope": 1708,
									"src": "3689:4213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "8144:189:2",
										"statements": [
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8162:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "8154:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1071,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "8178:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1075,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "8181:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1076,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "8184:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1073,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1056,
															1100
														],
														"referencedDeclaration": 1056,
														"src": "8171:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8171:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8154:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$691",
															"typeString": "enum Math.Rounding"
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1079,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "8210:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$691",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1080,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "8222:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$691_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8231:2:2",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 689,
															"src": "8222:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$691",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8210:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "8244:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1085,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "8247:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1086,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "8250:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8237:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8237:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8265:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8237:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8210:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "IfStatement",
												"src": "8206:98:2",
												"trueBody": {
													"id": 1095,
													"nodeType": "Block",
													"src": "8268:36:2",
													"statements": [
														{
															"expression": {
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1091,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "8282:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8292:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8282:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1094,
															"nodeType": "ExpressionStatement",
															"src": "8282:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1097,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1072,
													"src": "8320:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1098,
												"nodeType": "Return",
												"src": "8313:13:2"
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "7908:121:2",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8043:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8058:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "8050:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8069:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "8061:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8080:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "8072:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8102:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "8093:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$691",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "Rounding",
														"nameLocations": [
															"8093:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "8093:8:2"
													},
													"referencedDeclaration": 691,
													"src": "8093:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$691",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8049:62:2"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "8135:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:9:2"
									},
									"scope": 1708,
									"src": "8034:299:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "8609:1585:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "8623:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8628:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8623:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "8619:45:2",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "8631:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8652:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1107,
															"id": 1112,
															"nodeType": "Return",
															"src": "8645:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9351:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "9343:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9343:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9360:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1119,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "9371:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1118,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1380,
																			1416
																		],
																		"referencedDeclaration": 1380,
																		"src": "9366:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9366:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9377:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9366:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1123,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9365:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9360:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9343:36:2"
											},
											{
												"id": 1210,
												"nodeType": "UncheckedBlock",
												"src": "9780:408:2",
												"statements": [
													{
														"expression": {
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1126,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "9804:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1127,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "9814:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1128,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "9823:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1129,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9827:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9823:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9814:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1132,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9813:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9813:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9804:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1136,
														"nodeType": "ExpressionStatement",
														"src": "9804:35:2"
													},
													{
														"expression": {
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1137,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "9853:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1138,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "9863:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1139,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "9872:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1140,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9876:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9872:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9863:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1143,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9862:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9887:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9862:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9853:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1147,
														"nodeType": "ExpressionStatement",
														"src": "9853:35:2"
													},
													{
														"expression": {
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1148,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "9902:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1149,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "9912:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1150,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "9921:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1151,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9925:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9921:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9912:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1154,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9911:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9936:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9911:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9902:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1158,
														"nodeType": "ExpressionStatement",
														"src": "9902:35:2"
													},
													{
														"expression": {
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1159,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "9951:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1160,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "9961:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1161,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "9970:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1162,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "9974:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9970:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9961:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1165,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9960:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9960:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9951:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1169,
														"nodeType": "ExpressionStatement",
														"src": "9951:35:2"
													},
													{
														"expression": {
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1170,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "10000:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1171,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "10010:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1172,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "10019:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1173,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10023:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10019:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10010:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1176,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10009:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10034:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10009:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10000:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1180,
														"nodeType": "ExpressionStatement",
														"src": "10000:35:2"
													},
													{
														"expression": {
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1181,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "10049:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1182,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "10059:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1183,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "10068:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1184,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10072:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10068:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10059:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1187,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10058:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10083:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10058:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10049:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1191,
														"nodeType": "ExpressionStatement",
														"src": "10049:35:2"
													},
													{
														"expression": {
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1192,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "10098:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1193,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "10108:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1194,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "10117:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1195,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "10121:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10117:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10108:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1198,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10107:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10132:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10107:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10098:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1202,
														"nodeType": "ExpressionStatement",
														"src": "10098:35:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1204,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "10158:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1205,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "10166:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1206,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "10170:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10166:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1203,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "10154:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10154:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1107,
														"id": 1209,
														"nodeType": "Return",
														"src": "10147:30:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "8339:208:2",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8561:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8574:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "8566:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8565:11:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "8600:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:9:2"
									},
									"scope": 1708,
									"src": "8552:1642:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "10370:161:2",
										"statements": [
											{
												"id": 1246,
												"nodeType": "UncheckedBlock",
												"src": "10380:145:2",
												"statements": [
													{
														"assignments": [
															1224
														],
														"declarations": [
															{
																"constant": false,
																"id": 1224,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10412:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1246,
																"src": "10404:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1223,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10404:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1228,
														"initialValue": {
															"arguments": [
																{
																	"id": 1226,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "10426:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1225,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1212,
																	1248
																],
																"referencedDeclaration": 1212,
																"src": "10421:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10421:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10404:24:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "10449:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$691",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1230,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1218,
																					"src": "10459:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1231,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 691,
																						"src": "10471:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$691_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1232,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "10480:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 689,
																					"src": "10471:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10459:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1234,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1224,
																						"src": "10486:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1235,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1224,
																						"src": "10495:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10486:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1237,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1215,
																					"src": "10504:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10486:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10459:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10512:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10459:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10508:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10458:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10449:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1222,
														"id": 1245,
														"nodeType": "Return",
														"src": "10442:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "10200:89:2",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10303:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10316:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "10308:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10328:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "10319:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$691",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1216,
														"name": "Rounding",
														"nameLocations": [
															"10319:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "10319:8:2"
													},
													"referencedDeclaration": 691,
													"src": "10319:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$691",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10307:30:2"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "10361:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10360:9:2"
									},
									"scope": 1708,
									"src": "10294:237:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "10716:922:2",
										"statements": [
											{
												"assignments": [
													1257
												],
												"declarations": [
													{
														"constant": false,
														"id": 1257,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10734:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1379,
														"src": "10726:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"hexValue": "30",
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10743:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10726:18:2"
											},
											{
												"id": 1376,
												"nodeType": "UncheckedBlock",
												"src": "10754:855:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1260,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "10782:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10791:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10782:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10797:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10782:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1274,
														"nodeType": "IfStatement",
														"src": "10778:99:2",
														"trueBody": {
															"id": 1273,
															"nodeType": "Block",
															"src": "10800:77:2",
															"statements": [
																{
																	"expression": {
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1265,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "10818:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10828:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10818:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1268,
																	"nodeType": "ExpressionStatement",
																	"src": "10818:13:2"
																},
																{
																	"expression": {
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1269,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "10849:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10859:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10849:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1272,
																	"nodeType": "ExpressionStatement",
																	"src": "10849:13:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1275,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "10894:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10903:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10894:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10908:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10894:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1289,
														"nodeType": "IfStatement",
														"src": "10890:96:2",
														"trueBody": {
															"id": 1288,
															"nodeType": "Block",
															"src": "10911:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1280,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "10929:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10939:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10929:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"nodeType": "ExpressionStatement",
																	"src": "10929:12:2"
																},
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "10959:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10969:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10959:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "10959:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1290,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "11003:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11012:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11003:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11003:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1304,
														"nodeType": "IfStatement",
														"src": "10999:96:2",
														"trueBody": {
															"id": 1303,
															"nodeType": "Block",
															"src": "11020:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "11038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11048:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11038:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1298,
																	"nodeType": "ExpressionStatement",
																	"src": "11038:12:2"
																},
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1299,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "11068:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11078:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11068:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "11068:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1305,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "11112:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11121:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11112:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11126:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11112:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1319,
														"nodeType": "IfStatement",
														"src": "11108:96:2",
														"trueBody": {
															"id": 1318,
															"nodeType": "Block",
															"src": "11129:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1310,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "11147:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11157:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11147:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1313,
																	"nodeType": "ExpressionStatement",
																	"src": "11147:12:2"
																},
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1314,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "11177:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11187:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11177:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "11177:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1320,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "11221:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11230:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11221:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11234:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11221:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1334,
														"nodeType": "IfStatement",
														"src": "11217:93:2",
														"trueBody": {
															"id": 1333,
															"nodeType": "Block",
															"src": "11237:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1325,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "11255:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11265:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11255:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1328,
																	"nodeType": "ExpressionStatement",
																	"src": "11255:11:2"
																},
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "11284:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11294:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11284:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "11284:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1335,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "11327:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11336:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11327:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11340:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11327:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1349,
														"nodeType": "IfStatement",
														"src": "11323:93:2",
														"trueBody": {
															"id": 1348,
															"nodeType": "Block",
															"src": "11343:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "11361:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11361:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1343,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:11:2"
																},
																{
																	"expression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "11390:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11400:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11390:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"nodeType": "ExpressionStatement",
																	"src": "11390:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "11433:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11442:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11433:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11433:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1364,
														"nodeType": "IfStatement",
														"src": "11429:93:2",
														"trueBody": {
															"id": 1363,
															"nodeType": "Block",
															"src": "11449:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1355,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "11467:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11477:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11467:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1358,
																	"nodeType": "ExpressionStatement",
																	"src": "11467:11:2"
																},
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1359,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "11496:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11506:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11496:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "11496:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1365,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "11539:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11548:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11539:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11552:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11539:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "11535:64:2",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "11555:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "11573:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11583:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11573:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "11573:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1377,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1257,
													"src": "11625:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1378,
												"nodeType": "Return",
												"src": "11618:13:2"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "10537:113:2",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10664:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10668:15:2"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10707:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10706:9:2"
									},
									"scope": 1708,
									"src": "10655:983:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "11871:165:2",
										"statements": [
											{
												"id": 1414,
												"nodeType": "UncheckedBlock",
												"src": "11881:149:2",
												"statements": [
													{
														"assignments": [
															1392
														],
														"declarations": [
															{
																"constant": false,
																"id": 1392,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11913:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1414,
																"src": "11905:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1391,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11905:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1396,
														"initialValue": {
															"arguments": [
																{
																	"id": 1394,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "11927:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1393,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1380,
																	1416
																],
																"referencedDeclaration": 1380,
																"src": "11922:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11922:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11905:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1397,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "11954:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$691",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1398,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1386,
																					"src": "11964:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1399,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 691,
																						"src": "11976:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$691_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11985:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 689,
																					"src": "11976:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11964:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11991:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1403,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1392,
																						"src": "11996:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11991:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1405,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1383,
																					"src": "12005:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11991:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11964:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12017:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11964:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12013:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1411,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11963:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11954:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1390,
														"id": 1413,
														"nodeType": "Return",
														"src": "11947:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "11644:142:2",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11800:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "11805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11829:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "11820:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$691",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1384,
														"name": "Rounding",
														"nameLocations": [
															"11820:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "11820:8:2"
													},
													"referencedDeclaration": 691,
													"src": "11820:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$691",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11804:34:2"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "11862:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11862:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11861:9:2"
									},
									"scope": 1708,
									"src": "11791:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "12223:854:2",
										"statements": [
											{
												"assignments": [
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12241:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "12233:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12233:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"hexValue": "30",
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12250:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12233:18:2"
											},
											{
												"id": 1541,
												"nodeType": "UncheckedBlock",
												"src": "12261:787:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1428,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12289:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12298:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12304:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12298:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12289:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1444,
														"nodeType": "IfStatement",
														"src": "12285:103:2",
														"trueBody": {
															"id": 1443,
															"nodeType": "Block",
															"src": "12308:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1433,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12326:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12335:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12341:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12335:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12326:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1438,
																	"nodeType": "ExpressionStatement",
																	"src": "12326:17:2"
																},
																{
																	"expression": {
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1439,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "12361:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12371:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12361:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1442,
																	"nodeType": "ExpressionStatement",
																	"src": "12361:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12405:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12414:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12420:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12414:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12405:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1461,
														"nodeType": "IfStatement",
														"src": "12401:103:2",
														"trueBody": {
															"id": 1460,
															"nodeType": "Block",
															"src": "12424:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1450,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12442:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12451:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12457:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12451:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12442:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "12442:17:2"
																},
																{
																	"expression": {
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1456,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "12477:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12487:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12477:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1459,
																	"nodeType": "ExpressionStatement",
																	"src": "12477:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1462,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12521:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12530:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12536:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12530:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12521:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1478,
														"nodeType": "IfStatement",
														"src": "12517:103:2",
														"trueBody": {
															"id": 1477,
															"nodeType": "Block",
															"src": "12540:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1467,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12558:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12567:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12573:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12567:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12558:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1472,
																	"nodeType": "ExpressionStatement",
																	"src": "12558:17:2"
																},
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1473,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "12593:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12603:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12593:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "12593:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12637:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12646:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12652:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12646:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12637:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1495,
														"nodeType": "IfStatement",
														"src": "12633:100:2",
														"trueBody": {
															"id": 1494,
															"nodeType": "Block",
															"src": "12655:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1484,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12673:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12682:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12688:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12682:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12673:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1489,
																	"nodeType": "ExpressionStatement",
																	"src": "12673:16:2"
																},
																{
																	"expression": {
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1490,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "12707:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12717:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12707:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1493,
																	"nodeType": "ExpressionStatement",
																	"src": "12707:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1496,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12750:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12759:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12765:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12759:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12750:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1512,
														"nodeType": "IfStatement",
														"src": "12746:100:2",
														"trueBody": {
															"id": 1511,
															"nodeType": "Block",
															"src": "12768:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12786:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12795:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12801:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12795:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12786:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "12786:16:2"
																},
																{
																	"expression": {
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1507,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "12820:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12830:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12820:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1510,
																	"nodeType": "ExpressionStatement",
																	"src": "12820:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1513,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12863:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12872:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12878:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12872:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12863:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1529,
														"nodeType": "IfStatement",
														"src": "12859:100:2",
														"trueBody": {
															"id": 1528,
															"nodeType": "Block",
															"src": "12881:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "12899:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12908:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12914:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12908:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12899:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1523,
																	"nodeType": "ExpressionStatement",
																	"src": "12899:16:2"
																},
																{
																	"expression": {
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1524,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "12933:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12943:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12933:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1527,
																	"nodeType": "ExpressionStatement",
																	"src": "12933:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12976:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12985:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12991:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12985:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "12976:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "12972:66:2",
														"trueBody": {
															"id": 1539,
															"nodeType": "Block",
															"src": "12994:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1535,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "13012:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13022:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13012:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1538,
																	"nodeType": "ExpressionStatement",
																	"src": "13012:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1542,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1425,
													"src": "13064:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1543,
												"nodeType": "Return",
												"src": "13057:13:2"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "12042:114:2",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12170:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12184:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "12176:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12175:15:2"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "12214:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12213:9:2"
									},
									"scope": 1708,
									"src": "12161:916:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "13312:167:2",
										"statements": [
											{
												"id": 1579,
												"nodeType": "UncheckedBlock",
												"src": "13322:151:2",
												"statements": [
													{
														"assignments": [
															1557
														],
														"declarations": [
															{
																"constant": false,
																"id": 1557,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13354:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1579,
																"src": "13346:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1556,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13346:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1561,
														"initialValue": {
															"arguments": [
																{
																	"id": 1559,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1548,
																	"src": "13369:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1558,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1545,
																	1581
																],
																"referencedDeclaration": 1545,
																"src": "13363:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13363:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13346:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1562,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "13396:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$691",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1563,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1551,
																					"src": "13406:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1564,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 691,
																						"src": "13418:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$691_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13427:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 689,
																					"src": "13418:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13406:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1567,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13433:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1568,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1557,
																						"src": "13439:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13433:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1570,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1548,
																					"src": "13448:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13433:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13406:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13460:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13406:55:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13456:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13405:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13396:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1555,
														"id": 1578,
														"nodeType": "Return",
														"src": "13389:73:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "13083:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13240:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13254:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "13246:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "13261:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$691",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1549,
														"name": "Rounding",
														"nameLocations": [
															"13261:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "13261:8:2"
													},
													"referencedDeclaration": 691,
													"src": "13261:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$691",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13245:34:2"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "13303:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:9:2"
									},
									"scope": 1708,
									"src": "13231:248:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "13793:600:2",
										"statements": [
											{
												"assignments": [
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13811:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1667,
														"src": "13803:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1592,
												"initialValue": {
													"hexValue": "30",
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13820:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13803:18:2"
											},
											{
												"id": 1664,
												"nodeType": "UncheckedBlock",
												"src": "13831:533:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1593,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "13859:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13868:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13859:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13874:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13859:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1607,
														"nodeType": "IfStatement",
														"src": "13855:98:2",
														"trueBody": {
															"id": 1606,
															"nodeType": "Block",
															"src": "13877:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1598,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "13895:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13905:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13895:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1601,
																	"nodeType": "ExpressionStatement",
																	"src": "13895:13:2"
																},
																{
																	"expression": {
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1602,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "13926:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13936:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13926:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1605,
																	"nodeType": "ExpressionStatement",
																	"src": "13926:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1608,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "13970:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13979:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13970:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13984:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13970:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1622,
														"nodeType": "IfStatement",
														"src": "13966:95:2",
														"trueBody": {
															"id": 1621,
															"nodeType": "Block",
															"src": "13987:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "14005:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14015:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14005:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1616,
																	"nodeType": "ExpressionStatement",
																	"src": "14005:12:2"
																},
																{
																	"expression": {
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1617,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "14035:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14045:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14035:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1620,
																	"nodeType": "ExpressionStatement",
																	"src": "14035:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "14078:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14087:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14078:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14092:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14078:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1637,
														"nodeType": "IfStatement",
														"src": "14074:95:2",
														"trueBody": {
															"id": 1636,
															"nodeType": "Block",
															"src": "14095:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1628,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "14113:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14123:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14113:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1631,
																	"nodeType": "ExpressionStatement",
																	"src": "14113:12:2"
																},
																{
																	"expression": {
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1632,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "14143:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14153:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14143:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1635,
																	"nodeType": "ExpressionStatement",
																	"src": "14143:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "14186:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14195:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14186:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14200:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14186:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1652,
														"nodeType": "IfStatement",
														"src": "14182:95:2",
														"trueBody": {
															"id": 1651,
															"nodeType": "Block",
															"src": "14203:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1643,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "14221:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14231:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14221:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1646,
																	"nodeType": "ExpressionStatement",
																	"src": "14221:12:2"
																},
																{
																	"expression": {
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1647,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "14251:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14261:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14251:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1650,
																	"nodeType": "ExpressionStatement",
																	"src": "14251:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1653,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "14294:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14303:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14294:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14307:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14294:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1663,
														"nodeType": "IfStatement",
														"src": "14290:64:2",
														"trueBody": {
															"id": 1662,
															"nodeType": "Block",
															"src": "14310:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1658,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "14328:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14338:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14328:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1661,
																	"nodeType": "ExpressionStatement",
																	"src": "14328:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1665,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1590,
													"src": "14380:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1666,
												"nodeType": "Return",
												"src": "14373:13:2"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "13485:240:2",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13739:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "13746:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13745:15:2"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "13784:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13784:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13783:9:2"
									},
									"scope": 1708,
									"src": "13730:663:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "14630:174:2",
										"statements": [
											{
												"id": 1705,
												"nodeType": "UncheckedBlock",
												"src": "14640:158:2",
												"statements": [
													{
														"assignments": [
															1680
														],
														"declarations": [
															{
																"constant": false,
																"id": 1680,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14672:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1705,
																"src": "14664:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1679,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14664:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1684,
														"initialValue": {
															"arguments": [
																{
																	"id": 1682,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "14688:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1681,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1668,
																	1707
																],
																"referencedDeclaration": 1668,
																"src": "14681:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14681:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14664:30:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "14715:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$691",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1686,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1674,
																					"src": "14725:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1687,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 691,
																						"src": "14737:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$691_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14746:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 689,
																					"src": "14737:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$691",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "14725:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14752:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1693,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1691,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1680,
																									"src": "14758:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1692,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14768:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14758:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1694,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14757:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14752:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1696,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1671,
																					"src": "14773:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14752:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14725:53:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14785:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14725:61:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14781:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14724:63:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14715:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1678,
														"id": 1704,
														"nodeType": "Return",
														"src": "14708:79:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "14399:144:2",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14557:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14572:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "14564:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14588:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "14579:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$691",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1673,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1672,
														"name": "Rounding",
														"nameLocations": [
															"14579:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "14579:8:2"
													},
													"referencedDeclaration": 691,
													"src": "14579:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$691",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14563:34:2"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "14621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14620:9:2"
									},
									"scope": 1708,
									"src": "14548:256:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1709,
							"src": "203:14603:2",
							"usedErrors": []
						}
					],
					"src": "103:14704:2"
				},
				"id": 2
			}
		}
	}
}