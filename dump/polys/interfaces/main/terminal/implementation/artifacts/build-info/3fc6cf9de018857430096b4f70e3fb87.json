{
	"id": "3fc6cf9de018857430096b4f70e3fb87",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/polygon/interfaces/main/terminal/implementation/ITerminalImplementation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport \"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol\";\nimport \"contracts/polygon/interfaces/access-control/IRole.sol\";\nimport \"contracts/polygon/interfaces/security/IPausable.sol\";\nimport \"contracts/polygon/interfaces/utils/ILowLevelCall.sol\";\n\ninterface ITerminalImplementation is IDefaultImplementation, IRole, ILowLevelCall {\n\n    /**\n    * @dev Initializes the contract. This function is called only once during deployment.\n    * It sets the initial implementation and transfers ownership to the deployer.\n    */\n    function initialize() external;\n\n    /**\n    * @dev Upgrades the contract's implementation. Only accessible by an address with the UPGRADER_ROLE\n    * and when the contract is paused.\n    * @param implementation The address of the new implementation.\n    */\n    function upgrade(address implementation) external;\n\n    /**\n    * @dev Pauses the contract. Only accessible by an address with the PAUSER_ROLE.\n    */\n    function pause() external;\n\n    /**\n    * @dev Unpauses the contract. Only accessible by an address with the UNPAUSE_ROLE.\n    */\n    function unpause() external;\n\n    /**\n    * @dev Initiates a low-level call to the specified target address with the provided data.\n    * Only accessible by an address with the LOW_LEVEL_CALLER_ROLE.\n    */\n    function lowLevelCall(address target, bytes memory data) external returns (bytes memory);\n}"
			},
			"contracts/polygon/interfaces/utils/ILowLevelCall.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface ILowLevelCall {\n\n    /**\n    * @dev Emitted when a low-level call is executed.\n    * @param target The target address of the call.\n    * @param data The data passed to the call.\n    * @param response The response received from the call.\n    */\n    event LowLevelCall(address indexed target, bytes indexed data, bytes indexed response);\n}"
			},
			"contracts/polygon/interfaces/security/IPausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface IPausable {\n\n    /**\n    * @dev Emitted when the contract is paused.\n    */\n    event Paused();\n\n    /**\n    * @dev Emitted when the contract is unpaused.\n    */\n    event Unpaused();\n\n    /**\n    * @dev Returns the key for the paused state.\n    */\n    function pausedKey() external pure returns (bytes32);\n\n    /**\n    * @dev Returns the current paused state.\n    */\n    function paused() external view returns (bool);\n}"
			},
			"contracts/polygon/interfaces/access-control/IRole.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IRole {\n\n    /**\n    * @dev Emitted when the admin role of a role is changed.\n    * @param role The role for which the admin role is changed.\n    * @param oldAdminRole The previous admin role of the specified role.\n    * @param newAdminRole The new admin role assigned to the specified role.\n    */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed oldAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n    * @dev Emitted when an account is granted a role.\n    * @param role The role that is granted.\n    * @param account The address that is granted the role.\n    * @param sender The address initiating the role grant.\n    */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n    * @dev Emitted when an account has a role revoked.\n    * @param role The role that is revoked.\n    * @param account The address that has the role revoked.\n    * @param sender The address initiating the role revocation.\n    */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n    * @dev Reverts with \"Unauthorized\" error if an account lacks the required role.\n    * @param account The address that lacks the required role.\n    * @param roleRequired The required role that is missing.\n    */\n    error Unauthorized(address account, bytes32 roleRequired);\n\n    /**\n    * @dev Public pure function to compute the keccak256 hash of a given string.\n    * @param dat The input string to hash.\n    * @return bytes32 representing the keccak256 hash of the input string.\n    */\n    function hash(string memory dat) external pure returns (bytes32);\n\n    /**\n    * @dev Public pure function to generate a unique key for the set of available roles.\n    * @return bytes32 representing the unique key for the set of available roles.\n    */\n    function rolesKey() external pure returns (bytes32);\n\n    /**\n    * @dev Public pure function to generate a unique key for a role in the context of storing members.\n    * @param role The role for which to generate the key.\n    * @return bytes32 representing the unique key for the specified role in the context of storing members.\n    */\n    function roleKey(bytes32 role) external pure returns (bytes32);\n\n    /**\n    * @dev Public pure function to generate a unique key for the role admin of a specified role.\n    * @param role The role for which to generate the role admin key.\n    * @return bytes32 representing the unique key for the role admin of the specified role.\n    */\n    function roleAdminKey(bytes32 role) external pure returns (bytes32);\n\n    /**\n    * @dev Public pure virtual function to generate a unique key for the default admin role.\n    * @return bytes32 representing the unique key for the default admin role.\n    * @dev This function must be implemented in derived contracts to provide the default admin role key.\n    */\n    function defaultAdminRoleKey() external pure returns (bytes32);\n\n    /**\n    * @dev Public view function to check if an account has a specified role.\n    * @param role The role for which to check.\n    * @param account The address of the account to check for the specified role.\n    * @return bool indicating whether the account has the specified role.\n    */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n    * @dev Public view function to retrieve the list of members for a specified role.\n    * @param role The role for which to retrieve the members.\n    * @return address[] memory representing the array of addresses that have the specified role.\n    * @dev This function returns the addresses that have the specified role in the order they were added.\n    */\n    function members(bytes32 role, uint256 id) external view returns (address);\n\n    /**\n    * @dev Public view virtual function to retrieve the number of members in a role.\n    * @param role The role for which to retrieve the number of members.\n    * @return uint256 representing the number of members in the specified role.\n    */\n    function membersLength(bytes32 role) external view returns (uint256);\n\n    /**\n    * @dev Public view function to retrieve the list of roles available.\n    * @return bytes32[] memory representing the array of roles.\n    * @dev This function returns the roles in the order they were added.\n    */\n    function roles(uint256 id) external view returns (bytes32);\n\n    /**\n    * @dev Public view virtual function to retrieve the number of roles.\n    * @return uint256 representing the number of roles.\n    */\n    function rolesLength() external view returns (uint256);\n\n    /**\n    * @dev Public function to require that the calling account has a specified role.\n    * @param role The role that the account must have.\n    * @param account The address of the account to check for the specified role.\n    * @dev If the account does not have the required role, it reverts with the \"Unauthorized\" error.\n    */\n    function requireRole(bytes32 role, address account) external view;\n\n    /**\n    * @dev Public view function to retrieve the admin role for a specified role.\n    * @param role The role for which to retrieve the admin role.\n    * @return bytes32 representing the admin role for the specified role.\n    */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n    * @dev Public function to grant a role to a specified account.\n    * @param role The role to be granted.\n    * @param account The address of the account to which the role will be granted.\n    * @dev This function can only be called by a role admin.\n    * @dev It grants the specified role to the specified account and emits the RoleGranted event.\n    */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n    * @dev Public function to revoke a role from a specified account.\n    * @param role The role to be revoked.\n    * @param account The address of the account from which the role will be revoked.\n    * @dev This function can only be called by a role admin.\n    * @dev It revokes the specified role from the specified account and emits the RoleRevoked event.\n    */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n    * @dev Public function to set a new role admin for a specified role.\n    * @param role The role for which the admin is being set.\n    * @param newRoleAdmin The new role admin address.\n    * @dev This function can only be called by the default admin role.\n    * @dev It sets the new role admin and emits the RoleAdminChanged event.\n    */\n    function setRoleAdmin(bytes32 role, bytes32 newRoleAdmin) external;\n}"
			},
			"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport \"contracts/polygon/interfaces/proxy/IBase.sol\";\nimport \"contracts/polygon/interfaces/access-control/IOwnable.sol\";\nimport \"contracts/polygon/interfaces/security/IPausable.sol\";\n\n/**\n* initializedKey => bool\n */\ninterface IDefaultImplementation is IBase, IOwnable, IPausable {\n    \n    /**\n    * @dev Returns the key used to store the initialization status.\n    */\n    function initializedKey() external pure returns (bytes32);\n\n    /**\n    * @dev Returns whether the contract has been initialized.\n    */\n    function initialized() external view returns (bool);\n\n    /**\n    * @dev Upgrades the contract to a new implementation.\n    * Can only be called by the owner.\n    * @param implementation The address of the new implementation.\n    */\n    function upgrade(address implementation) external;\n\n    /**\n    * @dev Initializes the contract. \n    * Can only be called if the contract has not been initialized yet.\n    */\n    function initialize() external;\n}"
			},
			"contracts/polygon/interfaces/access-control/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\n/**\n* ownerKey => address\n */\ninterface IOwnable {\n\n    /**\n    * @dev Emitted when ownership of the contract is transferred.\n    * @param oldOwner The address of the old owner.\n    * @param newOwner The address of the new owner.\n    */\n    event OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\n\n    /**\n    * @dev Returns the key for the owner in the storage mapping.\n    * @return The key for the owner.\n    */\n    function ownerkey() external pure returns (bytes32);\n\n    /**\n    * @dev Returns the current owner of the contract.\n    * @return The address of the current owner.\n    */\n    function owner() external view returns (address);\n\n    /**\n    * @dev Renounces ownership, leaving the contract without an owner.\n    */\n    function renounceOwnership() external;\n\n    /**\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\n    * Can only be called by the current owner.\n    */\n    function transferOwnership(address newOwner) external;\n}"
			},
			"contracts/polygon/interfaces/proxy/IBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\n/**\n* NOTE: https://docs.openzeppelin.com/upgrades-plugins/1.x/proxies\n*\n* implementationKey => address\n* implementationTimelineKey => addressArray\n* initialImplementationHasBeenSetKey => address\n */\ninterface IBase {\n\n    /**\n    * @dev Emitted when the contract is upgraded to a new implementation.\n    * \n    * @param implementation The address of the new implementation contract.\n    */\n    event Upgraded(address indexed implementation);\n\n    /**\n    * @dev Returns the key used to store the address of the current implementation contract.\n    */\n    function implementationKey() external pure returns (bytes32);\n\n    /**\n    * @dev Returns the key used to store the timeline of implementation contracts.\n    */\n    function implementationTimelineKey() external pure returns (bytes32);\n\n    /**\n    * @dev Returns the key used to check if the initial implementation has been set.\n    */\n    function initialImplementationHasBeenSetKey() external pure returns (bool);\n\n    /**\n    * @dev Returns the current implementation address.\n    */\n    function implementation() external view returns (address);\n\n    /**\n    * @dev Returns the implementation address at a specific timeline point.\n    * @param implementationId The index of the implementation in the timeline.\n    */\n    function implementationTimeline(uint256 implementationId) external view returns (address);\n\n    /**\n    * @dev Returns the number of implementations in the timeline.\n    */\n    function implementationTimelineLength() external view returns (uint256);\n\n    /**\n    * @dev Checks if the initial implementation has been set.\n    */\n    function initialImplementationHasBeenSet() external view returns (bool);\n\n    /**\n    * @dev Sets the initial implementation if it has not been set yet.\n    * @param implementation The address of the initial implementation.\n    */\n    function setInitialImplementation(address implementation) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/polygon/interfaces/access-control/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"OwnershipTransferred(address,address)": {
								"details": "Emitted when ownership of the contract is transferred.",
								"params": {
									"newOwner": "The address of the new owner.",
									"oldOwner": "The address of the old owner."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the current owner of the contract.",
								"returns": {
									"_0": "The address of the current owner."
								}
							},
							"ownerkey()": {
								"details": "Returns the key for the owner in the storage mapping.",
								"returns": {
									"_0": "The key for the owner."
								}
							},
							"renounceOwnership()": {
								"details": "Renounces ownership, leaving the contract without an owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"ownerkey()": "8133f6b1",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"Emitted when ownership of the contract is transferred.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"oldOwner\":\"The address of the old owner.\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the current owner of the contract.\",\"returns\":{\"_0\":\"The address of the current owner.\"}},\"ownerkey()\":{\"details\":\"Returns the key for the owner in the storage mapping.\",\"returns\":{\"_0\":\"The key for the owner.\"}},\"renounceOwnership()\":{\"details\":\"Renounces ownership, leaving the contract without an owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ownerKey => address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/access-control/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/access-control/IOwnable.sol\":{\"keccak256\":\"0x1d12c060033c0cf06f5cd380511eb0d6010576ad7a05fae23fcc3785621a3960\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://835791130f15ab2646166cc4b23fc2bbfb26cda6584c99958b2a06d8a01f34bb\",\"dweb:/ipfs/QmdVj4kNEYQNTUeYb2ay3NXTyWYNSLWbR1JeDyfjUda23a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "ownerKey => address",
						"version": 1
					}
				}
			},
			"contracts/polygon/interfaces/access-control/IRole.sol": {
				"IRole": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "roleRequired",
									"type": "bytes32"
								}
							],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "oldAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "defaultAdminRoleKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "dat",
									"type": "string"
								}
							],
							"name": "hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "members",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "membersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "requireRole",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "roleAdminKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "roleKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "roles",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rolesKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rolesLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "newRoleAdmin",
									"type": "bytes32"
								}
							],
							"name": "setRoleAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"Unauthorized(address,bytes32)": [
								{
									"details": "Reverts with \"Unauthorized\" error if an account lacks the required role.",
									"params": {
										"account": "The address that lacks the required role.",
										"roleRequired": "The required role that is missing."
									}
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when the admin role of a role is changed.",
								"params": {
									"newAdminRole": "The new admin role assigned to the specified role.",
									"oldAdminRole": "The previous admin role of the specified role.",
									"role": "The role for which the admin role is changed."
								}
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when an account is granted a role.",
								"params": {
									"account": "The address that is granted the role.",
									"role": "The role that is granted.",
									"sender": "The address initiating the role grant."
								}
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when an account has a role revoked.",
								"params": {
									"account": "The address that has the role revoked.",
									"role": "The role that is revoked.",
									"sender": "The address initiating the role revocation."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"defaultAdminRoleKey()": {
								"details": "Public pure virtual function to generate a unique key for the default admin role.This function must be implemented in derived contracts to provide the default admin role key.",
								"returns": {
									"_0": "bytes32 representing the unique key for the default admin role."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Public view function to retrieve the admin role for a specified role.",
								"params": {
									"role": "The role for which to retrieve the admin role."
								},
								"returns": {
									"_0": "bytes32 representing the admin role for the specified role."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Public function to grant a role to a specified account.This function can only be called by a role admin.It grants the specified role to the specified account and emits the RoleGranted event.",
								"params": {
									"account": "The address of the account to which the role will be granted.",
									"role": "The role to be granted."
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Public view function to check if an account has a specified role.",
								"params": {
									"account": "The address of the account to check for the specified role.",
									"role": "The role for which to check."
								},
								"returns": {
									"_0": "bool indicating whether the account has the specified role."
								}
							},
							"hash(string)": {
								"details": "Public pure function to compute the keccak256 hash of a given string.",
								"params": {
									"dat": "The input string to hash."
								},
								"returns": {
									"_0": "bytes32 representing the keccak256 hash of the input string."
								}
							},
							"members(bytes32,uint256)": {
								"details": "Public view function to retrieve the list of members for a specified role.This function returns the addresses that have the specified role in the order they were added.",
								"params": {
									"role": "The role for which to retrieve the members."
								},
								"returns": {
									"_0": "address[] memory representing the array of addresses that have the specified role."
								}
							},
							"membersLength(bytes32)": {
								"details": "Public view virtual function to retrieve the number of members in a role.",
								"params": {
									"role": "The role for which to retrieve the number of members."
								},
								"returns": {
									"_0": "uint256 representing the number of members in the specified role."
								}
							},
							"requireRole(bytes32,address)": {
								"details": "Public function to require that the calling account has a specified role.If the account does not have the required role, it reverts with the \"Unauthorized\" error.",
								"params": {
									"account": "The address of the account to check for the specified role.",
									"role": "The role that the account must have."
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Public function to revoke a role from a specified account.This function can only be called by a role admin.It revokes the specified role from the specified account and emits the RoleRevoked event.",
								"params": {
									"account": "The address of the account from which the role will be revoked.",
									"role": "The role to be revoked."
								}
							},
							"roleAdminKey(bytes32)": {
								"details": "Public pure function to generate a unique key for the role admin of a specified role.",
								"params": {
									"role": "The role for which to generate the role admin key."
								},
								"returns": {
									"_0": "bytes32 representing the unique key for the role admin of the specified role."
								}
							},
							"roleKey(bytes32)": {
								"details": "Public pure function to generate a unique key for a role in the context of storing members.",
								"params": {
									"role": "The role for which to generate the key."
								},
								"returns": {
									"_0": "bytes32 representing the unique key for the specified role in the context of storing members."
								}
							},
							"roles(uint256)": {
								"details": "Public view function to retrieve the list of roles available.This function returns the roles in the order they were added.",
								"returns": {
									"_0": "bytes32[] memory representing the array of roles."
								}
							},
							"rolesKey()": {
								"details": "Public pure function to generate a unique key for the set of available roles.",
								"returns": {
									"_0": "bytes32 representing the unique key for the set of available roles."
								}
							},
							"rolesLength()": {
								"details": "Public view virtual function to retrieve the number of roles.",
								"returns": {
									"_0": "uint256 representing the number of roles."
								}
							},
							"setRoleAdmin(bytes32,bytes32)": {
								"details": "Public function to set a new role admin for a specified role.This function can only be called by the default admin role.It sets the new role admin and emits the RoleAdminChanged event.",
								"params": {
									"newRoleAdmin": "The new role admin address.",
									"role": "The role for which the admin is being set."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"defaultAdminRoleKey()": "1e18f5c9",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"hash(string)": "b411ee94",
							"members(bytes32,uint256)": "92beb2a1",
							"membersLength(bytes32)": "d52f8024",
							"requireRole(bytes32,address)": "d09a20c5",
							"revokeRole(bytes32,address)": "d547741f",
							"roleAdminKey(bytes32)": "bccf0e5e",
							"roleKey(bytes32)": "a657a47e",
							"roles(uint256)": "bfda4a49",
							"rolesKey()": "9db80bf0",
							"rolesLength()": "9dce27ae",
							"setRoleAdmin(bytes32,bytes32)": "1e4e0091"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"roleRequired\",\"type\":\"bytes32\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"oldAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultAdminRoleKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dat\",\"type\":\"string\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"membersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"requireRole\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"roleAdminKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"roleKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rolesKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rolesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newRoleAdmin\",\"type\":\"bytes32\"}],\"name\":\"setRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Unauthorized(address,bytes32)\":[{\"details\":\"Reverts with \\\"Unauthorized\\\" error if an account lacks the required role.\",\"params\":{\"account\":\"The address that lacks the required role.\",\"roleRequired\":\"The required role that is missing.\"}}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when the admin role of a role is changed.\",\"params\":{\"newAdminRole\":\"The new admin role assigned to the specified role.\",\"oldAdminRole\":\"The previous admin role of the specified role.\",\"role\":\"The role for which the admin role is changed.\"}},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when an account is granted a role.\",\"params\":{\"account\":\"The address that is granted the role.\",\"role\":\"The role that is granted.\",\"sender\":\"The address initiating the role grant.\"}},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when an account has a role revoked.\",\"params\":{\"account\":\"The address that has the role revoked.\",\"role\":\"The role that is revoked.\",\"sender\":\"The address initiating the role revocation.\"}}},\"kind\":\"dev\",\"methods\":{\"defaultAdminRoleKey()\":{\"details\":\"Public pure virtual function to generate a unique key for the default admin role.This function must be implemented in derived contracts to provide the default admin role key.\",\"returns\":{\"_0\":\"bytes32 representing the unique key for the default admin role.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Public view function to retrieve the admin role for a specified role.\",\"params\":{\"role\":\"The role for which to retrieve the admin role.\"},\"returns\":{\"_0\":\"bytes32 representing the admin role for the specified role.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Public function to grant a role to a specified account.This function can only be called by a role admin.It grants the specified role to the specified account and emits the RoleGranted event.\",\"params\":{\"account\":\"The address of the account to which the role will be granted.\",\"role\":\"The role to be granted.\"}},\"hasRole(bytes32,address)\":{\"details\":\"Public view function to check if an account has a specified role.\",\"params\":{\"account\":\"The address of the account to check for the specified role.\",\"role\":\"The role for which to check.\"},\"returns\":{\"_0\":\"bool indicating whether the account has the specified role.\"}},\"hash(string)\":{\"details\":\"Public pure function to compute the keccak256 hash of a given string.\",\"params\":{\"dat\":\"The input string to hash.\"},\"returns\":{\"_0\":\"bytes32 representing the keccak256 hash of the input string.\"}},\"members(bytes32,uint256)\":{\"details\":\"Public view function to retrieve the list of members for a specified role.This function returns the addresses that have the specified role in the order they were added.\",\"params\":{\"role\":\"The role for which to retrieve the members.\"},\"returns\":{\"_0\":\"address[] memory representing the array of addresses that have the specified role.\"}},\"membersLength(bytes32)\":{\"details\":\"Public view virtual function to retrieve the number of members in a role.\",\"params\":{\"role\":\"The role for which to retrieve the number of members.\"},\"returns\":{\"_0\":\"uint256 representing the number of members in the specified role.\"}},\"requireRole(bytes32,address)\":{\"details\":\"Public function to require that the calling account has a specified role.If the account does not have the required role, it reverts with the \\\"Unauthorized\\\" error.\",\"params\":{\"account\":\"The address of the account to check for the specified role.\",\"role\":\"The role that the account must have.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Public function to revoke a role from a specified account.This function can only be called by a role admin.It revokes the specified role from the specified account and emits the RoleRevoked event.\",\"params\":{\"account\":\"The address of the account from which the role will be revoked.\",\"role\":\"The role to be revoked.\"}},\"roleAdminKey(bytes32)\":{\"details\":\"Public pure function to generate a unique key for the role admin of a specified role.\",\"params\":{\"role\":\"The role for which to generate the role admin key.\"},\"returns\":{\"_0\":\"bytes32 representing the unique key for the role admin of the specified role.\"}},\"roleKey(bytes32)\":{\"details\":\"Public pure function to generate a unique key for a role in the context of storing members.\",\"params\":{\"role\":\"The role for which to generate the key.\"},\"returns\":{\"_0\":\"bytes32 representing the unique key for the specified role in the context of storing members.\"}},\"roles(uint256)\":{\"details\":\"Public view function to retrieve the list of roles available.This function returns the roles in the order they were added.\",\"returns\":{\"_0\":\"bytes32[] memory representing the array of roles.\"}},\"rolesKey()\":{\"details\":\"Public pure function to generate a unique key for the set of available roles.\",\"returns\":{\"_0\":\"bytes32 representing the unique key for the set of available roles.\"}},\"rolesLength()\":{\"details\":\"Public view virtual function to retrieve the number of roles.\",\"returns\":{\"_0\":\"uint256 representing the number of roles.\"}},\"setRoleAdmin(bytes32,bytes32)\":{\"details\":\"Public function to set a new role admin for a specified role.This function can only be called by the default admin role.It sets the new role admin and emits the RoleAdminChanged event.\",\"params\":{\"newRoleAdmin\":\"The new role admin address.\",\"role\":\"The role for which the admin is being set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/access-control/IRole.sol\":\"IRole\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/access-control/IRole.sol\":{\"keccak256\":\"0x24c48a41699ae384f59cc206bf97227232cc36ae1e7666c9c5c184e4f4d0a5dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92da2da1d02ddac181c06b178653cd95a4fa5601b6c72b50f1d5923f1a61dde8\",\"dweb:/ipfs/QmUhVYgULzCkAEKeRjV4qjpGQx482F6zRkwpsSyqR15cui\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/polygon/interfaces/main/terminal/implementation/ITerminalImplementation.sol": {
				"ITerminalImplementation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "roleRequired",
									"type": "bytes32"
								}
							],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "response",
									"type": "bytes"
								}
							],
							"name": "LowLevelCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "oldAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "defaultAdminRoleKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "dat",
									"type": "string"
								}
							],
							"name": "hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "implementationId",
									"type": "uint256"
								}
							],
							"name": "implementationTimeline",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationTimelineKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationTimelineLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialImplementationHasBeenSet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialImplementationHasBeenSetKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializedKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "lowLevelCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "members",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "membersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pausedKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "requireRole",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "roleAdminKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "roleKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "roles",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rolesKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rolesLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "setInitialImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "newRoleAdmin",
									"type": "bytes32"
								}
							],
							"name": "setRoleAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"Unauthorized(address,bytes32)": [
								{
									"details": "Reverts with \"Unauthorized\" error if an account lacks the required role.",
									"params": {
										"account": "The address that lacks the required role.",
										"roleRequired": "The required role that is missing."
									}
								}
							]
						},
						"events": {
							"LowLevelCall(address,bytes,bytes)": {
								"details": "Emitted when a low-level call is executed.",
								"params": {
									"data": "The data passed to the call.",
									"response": "The response received from the call.",
									"target": "The target address of the call."
								}
							},
							"OwnershipTransferred(address,address)": {
								"details": "Emitted when ownership of the contract is transferred.",
								"params": {
									"newOwner": "The address of the new owner.",
									"oldOwner": "The address of the old owner."
								}
							},
							"Paused()": {
								"details": "Emitted when the contract is paused."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when the admin role of a role is changed.",
								"params": {
									"newAdminRole": "The new admin role assigned to the specified role.",
									"oldAdminRole": "The previous admin role of the specified role.",
									"role": "The role for which the admin role is changed."
								}
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when an account is granted a role.",
								"params": {
									"account": "The address that is granted the role.",
									"role": "The role that is granted.",
									"sender": "The address initiating the role grant."
								}
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when an account has a role revoked.",
								"params": {
									"account": "The address that has the role revoked.",
									"role": "The role that is revoked.",
									"sender": "The address initiating the role revocation."
								}
							},
							"Unpaused()": {
								"details": "Emitted when the contract is unpaused."
							},
							"Upgraded(address)": {
								"details": "Emitted when the contract is upgraded to a new implementation. ",
								"params": {
									"implementation": "The address of the new implementation contract."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"defaultAdminRoleKey()": {
								"details": "Public pure virtual function to generate a unique key for the default admin role.This function must be implemented in derived contracts to provide the default admin role key.",
								"returns": {
									"_0": "bytes32 representing the unique key for the default admin role."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Public view function to retrieve the admin role for a specified role.",
								"params": {
									"role": "The role for which to retrieve the admin role."
								},
								"returns": {
									"_0": "bytes32 representing the admin role for the specified role."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Public function to grant a role to a specified account.This function can only be called by a role admin.It grants the specified role to the specified account and emits the RoleGranted event.",
								"params": {
									"account": "The address of the account to which the role will be granted.",
									"role": "The role to be granted."
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Public view function to check if an account has a specified role.",
								"params": {
									"account": "The address of the account to check for the specified role.",
									"role": "The role for which to check."
								},
								"returns": {
									"_0": "bool indicating whether the account has the specified role."
								}
							},
							"hash(string)": {
								"details": "Public pure function to compute the keccak256 hash of a given string.",
								"params": {
									"dat": "The input string to hash."
								},
								"returns": {
									"_0": "bytes32 representing the keccak256 hash of the input string."
								}
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"implementationKey()": {
								"details": "Returns the key used to store the address of the current implementation contract."
							},
							"implementationTimeline(uint256)": {
								"details": "Returns the implementation address at a specific timeline point.",
								"params": {
									"implementationId": "The index of the implementation in the timeline."
								}
							},
							"implementationTimelineKey()": {
								"details": "Returns the key used to store the timeline of implementation contracts."
							},
							"implementationTimelineLength()": {
								"details": "Returns the number of implementations in the timeline."
							},
							"initialImplementationHasBeenSet()": {
								"details": "Checks if the initial implementation has been set."
							},
							"initialImplementationHasBeenSetKey()": {
								"details": "Returns the key used to check if the initial implementation has been set."
							},
							"initialize()": {
								"details": "Initializes the contract. This function is called only once during deployment. It sets the initial implementation and transfers ownership to the deployer."
							},
							"initialized()": {
								"details": "Returns whether the contract has been initialized."
							},
							"initializedKey()": {
								"details": "Returns the key used to store the initialization status."
							},
							"lowLevelCall(address,bytes)": {
								"details": "Initiates a low-level call to the specified target address with the provided data. Only accessible by an address with the LOW_LEVEL_CALLER_ROLE."
							},
							"members(bytes32,uint256)": {
								"details": "Public view function to retrieve the list of members for a specified role.This function returns the addresses that have the specified role in the order they were added.",
								"params": {
									"role": "The role for which to retrieve the members."
								},
								"returns": {
									"_0": "address[] memory representing the array of addresses that have the specified role."
								}
							},
							"membersLength(bytes32)": {
								"details": "Public view virtual function to retrieve the number of members in a role.",
								"params": {
									"role": "The role for which to retrieve the number of members."
								},
								"returns": {
									"_0": "uint256 representing the number of members in the specified role."
								}
							},
							"owner()": {
								"details": "Returns the current owner of the contract.",
								"returns": {
									"_0": "The address of the current owner."
								}
							},
							"ownerkey()": {
								"details": "Returns the key for the owner in the storage mapping.",
								"returns": {
									"_0": "The key for the owner."
								}
							},
							"pause()": {
								"details": "Pauses the contract. Only accessible by an address with the PAUSER_ROLE."
							},
							"paused()": {
								"details": "Returns the current paused state."
							},
							"pausedKey()": {
								"details": "Returns the key for the paused state."
							},
							"renounceOwnership()": {
								"details": "Renounces ownership, leaving the contract without an owner."
							},
							"requireRole(bytes32,address)": {
								"details": "Public function to require that the calling account has a specified role.If the account does not have the required role, it reverts with the \"Unauthorized\" error.",
								"params": {
									"account": "The address of the account to check for the specified role.",
									"role": "The role that the account must have."
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Public function to revoke a role from a specified account.This function can only be called by a role admin.It revokes the specified role from the specified account and emits the RoleRevoked event.",
								"params": {
									"account": "The address of the account from which the role will be revoked.",
									"role": "The role to be revoked."
								}
							},
							"roleAdminKey(bytes32)": {
								"details": "Public pure function to generate a unique key for the role admin of a specified role.",
								"params": {
									"role": "The role for which to generate the role admin key."
								},
								"returns": {
									"_0": "bytes32 representing the unique key for the role admin of the specified role."
								}
							},
							"roleKey(bytes32)": {
								"details": "Public pure function to generate a unique key for a role in the context of storing members.",
								"params": {
									"role": "The role for which to generate the key."
								},
								"returns": {
									"_0": "bytes32 representing the unique key for the specified role in the context of storing members."
								}
							},
							"roles(uint256)": {
								"details": "Public view function to retrieve the list of roles available.This function returns the roles in the order they were added.",
								"returns": {
									"_0": "bytes32[] memory representing the array of roles."
								}
							},
							"rolesKey()": {
								"details": "Public pure function to generate a unique key for the set of available roles.",
								"returns": {
									"_0": "bytes32 representing the unique key for the set of available roles."
								}
							},
							"rolesLength()": {
								"details": "Public view virtual function to retrieve the number of roles.",
								"returns": {
									"_0": "uint256 representing the number of roles."
								}
							},
							"setInitialImplementation(address)": {
								"details": "Sets the initial implementation if it has not been set yet.",
								"params": {
									"implementation": "The address of the initial implementation."
								}
							},
							"setRoleAdmin(bytes32,bytes32)": {
								"details": "Public function to set a new role admin for a specified role.This function can only be called by the default admin role.It sets the new role admin and emits the RoleAdminChanged event.",
								"params": {
									"newRoleAdmin": "The new role admin address.",
									"role": "The role for which the admin is being set."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Unpauses the contract. Only accessible by an address with the UNPAUSE_ROLE."
							},
							"upgrade(address)": {
								"details": "Upgrades the contract's implementation. Only accessible by an address with the UPGRADER_ROLE and when the contract is paused.",
								"params": {
									"implementation": "The address of the new implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"defaultAdminRoleKey()": "1e18f5c9",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"hash(string)": "b411ee94",
							"implementation()": "5c60da1b",
							"implementationKey()": "f4358896",
							"implementationTimeline(uint256)": "780e9368",
							"implementationTimelineKey()": "667d4359",
							"implementationTimelineLength()": "985fcf9c",
							"initialImplementationHasBeenSet()": "0717f3e6",
							"initialImplementationHasBeenSetKey()": "2145b31a",
							"initialize()": "8129fc1c",
							"initialized()": "158ef93e",
							"initializedKey()": "6676e926",
							"lowLevelCall(address,bytes)": "bae07360",
							"members(bytes32,uint256)": "92beb2a1",
							"membersLength(bytes32)": "d52f8024",
							"owner()": "8da5cb5b",
							"ownerkey()": "8133f6b1",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pausedKey()": "65ea2aa6",
							"renounceOwnership()": "715018a6",
							"requireRole(bytes32,address)": "d09a20c5",
							"revokeRole(bytes32,address)": "d547741f",
							"roleAdminKey(bytes32)": "bccf0e5e",
							"roleKey(bytes32)": "a657a47e",
							"roles(uint256)": "bfda4a49",
							"rolesKey()": "9db80bf0",
							"rolesLength()": "9dce27ae",
							"setInitialImplementation(address)": "fdb16540",
							"setRoleAdmin(bytes32,bytes32)": "1e4e0091",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgrade(address)": "0900f010"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"roleRequired\",\"type\":\"bytes32\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"LowLevelCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"oldAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultAdminRoleKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dat\",\"type\":\"string\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"implementationId\",\"type\":\"uint256\"}],\"name\":\"implementationTimeline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationTimelineKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationTimelineLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialImplementationHasBeenSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialImplementationHasBeenSetKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializedKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"lowLevelCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"membersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"requireRole\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"roleAdminKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"roleKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rolesKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rolesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"setInitialImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newRoleAdmin\",\"type\":\"bytes32\"}],\"name\":\"setRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Unauthorized(address,bytes32)\":[{\"details\":\"Reverts with \\\"Unauthorized\\\" error if an account lacks the required role.\",\"params\":{\"account\":\"The address that lacks the required role.\",\"roleRequired\":\"The required role that is missing.\"}}]},\"events\":{\"LowLevelCall(address,bytes,bytes)\":{\"details\":\"Emitted when a low-level call is executed.\",\"params\":{\"data\":\"The data passed to the call.\",\"response\":\"The response received from the call.\",\"target\":\"The target address of the call.\"}},\"OwnershipTransferred(address,address)\":{\"details\":\"Emitted when ownership of the contract is transferred.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"oldOwner\":\"The address of the old owner.\"}},\"Paused()\":{\"details\":\"Emitted when the contract is paused.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when the admin role of a role is changed.\",\"params\":{\"newAdminRole\":\"The new admin role assigned to the specified role.\",\"oldAdminRole\":\"The previous admin role of the specified role.\",\"role\":\"The role for which the admin role is changed.\"}},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when an account is granted a role.\",\"params\":{\"account\":\"The address that is granted the role.\",\"role\":\"The role that is granted.\",\"sender\":\"The address initiating the role grant.\"}},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when an account has a role revoked.\",\"params\":{\"account\":\"The address that has the role revoked.\",\"role\":\"The role that is revoked.\",\"sender\":\"The address initiating the role revocation.\"}},\"Unpaused()\":{\"details\":\"Emitted when the contract is unpaused.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the contract is upgraded to a new implementation. \",\"params\":{\"implementation\":\"The address of the new implementation contract.\"}}},\"kind\":\"dev\",\"methods\":{\"defaultAdminRoleKey()\":{\"details\":\"Public pure virtual function to generate a unique key for the default admin role.This function must be implemented in derived contracts to provide the default admin role key.\",\"returns\":{\"_0\":\"bytes32 representing the unique key for the default admin role.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Public view function to retrieve the admin role for a specified role.\",\"params\":{\"role\":\"The role for which to retrieve the admin role.\"},\"returns\":{\"_0\":\"bytes32 representing the admin role for the specified role.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Public function to grant a role to a specified account.This function can only be called by a role admin.It grants the specified role to the specified account and emits the RoleGranted event.\",\"params\":{\"account\":\"The address of the account to which the role will be granted.\",\"role\":\"The role to be granted.\"}},\"hasRole(bytes32,address)\":{\"details\":\"Public view function to check if an account has a specified role.\",\"params\":{\"account\":\"The address of the account to check for the specified role.\",\"role\":\"The role for which to check.\"},\"returns\":{\"_0\":\"bool indicating whether the account has the specified role.\"}},\"hash(string)\":{\"details\":\"Public pure function to compute the keccak256 hash of a given string.\",\"params\":{\"dat\":\"The input string to hash.\"},\"returns\":{\"_0\":\"bytes32 representing the keccak256 hash of the input string.\"}},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"implementationKey()\":{\"details\":\"Returns the key used to store the address of the current implementation contract.\"},\"implementationTimeline(uint256)\":{\"details\":\"Returns the implementation address at a specific timeline point.\",\"params\":{\"implementationId\":\"The index of the implementation in the timeline.\"}},\"implementationTimelineKey()\":{\"details\":\"Returns the key used to store the timeline of implementation contracts.\"},\"implementationTimelineLength()\":{\"details\":\"Returns the number of implementations in the timeline.\"},\"initialImplementationHasBeenSet()\":{\"details\":\"Checks if the initial implementation has been set.\"},\"initialImplementationHasBeenSetKey()\":{\"details\":\"Returns the key used to check if the initial implementation has been set.\"},\"initialize()\":{\"details\":\"Initializes the contract. This function is called only once during deployment. It sets the initial implementation and transfers ownership to the deployer.\"},\"initialized()\":{\"details\":\"Returns whether the contract has been initialized.\"},\"initializedKey()\":{\"details\":\"Returns the key used to store the initialization status.\"},\"lowLevelCall(address,bytes)\":{\"details\":\"Initiates a low-level call to the specified target address with the provided data. Only accessible by an address with the LOW_LEVEL_CALLER_ROLE.\"},\"members(bytes32,uint256)\":{\"details\":\"Public view function to retrieve the list of members for a specified role.This function returns the addresses that have the specified role in the order they were added.\",\"params\":{\"role\":\"The role for which to retrieve the members.\"},\"returns\":{\"_0\":\"address[] memory representing the array of addresses that have the specified role.\"}},\"membersLength(bytes32)\":{\"details\":\"Public view virtual function to retrieve the number of members in a role.\",\"params\":{\"role\":\"The role for which to retrieve the number of members.\"},\"returns\":{\"_0\":\"uint256 representing the number of members in the specified role.\"}},\"owner()\":{\"details\":\"Returns the current owner of the contract.\",\"returns\":{\"_0\":\"The address of the current owner.\"}},\"ownerkey()\":{\"details\":\"Returns the key for the owner in the storage mapping.\",\"returns\":{\"_0\":\"The key for the owner.\"}},\"pause()\":{\"details\":\"Pauses the contract. Only accessible by an address with the PAUSER_ROLE.\"},\"paused()\":{\"details\":\"Returns the current paused state.\"},\"pausedKey()\":{\"details\":\"Returns the key for the paused state.\"},\"renounceOwnership()\":{\"details\":\"Renounces ownership, leaving the contract without an owner.\"},\"requireRole(bytes32,address)\":{\"details\":\"Public function to require that the calling account has a specified role.If the account does not have the required role, it reverts with the \\\"Unauthorized\\\" error.\",\"params\":{\"account\":\"The address of the account to check for the specified role.\",\"role\":\"The role that the account must have.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Public function to revoke a role from a specified account.This function can only be called by a role admin.It revokes the specified role from the specified account and emits the RoleRevoked event.\",\"params\":{\"account\":\"The address of the account from which the role will be revoked.\",\"role\":\"The role to be revoked.\"}},\"roleAdminKey(bytes32)\":{\"details\":\"Public pure function to generate a unique key for the role admin of a specified role.\",\"params\":{\"role\":\"The role for which to generate the role admin key.\"},\"returns\":{\"_0\":\"bytes32 representing the unique key for the role admin of the specified role.\"}},\"roleKey(bytes32)\":{\"details\":\"Public pure function to generate a unique key for a role in the context of storing members.\",\"params\":{\"role\":\"The role for which to generate the key.\"},\"returns\":{\"_0\":\"bytes32 representing the unique key for the specified role in the context of storing members.\"}},\"roles(uint256)\":{\"details\":\"Public view function to retrieve the list of roles available.This function returns the roles in the order they were added.\",\"returns\":{\"_0\":\"bytes32[] memory representing the array of roles.\"}},\"rolesKey()\":{\"details\":\"Public pure function to generate a unique key for the set of available roles.\",\"returns\":{\"_0\":\"bytes32 representing the unique key for the set of available roles.\"}},\"rolesLength()\":{\"details\":\"Public view virtual function to retrieve the number of roles.\",\"returns\":{\"_0\":\"uint256 representing the number of roles.\"}},\"setInitialImplementation(address)\":{\"details\":\"Sets the initial implementation if it has not been set yet.\",\"params\":{\"implementation\":\"The address of the initial implementation.\"}},\"setRoleAdmin(bytes32,bytes32)\":{\"details\":\"Public function to set a new role admin for a specified role.This function can only be called by the default admin role.It sets the new role admin and emits the RoleAdminChanged event.\",\"params\":{\"newRoleAdmin\":\"The new role admin address.\",\"role\":\"The role for which the admin is being set.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses the contract. Only accessible by an address with the UNPAUSE_ROLE.\"},\"upgrade(address)\":{\"details\":\"Upgrades the contract's implementation. Only accessible by an address with the UPGRADER_ROLE and when the contract is paused.\",\"params\":{\"implementation\":\"The address of the new implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/main/terminal/implementation/ITerminalImplementation.sol\":\"ITerminalImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/access-control/IOwnable.sol\":{\"keccak256\":\"0x1d12c060033c0cf06f5cd380511eb0d6010576ad7a05fae23fcc3785621a3960\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://835791130f15ab2646166cc4b23fc2bbfb26cda6584c99958b2a06d8a01f34bb\",\"dweb:/ipfs/QmdVj4kNEYQNTUeYb2ay3NXTyWYNSLWbR1JeDyfjUda23a\"]},\"contracts/polygon/interfaces/access-control/IRole.sol\":{\"keccak256\":\"0x24c48a41699ae384f59cc206bf97227232cc36ae1e7666c9c5c184e4f4d0a5dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92da2da1d02ddac181c06b178653cd95a4fa5601b6c72b50f1d5923f1a61dde8\",\"dweb:/ipfs/QmUhVYgULzCkAEKeRjV4qjpGQx482F6zRkwpsSyqR15cui\"]},\"contracts/polygon/interfaces/main/terminal/implementation/ITerminalImplementation.sol\":{\"keccak256\":\"0x50ce58862ae9dd06907412eead2b418b0fb4e84787961baf91a553cd4430f904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43c76e006a410635e4f89a371a05b9d92847902c51e031d71382b30be3c762c\",\"dweb:/ipfs/QmSwr5WJCqbBp6nzoHL8iHiN6rjYZkir5uB3h3rSYWb4NW\"]},\"contracts/polygon/interfaces/proxy/IBase.sol\":{\"keccak256\":\"0x2adbb12fb4d61cd53eabd4519619fe728650133589ca7d2226486ae72a801a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7590939781664c022271a0229bace7bc63083a99647793c583eed009abda4b1a\",\"dweb:/ipfs/QmSp3vAMos5mYFVJ6BdadXfvPqWYeXw1Uk49vJLnqWsUks\"]},\"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol\":{\"keccak256\":\"0x702f784becc710f6a74aed7d98ff9e67e68d100e9e56e3278b765e23a8d29ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://169d67119a0796420acda4c350c07fe097d94d8f1048722151015937299a624d\",\"dweb:/ipfs/Qmdzgj8QWRadogUZNtCJVZCsVJf9wvuSVzeQPGsv4nyHvB\"]},\"contracts/polygon/interfaces/security/IPausable.sol\":{\"keccak256\":\"0x6559dfa291df7a5467753282ac863378c6a5c5c9079c43a1f98ac1860fdaf78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f186581d5e5b7ebf33c259aba3bbb18595610a28cd8f4b278c0b2284f5bb126\",\"dweb:/ipfs/QmcLLLN75D1Pu9ZM7RxgtKxL242wrNe9Mqmfdhvmbb4tj3\"]},\"contracts/polygon/interfaces/utils/ILowLevelCall.sol\":{\"keccak256\":\"0x6684b4b00c87738eeace5d79fe3d7f24adcd8a4c40d37a005ccb30b233371756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90643fe2567c559774ae24670ad0be2a94b83e95cd2cb66a3d386f799d410a49\",\"dweb:/ipfs/QmbYLM1e9CaE8LcWoCj18QWmNXXMuh1P31o2numJUz9iHo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/polygon/interfaces/proxy/IBase.sol": {
				"IBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "implementationId",
									"type": "uint256"
								}
							],
							"name": "implementationTimeline",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationTimelineKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationTimelineLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialImplementationHasBeenSet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialImplementationHasBeenSetKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "setInitialImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the contract is upgraded to a new implementation. ",
								"params": {
									"implementation": "The address of the new implementation contract."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"implementationKey()": {
								"details": "Returns the key used to store the address of the current implementation contract."
							},
							"implementationTimeline(uint256)": {
								"details": "Returns the implementation address at a specific timeline point.",
								"params": {
									"implementationId": "The index of the implementation in the timeline."
								}
							},
							"implementationTimelineKey()": {
								"details": "Returns the key used to store the timeline of implementation contracts."
							},
							"implementationTimelineLength()": {
								"details": "Returns the number of implementations in the timeline."
							},
							"initialImplementationHasBeenSet()": {
								"details": "Checks if the initial implementation has been set."
							},
							"initialImplementationHasBeenSetKey()": {
								"details": "Returns the key used to check if the initial implementation has been set."
							},
							"setInitialImplementation(address)": {
								"details": "Sets the initial implementation if it has not been set yet.",
								"params": {
									"implementation": "The address of the initial implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"implementationKey()": "f4358896",
							"implementationTimeline(uint256)": "780e9368",
							"implementationTimelineKey()": "667d4359",
							"implementationTimelineLength()": "985fcf9c",
							"initialImplementationHasBeenSet()": "0717f3e6",
							"initialImplementationHasBeenSetKey()": "2145b31a",
							"setInitialImplementation(address)": "fdb16540"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"implementationId\",\"type\":\"uint256\"}],\"name\":\"implementationTimeline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationTimelineKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationTimelineLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialImplementationHasBeenSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialImplementationHasBeenSetKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"setInitialImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the contract is upgraded to a new implementation. \",\"params\":{\"implementation\":\"The address of the new implementation contract.\"}}},\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"implementationKey()\":{\"details\":\"Returns the key used to store the address of the current implementation contract.\"},\"implementationTimeline(uint256)\":{\"details\":\"Returns the implementation address at a specific timeline point.\",\"params\":{\"implementationId\":\"The index of the implementation in the timeline.\"}},\"implementationTimelineKey()\":{\"details\":\"Returns the key used to store the timeline of implementation contracts.\"},\"implementationTimelineLength()\":{\"details\":\"Returns the number of implementations in the timeline.\"},\"initialImplementationHasBeenSet()\":{\"details\":\"Checks if the initial implementation has been set.\"},\"initialImplementationHasBeenSetKey()\":{\"details\":\"Returns the key used to check if the initial implementation has been set.\"},\"setInitialImplementation(address)\":{\"details\":\"Sets the initial implementation if it has not been set yet.\",\"params\":{\"implementation\":\"The address of the initial implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"NOTE: https://docs.openzeppelin.com/upgrades-plugins/1.x/proxies implementationKey => address implementationTimelineKey => addressArray initialImplementationHasBeenSetKey => address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/proxy/IBase.sol\":\"IBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/proxy/IBase.sol\":{\"keccak256\":\"0x2adbb12fb4d61cd53eabd4519619fe728650133589ca7d2226486ae72a801a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7590939781664c022271a0229bace7bc63083a99647793c583eed009abda4b1a\",\"dweb:/ipfs/QmSp3vAMos5mYFVJ6BdadXfvPqWYeXw1Uk49vJLnqWsUks\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "NOTE: https://docs.openzeppelin.com/upgrades-plugins/1.x/proxies implementationKey => address implementationTimelineKey => addressArray initialImplementationHasBeenSetKey => address",
						"version": 1
					}
				}
			},
			"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol": {
				"IDefaultImplementation": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "implementationId",
									"type": "uint256"
								}
							],
							"name": "implementationTimeline",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationTimelineKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementationTimelineLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialImplementationHasBeenSet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialImplementationHasBeenSetKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializedKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerkey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pausedKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "setInitialImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"OwnershipTransferred(address,address)": {
								"details": "Emitted when ownership of the contract is transferred.",
								"params": {
									"newOwner": "The address of the new owner.",
									"oldOwner": "The address of the old owner."
								}
							},
							"Paused()": {
								"details": "Emitted when the contract is paused."
							},
							"Unpaused()": {
								"details": "Emitted when the contract is unpaused."
							},
							"Upgraded(address)": {
								"details": "Emitted when the contract is upgraded to a new implementation. ",
								"params": {
									"implementation": "The address of the new implementation contract."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"implementationKey()": {
								"details": "Returns the key used to store the address of the current implementation contract."
							},
							"implementationTimeline(uint256)": {
								"details": "Returns the implementation address at a specific timeline point.",
								"params": {
									"implementationId": "The index of the implementation in the timeline."
								}
							},
							"implementationTimelineKey()": {
								"details": "Returns the key used to store the timeline of implementation contracts."
							},
							"implementationTimelineLength()": {
								"details": "Returns the number of implementations in the timeline."
							},
							"initialImplementationHasBeenSet()": {
								"details": "Checks if the initial implementation has been set."
							},
							"initialImplementationHasBeenSetKey()": {
								"details": "Returns the key used to check if the initial implementation has been set."
							},
							"initialize()": {
								"details": "Initializes the contract.  Can only be called if the contract has not been initialized yet."
							},
							"initialized()": {
								"details": "Returns whether the contract has been initialized."
							},
							"initializedKey()": {
								"details": "Returns the key used to store the initialization status."
							},
							"owner()": {
								"details": "Returns the current owner of the contract.",
								"returns": {
									"_0": "The address of the current owner."
								}
							},
							"ownerkey()": {
								"details": "Returns the key for the owner in the storage mapping.",
								"returns": {
									"_0": "The key for the owner."
								}
							},
							"paused()": {
								"details": "Returns the current paused state."
							},
							"pausedKey()": {
								"details": "Returns the key for the paused state."
							},
							"renounceOwnership()": {
								"details": "Renounces ownership, leaving the contract without an owner."
							},
							"setInitialImplementation(address)": {
								"details": "Sets the initial implementation if it has not been set yet.",
								"params": {
									"implementation": "The address of the initial implementation."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgrade(address)": {
								"details": "Upgrades the contract to a new implementation. Can only be called by the owner.",
								"params": {
									"implementation": "The address of the new implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"implementationKey()": "f4358896",
							"implementationTimeline(uint256)": "780e9368",
							"implementationTimelineKey()": "667d4359",
							"implementationTimelineLength()": "985fcf9c",
							"initialImplementationHasBeenSet()": "0717f3e6",
							"initialImplementationHasBeenSetKey()": "2145b31a",
							"initialize()": "8129fc1c",
							"initialized()": "158ef93e",
							"initializedKey()": "6676e926",
							"owner()": "8da5cb5b",
							"ownerkey()": "8133f6b1",
							"paused()": "5c975abb",
							"pausedKey()": "65ea2aa6",
							"renounceOwnership()": "715018a6",
							"setInitialImplementation(address)": "fdb16540",
							"transferOwnership(address)": "f2fde38b",
							"upgrade(address)": "0900f010"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"implementationId\",\"type\":\"uint256\"}],\"name\":\"implementationTimeline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationTimelineKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationTimelineLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialImplementationHasBeenSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialImplementationHasBeenSetKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializedKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"setInitialImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"Emitted when ownership of the contract is transferred.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"oldOwner\":\"The address of the old owner.\"}},\"Paused()\":{\"details\":\"Emitted when the contract is paused.\"},\"Unpaused()\":{\"details\":\"Emitted when the contract is unpaused.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the contract is upgraded to a new implementation. \",\"params\":{\"implementation\":\"The address of the new implementation contract.\"}}},\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"implementationKey()\":{\"details\":\"Returns the key used to store the address of the current implementation contract.\"},\"implementationTimeline(uint256)\":{\"details\":\"Returns the implementation address at a specific timeline point.\",\"params\":{\"implementationId\":\"The index of the implementation in the timeline.\"}},\"implementationTimelineKey()\":{\"details\":\"Returns the key used to store the timeline of implementation contracts.\"},\"implementationTimelineLength()\":{\"details\":\"Returns the number of implementations in the timeline.\"},\"initialImplementationHasBeenSet()\":{\"details\":\"Checks if the initial implementation has been set.\"},\"initialImplementationHasBeenSetKey()\":{\"details\":\"Returns the key used to check if the initial implementation has been set.\"},\"initialize()\":{\"details\":\"Initializes the contract.  Can only be called if the contract has not been initialized yet.\"},\"initialized()\":{\"details\":\"Returns whether the contract has been initialized.\"},\"initializedKey()\":{\"details\":\"Returns the key used to store the initialization status.\"},\"owner()\":{\"details\":\"Returns the current owner of the contract.\",\"returns\":{\"_0\":\"The address of the current owner.\"}},\"ownerkey()\":{\"details\":\"Returns the key for the owner in the storage mapping.\",\"returns\":{\"_0\":\"The key for the owner.\"}},\"paused()\":{\"details\":\"Returns the current paused state.\"},\"pausedKey()\":{\"details\":\"Returns the key for the paused state.\"},\"renounceOwnership()\":{\"details\":\"Renounces ownership, leaving the contract without an owner.\"},\"setInitialImplementation(address)\":{\"details\":\"Sets the initial implementation if it has not been set yet.\",\"params\":{\"implementation\":\"The address of the initial implementation.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address)\":{\"details\":\"Upgrades the contract to a new implementation. Can only be called by the owner.\",\"params\":{\"implementation\":\"The address of the new implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"initializedKey => bool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol\":\"IDefaultImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/access-control/IOwnable.sol\":{\"keccak256\":\"0x1d12c060033c0cf06f5cd380511eb0d6010576ad7a05fae23fcc3785621a3960\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://835791130f15ab2646166cc4b23fc2bbfb26cda6584c99958b2a06d8a01f34bb\",\"dweb:/ipfs/QmdVj4kNEYQNTUeYb2ay3NXTyWYNSLWbR1JeDyfjUda23a\"]},\"contracts/polygon/interfaces/proxy/IBase.sol\":{\"keccak256\":\"0x2adbb12fb4d61cd53eabd4519619fe728650133589ca7d2226486ae72a801a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7590939781664c022271a0229bace7bc63083a99647793c583eed009abda4b1a\",\"dweb:/ipfs/QmSp3vAMos5mYFVJ6BdadXfvPqWYeXw1Uk49vJLnqWsUks\"]},\"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol\":{\"keccak256\":\"0x702f784becc710f6a74aed7d98ff9e67e68d100e9e56e3278b765e23a8d29ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://169d67119a0796420acda4c350c07fe097d94d8f1048722151015937299a624d\",\"dweb:/ipfs/Qmdzgj8QWRadogUZNtCJVZCsVJf9wvuSVzeQPGsv4nyHvB\"]},\"contracts/polygon/interfaces/security/IPausable.sol\":{\"keccak256\":\"0x6559dfa291df7a5467753282ac863378c6a5c5c9079c43a1f98ac1860fdaf78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f186581d5e5b7ebf33c259aba3bbb18595610a28cd8f4b278c0b2284f5bb126\",\"dweb:/ipfs/QmcLLLN75D1Pu9ZM7RxgtKxL242wrNe9Mqmfdhvmbb4tj3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "initializedKey => bool",
						"version": 1
					}
				}
			},
			"contracts/polygon/interfaces/security/IPausable.sol": {
				"IPausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pausedKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused()": {
								"details": "Emitted when the contract is paused."
							},
							"Unpaused()": {
								"details": "Emitted when the contract is unpaused."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns the current paused state."
							},
							"pausedKey()": {
								"details": "Returns the key for the paused state."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb",
							"pausedKey()": "65ea2aa6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused()\":{\"details\":\"Emitted when the contract is paused.\"},\"Unpaused()\":{\"details\":\"Emitted when the contract is unpaused.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns the current paused state.\"},\"pausedKey()\":{\"details\":\"Returns the key for the paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/security/IPausable.sol\":\"IPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/security/IPausable.sol\":{\"keccak256\":\"0x6559dfa291df7a5467753282ac863378c6a5c5c9079c43a1f98ac1860fdaf78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f186581d5e5b7ebf33c259aba3bbb18595610a28cd8f4b278c0b2284f5bb126\",\"dweb:/ipfs/QmcLLLN75D1Pu9ZM7RxgtKxL242wrNe9Mqmfdhvmbb4tj3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/polygon/interfaces/utils/ILowLevelCall.sol": {
				"ILowLevelCall": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "response",
									"type": "bytes"
								}
							],
							"name": "LowLevelCall",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"LowLevelCall(address,bytes,bytes)": {
								"details": "Emitted when a low-level call is executed.",
								"params": {
									"data": "The data passed to the call.",
									"response": "The response received from the call.",
									"target": "The target address of the call."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"LowLevelCall\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"LowLevelCall(address,bytes,bytes)\":{\"details\":\"Emitted when a low-level call is executed.\",\"params\":{\"data\":\"The data passed to the call.\",\"response\":\"The response received from the call.\",\"target\":\"The target address of the call.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/polygon/interfaces/utils/ILowLevelCall.sol\":\"ILowLevelCall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polygon/interfaces/utils/ILowLevelCall.sol\":{\"keccak256\":\"0x6684b4b00c87738eeace5d79fe3d7f24adcd8a4c40d37a005ccb30b233371756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90643fe2567c559774ae24670ad0be2a94b83e95cd2cb66a3d386f799d410a49\",\"dweb:/ipfs/QmbYLM1e9CaE8LcWoCj18QWmNXXMuh1P31o2numJUz9iHo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/polygon/interfaces/access-control/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/access-control/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:29:0",
								"text": " ownerKey => address"
							},
							"fullyImplemented": false,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "IOwnable",
							"nameLocation": "97:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "113:180:0",
										"text": " @dev Emitted when ownership of the contract is transferred.\n @param oldOwner The address of the old owner.\n @param newOwner The address of the new owner."
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 9,
									"name": "OwnershipTransferred",
									"nameLocation": "304:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "341:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "325:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "351:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:52:0"
									},
									"src": "298:79:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "383:112:0",
										"text": " @dev Returns the key for the owner in the storage mapping.\n @return The key for the owner."
									},
									"functionSelector": "8133f6b1",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerkey",
									"nameLocation": "509:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "543:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 12,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:9:0"
									},
									"scope": 32,
									"src": "500:52:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "558:112:0",
										"text": " @dev Returns the current owner of the contract.\n @return The address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "684:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 32,
									"src": "675:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "730:81:0",
										"text": " @dev Renounces ownership, leaving the contract without an owner."
									},
									"functionSelector": "715018a6",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceOwnership",
									"nameLocation": "825:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:0:0"
									},
									"scope": 32,
									"src": "816:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "860:135:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "1009:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1035:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1027:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:18:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:0"
									},
									"scope": 32,
									"src": "1000:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "87:969:0",
							"usedErrors": []
						}
					],
					"src": "32:1024:0"
				},
				"id": 0
			},
			"contracts/polygon/interfaces/access-control/IRole.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/access-control/IRole.sol",
					"exportedSymbols": {
						"IRole": [
							187
						]
					},
					"id": 188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 34,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRole",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IRole",
							"nameLocation": "68:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "81:285:1",
										"text": " @dev Emitted when the admin role of a role is changed.\n @param role The role for which the admin role is changed.\n @param oldAdminRole The previous admin role of the specified role.\n @param newAdminRole The new admin role assigned to the specified role."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 43,
									"name": "RoleAdminChanged",
									"nameLocation": "377:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "410:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "394:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAdminRole",
												"nameLocation": "432:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "416:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "462:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "446:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 40,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:82:1"
									},
									"src": "371:105:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "482:226:1",
										"text": " @dev Emitted when an account is granted a role.\n @param role The role that is granted.\n @param account The address that is granted the role.\n @param sender The address initiating the role grant."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 52,
									"name": "RoleGranted",
									"nameLocation": "719:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "747:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "731:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "769:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "753:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "794:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "778:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:71:1"
									},
									"src": "713:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "808:233:1",
										"text": " @dev Emitted when an account has a role revoked.\n @param role The role that is revoked.\n @param account The address that has the role revoked.\n @param sender The address initiating the role revocation."
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 61,
									"name": "RoleRevoked",
									"nameLocation": "1052:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1080:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1064:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1086:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1127:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1111:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:71:1"
									},
									"src": "1046:89:1"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1141:218:1",
										"text": " @dev Reverts with \"Unauthorized\" error if an account lacks the required role.\n @param account The address that lacks the required role.\n @param roleRequired The required role that is missing."
									},
									"errorSelector": "245329c6",
									"id": 68,
									"name": "Unauthorized",
									"nameLocation": "1370:12:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1391:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "roleRequired",
												"nameLocation": "1408:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1400:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:39:1"
									},
									"src": "1364:58:1"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1428:209:1",
										"text": " @dev Public pure function to compute the keccak256 hash of a given string.\n @param dat The input string to hash.\n @return bytes32 representing the keccak256 hash of the input string."
									},
									"functionSelector": "b411ee94",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "1651:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "dat",
												"nameLocation": "1670:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1656:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 70,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1656:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:19:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1698:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1697:9:1"
									},
									"scope": 187,
									"src": "1642:65:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1713:181:1",
										"text": " @dev Public pure function to generate a unique key for the set of available roles.\n @return bytes32 representing the unique key for the set of available roles."
									},
									"functionSelector": "9db80bf0",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rolesKey",
									"nameLocation": "1908:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:2:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1942:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 79,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:9:1"
									},
									"scope": 187,
									"src": "1899:52:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "1957:279:1",
										"text": " @dev Public pure function to generate a unique key for a role in the context of storing members.\n @param role The role for which to generate the key.\n @return bytes32 representing the unique key for the specified role in the context of storing members."
									},
									"functionSelector": "a657a47e",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "roleKey",
									"nameLocation": "2250:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2266:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2258:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:14:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2295:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 87,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:9:1"
									},
									"scope": 187,
									"src": "2241:63:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2310:268:1",
										"text": " @dev Public pure function to generate a unique key for the role admin of a specified role.\n @param role The role for which to generate the role admin key.\n @return bytes32 representing the unique key for the role admin of the specified role."
									},
									"functionSelector": "bccf0e5e",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "roleAdminKey",
									"nameLocation": "2592:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2613:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2605:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2604:14:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2642:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2641:9:1"
									},
									"scope": 187,
									"src": "2583:68:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2657:286:1",
										"text": " @dev Public pure virtual function to generate a unique key for the default admin role.\n @return bytes32 representing the unique key for the default admin role.\n @dev This function must be implemented in derived contracts to provide the default admin role key."
									},
									"functionSelector": "1e18f5c9",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultAdminRoleKey",
									"nameLocation": "2957:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2976:2:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3002:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 101,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3001:9:1"
									},
									"scope": 187,
									"src": "2948:63:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3017:289:1",
										"text": " @dev Public view function to check if an account has a specified role.\n @param role The role for which to check.\n @param account The address of the account to check for the specified role.\n @return bool indicating whether the account has the specified role."
									},
									"functionSelector": "91d14854",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3320:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3336:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3328:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3328:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3350:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3342:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3327:31:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3382:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3382:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3381:6:1"
									},
									"scope": 187,
									"src": "3311:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3394:361:1",
										"text": " @dev Public view function to retrieve the list of members for a specified role.\n @param role The role for which to retrieve the members.\n @return address[] memory representing the array of addresses that have the specified role.\n @dev This function returns the addresses that have the specified role in the order they were added."
									},
									"functionSelector": "92beb2a1",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "members",
									"nameLocation": "3769:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3785:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3777:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3799:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3791:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:26:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3826:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3825:9:1"
									},
									"scope": 187,
									"src": "3760:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3841:247:1",
										"text": " @dev Public view virtual function to retrieve the number of members in a role.\n @param role The role for which to retrieve the number of members.\n @return uint256 representing the number of members in the specified role."
									},
									"functionSelector": "d52f8024",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "membersLength",
									"nameLocation": "4102:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 126,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:14:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:9:1"
									},
									"scope": 187,
									"src": "4093:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4168:220:1",
										"text": " @dev Public view function to retrieve the list of roles available.\n @return bytes32[] memory representing the array of roles.\n @dev This function returns the roles in the order they were added."
									},
									"functionSelector": "bfda4a49",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "roles",
									"nameLocation": "4402:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4416:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "4408:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:12:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "4443:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:1"
									},
									"scope": 187,
									"src": "4393:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "4458:139:1",
										"text": " @dev Public view virtual function to retrieve the number of roles.\n @return uint256 representing the number of roles."
									},
									"functionSelector": "9dce27ae",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rolesLength",
									"nameLocation": "4611:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4622:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4648:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4647:9:1"
									},
									"scope": 187,
									"src": "4602:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4663:332:1",
										"text": " @dev Public function to require that the calling account has a specified role.\n @param role The role that the account must have.\n @param account The address of the account to check for the specified role.\n @dev If the account does not have the required role, it reverts with the \"Unauthorized\" error."
									},
									"functionSelector": "d09a20c5",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requireRole",
									"nameLocation": "5009:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5029:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5021:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5020:31:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5065:0:1"
									},
									"scope": 187,
									"src": "5000:66:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "5072:230:1",
										"text": " @dev Public view function to retrieve the admin role for a specified role.\n @param role The role for which to retrieve the admin role.\n @return bytes32 representing the admin role for the specified role."
									},
									"functionSelector": "248a9ca3",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "5316:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5337:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5329:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:14:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5366:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5365:9:1"
									},
									"scope": 187,
									"src": "5307:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5381:361:1",
										"text": " @dev Public function to grant a role to a specified account.\n @param role The role to be granted.\n @param account The address of the account to which the role will be granted.\n @dev This function can only be called by a role admin.\n @dev It grants the specified role to the specified account and emits the RoleGranted event."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "5756:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5774:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5766:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5788:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5780:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5765:31:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5805:0:1"
									},
									"scope": 187,
									"src": "5747:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5812:369:1",
										"text": " @dev Public function to revoke a role from a specified account.\n @param role The role to be revoked.\n @param account The address of the account from which the role will be revoked.\n @dev This function can only be called by a role admin.\n @dev It revokes the specified role from the specified account and emits the RoleRevoked event."
									},
									"functionSelector": "d547741f",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "6195:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6214:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "6206:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6228:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "6220:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6220:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6205:31:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6245:0:1"
									},
									"scope": 187,
									"src": "6186:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "6252:345:1",
										"text": " @dev Public function to set a new role admin for a specified role.\n @param role The role for which the admin is being set.\n @param newRoleAdmin The new role admin address.\n @dev This function can only be called by the default admin role.\n @dev It sets the new role admin and emits the RoleAdminChanged event."
									},
									"functionSelector": "1e4e0091",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRoleAdmin",
									"nameLocation": "6611:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6632:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6624:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 180,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "newRoleAdmin",
												"nameLocation": "6646:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "6638:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:36:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6668:0:1"
									},
									"scope": 187,
									"src": "6602:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 188,
							"src": "58:6613:1",
							"usedErrors": [
								68
							]
						}
					],
					"src": "32:6639:1"
				},
				"id": 1
			},
			"contracts/polygon/interfaces/main/terminal/implementation/ITerminalImplementation.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/main/terminal/implementation/ITerminalImplementation.sol",
					"exportedSymbols": {
						"IBase": [
							287
						],
						"IDefaultImplementation": [
							322
						],
						"ILowLevelCall": [
							355
						],
						"IOwnable": [
							32
						],
						"IPausable": [
							343
						],
						"IRole": [
							187
						],
						"ITerminalImplementation": [
							228
						]
					},
					"id": 229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "contracts/polygon/interfaces/proxy/IDefaultImplementation.sol",
							"file": "contracts/polygon/interfaces/proxy/IDefaultImplementation.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 323,
							"src": "56:71:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/polygon/interfaces/access-control/IRole.sol",
							"file": "contracts/polygon/interfaces/access-control/IRole.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 188,
							"src": "128:63:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/polygon/interfaces/security/IPausable.sol",
							"file": "contracts/polygon/interfaces/security/IPausable.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 344,
							"src": "192:61:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/polygon/interfaces/utils/ILowLevelCall.sol",
							"file": "contracts/polygon/interfaces/utils/ILowLevelCall.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 356,
							"src": "254:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 194,
										"name": "IDefaultImplementation",
										"nameLocations": [
											"355:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 322,
										"src": "355:22:2"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "355:22:2"
								},
								{
									"baseName": {
										"id": 196,
										"name": "IRole",
										"nameLocations": [
											"379:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 187,
										"src": "379:5:2"
									},
									"id": 197,
									"nodeType": "InheritanceSpecifier",
									"src": "379:5:2"
								},
								{
									"baseName": {
										"id": 198,
										"name": "ILowLevelCall",
										"nameLocations": [
											"386:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 355,
										"src": "386:13:2"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "386:13:2"
								}
							],
							"canonicalName": "ITerminalImplementation",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								355,
								187,
								322,
								343,
								32,
								287
							],
							"name": "ITerminalImplementation",
							"nameLocation": "328:23:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										321
									],
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "407:182:2",
										"text": " @dev Initializes the contract. This function is called only once during deployment.\n It sets the initial implementation and transfers ownership to the deployer."
									},
									"functionSelector": "8129fc1c",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "603:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:2:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:2"
									},
									"scope": 228,
									"src": "594:31:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										317
									],
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "631:220:2",
										"text": " @dev Upgrades the contract's implementation. Only accessible by an address with the UPGRADER_ROLE\n and when the contract is paused.\n @param implementation The address of the new implementation."
									},
									"functionSelector": "0900f010",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "865:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "881:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "873:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:24:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:0:2"
									},
									"scope": 228,
									"src": "856:50:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "912:94:2",
										"text": " @dev Pauses the contract. Only accessible by an address with the PAUSER_ROLE."
									},
									"functionSelector": "8456cb59",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "1020:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:0:2"
									},
									"scope": 228,
									"src": "1011:26:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1043:97:2",
										"text": " @dev Unpauses the contract. Only accessible by an address with the UNPAUSE_ROLE."
									},
									"functionSelector": "3f4ba83a",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "1154:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:2:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:0:2"
									},
									"scope": 228,
									"src": "1145:28:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1179:172:2",
										"text": " @dev Initiates a low-level call to the specified target address with the provided data.\n Only accessible by an address with the LOW_LEVEL_CALLER_ROLE."
									},
									"functionSelector": "bae07360",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lowLevelCall",
									"nameLocation": "1365:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1386:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1378:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1407:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1394:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1394:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:35:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1431:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1431:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:14:2"
									},
									"scope": 228,
									"src": "1356:89:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "318:1129:2",
							"usedErrors": [
								68
							]
						}
					],
					"src": "32:1415:2"
				},
				"id": 2
			},
			"contracts/polygon/interfaces/proxy/IBase.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/proxy/IBase.sol",
					"exportedSymbols": {
						"IBase": [
							287
						]
					},
					"id": 288,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBase",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "57:199:3",
								"text": " NOTE: https://docs.openzeppelin.com/upgrades-plugins/1.x/proxies\n implementationKey => address\n implementationTimelineKey => addressArray\n initialImplementationHasBeenSetKey => address"
							},
							"fullyImplemented": false,
							"id": 287,
							"linearizedBaseContracts": [
								287
							],
							"name": "IBase",
							"nameLocation": "267:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "280:167:3",
										"text": " @dev Emitted when the contract is upgraded to a new implementation.\n \n @param implementation The address of the new implementation contract."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 236,
									"name": "Upgraded",
									"nameLocation": "458:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "483:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "467:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:32:3"
									},
									"src": "452:47:3"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "505:103:3",
										"text": " @dev Returns the key used to store the address of the current implementation contract."
									},
									"functionSelector": "f4358896",
									"id": 242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementationKey",
									"nameLocation": "622:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:3"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "665:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:9:3"
									},
									"scope": 287,
									"src": "613:61:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "680:93:3",
										"text": " @dev Returns the key used to store the timeline of implementation contracts."
									},
									"functionSelector": "667d4359",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementationTimelineKey",
									"nameLocation": "787:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:3"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "838:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:3"
									},
									"scope": 287,
									"src": "778:69:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "853:95:3",
										"text": " @dev Returns the key used to check if the initial implementation has been set."
									},
									"functionSelector": "2145b31a",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialImplementationHasBeenSetKey",
									"nameLocation": "962:34:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:3"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1022:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1022:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:6:3"
									},
									"scope": 287,
									"src": "953:75:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1034:65:3",
										"text": " @dev Returns the current implementation address."
									},
									"functionSelector": "5c60da1b",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "1113:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:2:3"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1153:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:9:3"
									},
									"scope": 287,
									"src": "1104:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1168:165:3",
										"text": " @dev Returns the implementation address at a specific timeline point.\n @param implementationId The index of the implementation in the timeline."
									},
									"functionSelector": "780e9368",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementationTimeline",
									"nameLocation": "1347:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "implementationId",
												"nameLocation": "1378:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1370:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:26:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1419:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:9:3"
									},
									"scope": 287,
									"src": "1338:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1434:76:3",
										"text": " @dev Returns the number of implementations in the timeline."
									},
									"functionSelector": "985fcf9c",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementationTimelineLength",
									"nameLocation": "1524:28:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1552:2:3"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1578:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:9:3"
									},
									"scope": 287,
									"src": "1515:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1593:72:3",
										"text": " @dev Checks if the initial implementation has been set."
									},
									"functionSelector": "0717f3e6",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialImplementationHasBeenSet",
									"nameLocation": "1679:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1736:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:6:3"
									},
									"scope": 287,
									"src": "1670:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1748:152:3",
										"text": " @dev Sets the initial implementation if it has not been set yet.\n @param implementation The address of the initial implementation."
									},
									"functionSelector": "fdb16540",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInitialImplementation",
									"nameLocation": "1914:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1947:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1939:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:24:3"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1971:0:3"
									},
									"scope": 287,
									"src": "1905:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 288,
							"src": "257:1717:3",
							"usedErrors": []
						}
					],
					"src": "32:1942:3"
				},
				"id": 3
			},
			"contracts/polygon/interfaces/proxy/IDefaultImplementation.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/proxy/IDefaultImplementation.sol",
					"exportedSymbols": {
						"IBase": [
							287
						],
						"IDefaultImplementation": [
							322
						],
						"IOwnable": [
							32
						],
						"IPausable": [
							343
						]
					},
					"id": 323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 289,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/polygon/interfaces/proxy/IBase.sol",
							"file": "contracts/polygon/interfaces/proxy/IBase.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 288,
							"src": "56:54:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/polygon/interfaces/access-control/IOwnable.sol",
							"file": "contracts/polygon/interfaces/access-control/IOwnable.sol",
							"id": 291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 33,
							"src": "111:66:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/polygon/interfaces/security/IPausable.sol",
							"file": "contracts/polygon/interfaces/security/IPausable.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 344,
							"src": "178:61:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 294,
										"name": "IBase",
										"nameLocations": [
											"310:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 287,
										"src": "310:5:4"
									},
									"id": 295,
									"nodeType": "InheritanceSpecifier",
									"src": "310:5:4"
								},
								{
									"baseName": {
										"id": 296,
										"name": "IOwnable",
										"nameLocations": [
											"317:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 32,
										"src": "317:8:4"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "317:8:4"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IPausable",
										"nameLocations": [
											"327:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 343,
										"src": "327:9:4"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "327:9:4"
								}
							],
							"canonicalName": "IDefaultImplementation",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "241:32:4",
								"text": " initializedKey => bool"
							},
							"fullyImplemented": false,
							"id": 322,
							"linearizedBaseContracts": [
								322,
								343,
								32,
								287
							],
							"name": "IDefaultImplementation",
							"nameLocation": "284:22:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "348:78:4",
										"text": " @dev Returns the key used to store the initialization status."
									},
									"functionSelector": "6676e926",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializedKey",
									"nameLocation": "440:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "480:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:9:4"
									},
									"scope": 322,
									"src": "431:58:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "495:72:4",
										"text": " @dev Returns whether the contract has been initialized."
									},
									"functionSelector": "158ef93e",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialized",
									"nameLocation": "581:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "618:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:6:4"
									},
									"scope": 322,
									"src": "572:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "630:174:4",
										"text": " @dev Upgrades the contract to a new implementation.\n Can only be called by the owner.\n @param implementation The address of the new implementation."
									},
									"functionSelector": "0900f010",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "818:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "834:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "826:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:24:4"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:4"
									},
									"scope": 322,
									"src": "809:50:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "865:119:4",
										"text": " @dev Initializes the contract. \n Can only be called if the contract has not been initialized yet."
									},
									"functionSelector": "8129fc1c",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "998:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:4"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:0:4"
									},
									"scope": 322,
									"src": "989:31:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 323,
							"src": "274:748:4",
							"usedErrors": []
						}
					],
					"src": "32:990:4"
				},
				"id": 4
			},
			"contracts/polygon/interfaces/security/IPausable.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/security/IPausable.sol",
					"exportedSymbols": {
						"IPausable": [
							343
						]
					},
					"id": 344,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 324,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPausable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 343,
							"linearizedBaseContracts": [
								343
							],
							"name": "IPausable",
							"nameLocation": "67:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "84:58:5",
										"text": " @dev Emitted when the contract is paused."
									},
									"eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
									"id": 327,
									"name": "Paused",
									"nameLocation": "153:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:2:5"
									},
									"src": "147:15:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "168:60:5",
										"text": " @dev Emitted when the contract is unpaused."
									},
									"eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
									"id": 330,
									"name": "Unpaused",
									"nameLocation": "239:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:5"
									},
									"src": "233:17:5"
								},
								{
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "256:59:5",
										"text": " @dev Returns the key for the paused state."
									},
									"functionSelector": "65ea2aa6",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pausedKey",
									"nameLocation": "329:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:5"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "364:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:9:5"
									},
									"scope": 343,
									"src": "320:53:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "379:55:5",
										"text": " @dev Returns the current paused state."
									},
									"functionSelector": "5c975abb",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "448:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:5"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "480:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "480:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:6:5"
									},
									"scope": 343,
									"src": "439:47:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 344,
							"src": "57:431:5",
							"usedErrors": []
						}
					],
					"src": "32:456:5"
				},
				"id": 5
			},
			"contracts/polygon/interfaces/utils/ILowLevelCall.sol": {
				"ast": {
					"absolutePath": "contracts/polygon/interfaces/utils/ILowLevelCall.sol",
					"exportedSymbols": {
						"ILowLevelCall": [
							355
						]
					},
					"id": 356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 345,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILowLevelCall",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 355,
							"linearizedBaseContracts": [
								355
							],
							"name": "ILowLevelCall",
							"nameLocation": "67:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "88:222:6",
										"text": " @dev Emitted when a low-level call is executed.\n @param target The target address of the call.\n @param data The data passed to the call.\n @param response The response received from the call."
									},
									"eventSelector": "2bbbbbf24d2d80cec39de7a4633cf4c5e30a805731376b32927d93fd29cec143",
									"id": 354,
									"name": "LowLevelCall",
									"nameLocation": "321:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "350:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "334:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": true,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "372:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "358:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "358:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "response",
												"nameLocation": "392:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "378:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "378:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:68:6"
									},
									"src": "315:87:6"
								}
							],
							"scope": 356,
							"src": "57:347:6",
							"usedErrors": []
						}
					],
					"src": "32:372:6"
				},
				"id": 6
			}
		}
	}
}